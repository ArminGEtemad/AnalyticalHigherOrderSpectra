(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    423307,       8321]
NotebookOptionsPosition[    415855,       8191]
NotebookOutlinePosition[    416247,       8207]
CellTagsIndexPosition[    416204,       8204]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Poly-spectra from Multiple Detectors", "Title",
 CellChangeTimes->{
  3.936789006497303*^9},ExpressionUUID->"e2af0a20-4623-421f-a93b-\
bc7bbb16aa90"],

Cell["MiniQuantumCatch For Multi-Detectors", "Subtitle",
 CellChangeTimes->{
  3.936789016966531*^9},ExpressionUUID->"fbbdfb67-d76c-43b5-a1b9-\
672bafeca68b"],

Cell[CellGroupData[{

Cell["Defining Helper Functions", "Chapter",
 CellChangeTimes->{
  3.936789031480324*^9},ExpressionUUID->"d9a02863-91fb-4c0b-9660-\
92dbeb436084"],

Cell[CellGroupData[{

Cell["Superoperators & Steady-State", "Section",
 CellChangeTimes->{{3.936789330170803*^9, 
  3.936789341971718*^9}},ExpressionUUID->"99b945c6-8c58-426f-9e6f-\
5ca9490ea5de"],

Cell[TextData[{
 "First we calculate the Liouvillian Superoperator as a 2D matrix. This \
Liouvillian has ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "\[Times]", 
    SuperscriptBox["n", "2"]}], TraditionalForm]],ExpressionUUID->
  "3bdea147-0aa3-4966-9d55-fbf08282c8c9"],
 " elements. To calculate it, here we use the relation:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"vec", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["A", "TI"], 
             StyleBox["B", "TI"], 
             StyleBox["C", "TI"]}], ")"}], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["C", "TI"], 
          StyleBox["T", "TI"]], "\[CircleTimes]", 
         StyleBox["A", "TI"], "vec", 
         RowBox[{"(", 
           StyleBox["B", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\text{vec}(ABC)=C^T\\otimes A \\text{vec}(B)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e29e0bd6-ae50-4172-8abb-d79560b339d4"],
 ". The vectorized or flattened matrix is for example ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"vec", 
         RowBox[{"(", 
           RowBox[{"(", 
             Cell[
              BoxData[
               FormBox[
                GridBox[{{
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["a", "TI"], "InlineFormula"], " "}]], 
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["b", "TI"], "InlineFormula"], " "}]]}, {
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["c", "TI"], "InlineFormula"], " "}]], 
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["d", "TI"], "InlineFormula"], " "}]]}}], 
                TraditionalForm]]], ")"}], ")"}], "\[LongEqual]"}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "\\text{vec}\\left(\\begin{pmatrix}a&b\\\\c&d\\end{pmatrix}\\right)=", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c2c17cb0-1f2a-4180-a40c-d4d80292eb5b"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         Cell[
          BoxData[
           FormBox[
            GridBox[{{
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["a", "TI"], "InlineFormula"], " "}]]}, {
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["c", "TI"], "InlineFormula"], " "}]]}, {
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["b", "TI"], "InlineFormula"], " "}]]}, {
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["d", "TI"], "InlineFormula"], " "}]]}}], 
            TraditionalForm]]], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\begin{pmatrix} a\\\\c\\\\b\\\\d\\end{pmatrix}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ff7b6a5a-b3ea-4308-bcf4-571fe6445326"],
 "\nHowever, it is in our interest to redefine vectorizing in this way: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"vec", 
         RowBox[{"(", 
           RowBox[{"(", 
             Cell[
              BoxData[
               FormBox[
                GridBox[{{
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["a", "TI"], "InlineFormula"], " "}]], 
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["b", "TI"], "InlineFormula"], " "}]]}, {
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["c", "TI"], "InlineFormula"], " "}]], 
                   Cell[
                    TextData[{" ", 
                    Cell[
                    StyleBox["d", "TI"], "InlineFormula"], " "}]]}}], 
                TraditionalForm]]], ")"}], ")"}], "\[LongEqual]"}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "\\text{vec}\\left(\\begin{pmatrix}a&b\\\\c&d\\end{pmatrix}\\right)=", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "14ad02ab-a7ed-413e-ae8a-3bd797cebf7b"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"(", 
         Cell[
          BoxData[
           FormBox[
            GridBox[{{
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["a", "TI"], "InlineFormula"], " "}]]}, {
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["b", "TI"], "InlineFormula"], " "}]]}, {
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["c", "TI"], "InlineFormula"], " "}]]}, {
               Cell[
                TextData[{" ", 
                  Cell[
                   StyleBox["d", "TI"], "InlineFormula"], " "}]]}}], 
            TraditionalForm]]], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\begin{pmatrix} a\\\\b\\\\c\\\\d\\end{pmatrix}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bfbe8179-fd43-4111-a7bf-99e2afa636c7"],
 "\nThis new way of vectorizing will spare of the headache will are going to \
suffer from ordering other matrices. Mathematically, the new way of \
vectorization work in the way that we first calculate the transposed matrix \
and then do the vectorization. The new equation would then look like the \
following:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"vec", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["A", "TI"], 
             StyleBox["B", "TI"], 
             StyleBox["C", "TI"]}], ")"}], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["C", "TI"], 
          StyleBox["T", "TI"]], "\[CircleTimes]", 
         StyleBox["A", "TI"], 
         StyleBox["K", "TI"], "vec", 
         RowBox[{"(", 
           SuperscriptBox[
            StyleBox["B", "TI"], 
            StyleBox["T", "TI"]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\text{vec}(ABC)=C^T \\otimes A K \\text{vec}(B^T)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "dba2b5bc-dc5e-45d7-911e-af73b2d761f1"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["K", "TI"], TraditionalForm], "errors" -> {}, "input" -> "K", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1fad2b46-f11e-4112-bae0-4f230758c6d6"],
 " is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "\[Times]", 
    SuperscriptBox["n", "2"]}], TraditionalForm]],ExpressionUUID->
  "456fa50b-bb15-47ce-9e22-0485b27d118c"],
 " matrix called Commutation matrix (has nothing to do with commutator). The \
commutation matrix has the property: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["K", "TI"], "vec", 
         RowBox[{"(", 
           SuperscriptBox[
            StyleBox["B", "TI"], 
            StyleBox["T", "TI"]], ")"}], "\[LongEqual]", "vec", 
         RowBox[{"(", 
           StyleBox["B", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "K \\text{vec}(B^T)=\\text{vec}(B)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "34333ed9-e48b-417a-861d-99f270ae2712"],
 "\nRewriting it : ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["K", "TI"], "vec", 
         RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"(", 
              RowBox[{
                StyleBox["A", "TI"], 
                StyleBox["B", "TI"], 
                StyleBox["C", "TI"]}], ")"}], 
            StyleBox["T", "TI"]], ")"}], "\[LongEqual]", 
         StyleBox["K", "TI"], 
         SuperscriptBox[
          StyleBox["C", "TI"], 
          StyleBox["T", "TI"]], "\[CircleTimes]", 
         StyleBox["A", "TI"], 
         StyleBox["K", "TI"], "vec", 
         RowBox[{"(", 
           SuperscriptBox[
            StyleBox["B", "TI"], 
            StyleBox["T", "TI"]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "K \\text{vec}((ABC)^T)=KC^T \\otimes A K \\text{vec}(B^T)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4e265d8e-9c71-460b-8174-90bd8b27c575"],
 "\nHere I don\[CloseCurlyQuote]t provide any proof (But it can be found in \
my OneNote and later in obsidian) how to prove the following:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["L", "TI"], "1"], "\[LongEqual]", 
         StyleBox["i", "TI"], 
         StyleBox["K", "TI"], 
         RowBox[{"(", 
           RowBox[{
             SuperscriptBox[
              StyleBox["H", "TI"], 
              StyleBox["T", "TI"]], "\[CircleTimes]", 
             StyleBox["I", "TI"], "-", 
             StyleBox["I", "TI"], "\[CircleTimes]", 
             StyleBox["H", "TI"]}], ")"}], 
         StyleBox["K", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "L_1=iK(H^T\\otimes I - I \\otimes H)K", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e99c7169-c672-4028-b87f-b005db0439d2"],
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["L", "TI"], "2"], "\[LongEqual]", 
         UnderscriptBox["\[Sum]", 
          StyleBox["j", "TI"], LimitsPositioning -> True], 
         SubscriptBox["\[Gamma]", 
          StyleBox["j", "TI"]], 
         StyleBox["K", "TI"], 
         RowBox[{"(", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["d", "TI"], 
              StyleBox["j", "TI"], "*"], "\[CircleTimes]", 
             SubscriptBox[
              StyleBox["d", "TI"], 
              StyleBox["j", "TI"]]}], ")"}], 
         StyleBox["K", "TI"], "+", 
         UnderscriptBox["\[Sum]", 
          StyleBox["j", "TI"], LimitsPositioning -> True], 
         SubsuperscriptBox["\[Beta]", 
          StyleBox["j", "TI"], "2"], 
         StyleBox["K", "TI"], 
         RowBox[{"(", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["c", "TI"], 
              StyleBox["j", "TI"], "*"], "\[CircleTimes]", 
             SubscriptBox[
              StyleBox["c", "TI"], 
              StyleBox["j", "TI"]]}], ")"}], 
         StyleBox["K", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "L_2=\\sum_j \\gamma_jK(d_j^*\\otimes d_j)K+ \
\\sum_j\\beta_j^2K(c_j^*\\otimes c_j)K", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "12f67cad-5082-44a2-b1b6-fccd8a59b03b"],
 "\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["L", "TI"], "3"], "\[LongEqual]", "-", 
         UnderscriptBox["\[Sum]", 
          StyleBox["j", "TI"], LimitsPositioning -> True], 
         SubscriptBox["\[Gamma]", 
          StyleBox["j", "TI"]], 
         StyleBox["K", "TI"], 
         FractionBox[
          RowBox[{
            StyleBox["I", "TI"], "\[CircleTimes]", 
            RowBox[{"(", 
              RowBox[{
                SubsuperscriptBox[
                 StyleBox["d", "TI"], 
                 StyleBox["j", "TI"], "\[Dagger]"], 
                SubscriptBox[
                 StyleBox["d", "TI"], 
                 StyleBox["j", "TI"]]}], ")"}], "+", 
            RowBox[{"(", 
              RowBox[{
                SubsuperscriptBox[
                 StyleBox["d", "TI"], 
                 StyleBox["j", "TI"], 
                 StyleBox["T", "TI"]], 
                SubsuperscriptBox[
                 StyleBox["d", "TI"], 
                 StyleBox["j", "TI"], "*"]}], ")"}], "\[CircleTimes]", 
            StyleBox["I", "TI"]}], "2"], 
         StyleBox["K", "TI"], "-", 
         UnderscriptBox["\[Sum]", 
          StyleBox["j", "TI"], LimitsPositioning -> True], 
         SubsuperscriptBox["\[Beta]", 
          StyleBox["j", "TI"], "2"], 
         StyleBox["K", "TI"], 
         FractionBox[
          RowBox[{
            StyleBox["I", "TI"], "\[CircleTimes]", 
            RowBox[{"(", 
              RowBox[{
                SubsuperscriptBox[
                 StyleBox["c", "TI"], 
                 StyleBox["j", "TI"], "\[Dagger]"], 
                SubscriptBox[
                 StyleBox["c", "TI"], 
                 StyleBox["j", "TI"]]}], ")"}], "+", 
            RowBox[{"(", 
              RowBox[{
                SubsuperscriptBox[
                 StyleBox["c", "TI"], 
                 StyleBox["j", "TI"], 
                 StyleBox["T", "TI"]], 
                SubsuperscriptBox[
                 StyleBox["c", "TI"], 
                 StyleBox["j", "TI"], "*"]}], ")"}], "\[CircleTimes]", 
            StyleBox["I", "TI"]}], "2"], 
         StyleBox["K", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "L_3=-\\sum_j \\gamma_j K\\frac{I \\otimes (d_j^\\dagger d_j)+(d_j^T \
d_j^*) \\otimes I}{2}K-\\sum_j \\beta_j^2K\\frac{I \\otimes (c_j^\\dagger \
c_j)+(c_j^T c_j^*) \\otimes I}{2}K", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b081f068-e3aa-4c74-9166-af01d8f508b6"],
 "\nHere is ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["d", "TI"], 
        StyleBox["j", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "d_j", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2867a023-89b5-4dd4-a86f-d77d8f09c362"],
 " the damping operator while ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], 
        StyleBox["j", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "c_j", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ece40e68-c14f-4446-90d2-9e334e5584d6"],
 " is the measurement operator. The Liouvillian is then the sum of the three \
components."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.9367893507866087`*^9, 3.9367894908223333`*^9}, {
   3.9367901939909353`*^9, 3.9367903332342253`*^9}, {3.936792429149083*^9, 
   3.936792472575664*^9}, {3.936792646970964*^9, 3.9367926558023376`*^9}, {
   3.9367927378249474`*^9, 3.936792751146167*^9}, {3.936793951151455*^9, 
   3.936793956620377*^9}, 3.937017306565317*^9, {3.9373180631229553`*^9, 
   3.937318124419455*^9}, {3.937318165005228*^9, 3.937318172983014*^9}, {
   3.937318484425783*^9, 3.9373184902819433`*^9}, 3.937318540679019*^9, 
   3.937318584769352*^9},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"7b8ca9ad-159a-43b2-9bc4-b2c01c93e8b4"],

Cell[CellGroupData[{

Cell["Commutation Matrix", "Subsection",
 CellChangeTimes->{{3.936794988548358*^9, 
  3.936794997560595*^9}},ExpressionUUID->"ce6e27d9-4237-4474-bd50-\
11dae5e986ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KMatrix", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"positions", ",", "indices", ",", "commutationMatrix"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"positions", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "*", "m"}]}], ",", 
            RowBox[{"j", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "*", "n"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "m"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "n"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"indices", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"positions", "->", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", " ", "n"}], ",", 
          RowBox[{"m", " ", "n"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"commutationMatrix", "=", 
      RowBox[{"Normal", "[", "indices", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "commutationMatrix", "]"}], ";"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.93679406486097*^9, 3.936794134360692*^9}, 
   3.936802670180655*^9, {3.9368027379929447`*^9, 3.9368027407769814`*^9}, {
   3.9368027953798447`*^9, 3.93680279713547*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"534e9f71-b5b3-47bc-a0cd-6fcdd4aeaebd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Liouvillian", "Subsection",
 CellChangeTimes->{{3.9367950106688547`*^9, 
  3.936795015680184*^9}},ExpressionUUID->"a4fb3029-0c03-44a2-a61d-\
603c4eb45cb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LiouvillianSuperoperator", "[", 
   RowBox[{
   "Hamiltonian_", ",", "cOps_List", ",", "measureOps_List", ",", 
    "\[Gamma]_List", ",", "\[Beta]_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[ScriptCapitalL]1", ",", "\[ScriptCapitalL]2", ",", 
      "\[ScriptCapitalL]3", ",", "\[ScriptCapitalL]", ",", "Id", ",", "n", 
      ",", "cOpsDagger", ",", "cOpsStar", ",", "measureOpsDagger", ",", 
      "measureOpsStar", ",", "commutationMartix"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "Hamiltonian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"commutationMartix", "=", 
      RowBox[{"KMatrix", "[", 
       RowBox[{"n", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Id", "=", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cOpsDagger", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", 
         RowBox[{"cOps", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "cOps", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cOpsStar", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{"cOps", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "cOps", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"measureOpsDagger", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", 
         RowBox[{"measureOps", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "measureOps", "]"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"measureOpsStar", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{"measureOps", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "measureOps", "]"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalL]1", "=", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"commutationMartix", ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "Hamiltonian", "]"}], ",", "Id"}], 
           "]"}], "-", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{"Id", ",", "Hamiltonian"}], "]"}]}], ")"}], ".", 
        "commutationMartix"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalL]2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Gamma]", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", 
           RowBox[{"commutationMartix", ".", 
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{
              RowBox[{"cOpsStar", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"cOps", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "cOps", "]"}]}], "}"}]}], "]"}], ".", 
        "commutationMartix"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ")"}], "^", "2"}], 
          RowBox[{"commutationMartix", ".", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{"measureOpsStar", "[", 
              RowBox[{"[", "k", "]"}], "]"}], ",", 
             RowBox[{"measureOps", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ".", 
           "commutationMartix"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "measureOps", "]"}]}], "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalL]3", "=", 
      RowBox[{
       RowBox[{"Sum", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Gamma]", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "/", "2"}], " ", 
          RowBox[{"commutationMartix", ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KroneckerProduct", "[", 
              RowBox[{"Id", ",", 
               RowBox[{
                RowBox[{"cOpsDagger", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ".", 
                RowBox[{"cOps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], "+", 
             RowBox[{"KroneckerProduct", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"cOps", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}], ".", 
                RowBox[{"cOpsStar", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ",", "Id"}], "]"}]}], 
            ")"}], ".", "commutationMartix"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "cOps", "]"}]}], "}"}]}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Beta]", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ")"}], "^", "2"}]}], "/", 
           "2"}], " ", 
          RowBox[{"commutationMartix", ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KroneckerProduct", "[", 
              RowBox[{"Id", ",", 
               RowBox[{
                RowBox[{"measureOpsDagger", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ".", 
                RowBox[{"measureOps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}]}], "]"}], "+", 
             RowBox[{"KroneckerProduct", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"measureOps", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], "]"}], ".", 
                RowBox[{"measureOpsStar", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], ",", "Id"}], "]"}]}], 
            ")"}], ".", "commutationMartix"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "measureOps", "]"}]}], "}"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalL]", "=", 
      RowBox[{
      "\[ScriptCapitalL]1", "+", "\[ScriptCapitalL]2", "+", 
       "\[ScriptCapitalL]3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[ScriptCapitalL]", "]"}], ";"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.936794241727208*^9, 3.93679436658456*^9}, {
  3.936794400755468*^9, 3.93679449567978*^9}, {3.936844820085091*^9, 
  3.9368448414132853`*^9}, {3.936847586950314*^9, 3.936847651593989*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9264d800-87a6-43b6-bbf9-683cdb8ccf11"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Steady-State", "Subsection",
 CellChangeTimes->{{3.936795027721302*^9, 
  3.936795031242124*^9}},ExpressionUUID->"78b43e72-1fad-4df9-99b6-\
5954b44ea0ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SteadyState", "[", 
   RowBox[{"Hamiltonian_", ",", "Liouvillian_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "evals", ",", "evecs", ",", "zeroIndex", ",", "\[Rho]Steady", 
      ",", "\[Rho]trace"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "Hamiltonian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"evals", "=", 
      RowBox[{"Eigenvalues", "[", "Liouvillian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"evecs", "=", 
      RowBox[{"Eigenvectors", "[", "Liouvillian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Zero", " ", "is", " ", "the", " ", "largest", " ", "since", " ", 
       "with", " ", "damping", " ", "all", " ", "the", " ", "others", " ", 
       "have", " ", "negative", " ", "real", " ", "part"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"zeroIndex", "=", 
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"evals", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]Steady", "=", 
      RowBox[{"evecs", "[", 
       RowBox[{"[", "zeroIndex", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]trace", "=", 
      RowBox[{"Tr", "[", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"\[Rho]Steady", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "n"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]Steady", "=", 
      RowBox[{"\[Rho]Steady", "/", "\[Rho]trace"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]Steady", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{"\[Rho]Steady", ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Rho]Steady", "]"}], ";"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.936795074309572*^9, 3.9367950956244783`*^9}, {
  3.936808394952116*^9, 3.936808407765913*^9}, {3.936809417476301*^9, 
  3.936809439007943*^9}, {3.936809503779517*^9, 3.9368095221199617`*^9}, {
  3.936809563881164*^9, 3.936809571569813*^9}, {3.93680960238501*^9, 
  3.9368096674041233`*^9}, {3.936809840127694*^9, 3.9368098496419697`*^9}, {
  3.936847778738653*^9, 3.936847792757605*^9}, {3.936847825226095*^9, 
  3.936847827204273*^9}, {3.936847865652379*^9, 3.936847879138014*^9}, {
  3.9368490779670343`*^9, 3.9368490781084623`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"da93aeca-f95e-4049-9975-4cc46eae5f47"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[ScriptCapitalA]", "Subsection",
 CellChangeTimes->{
  3.936795257907154*^9},ExpressionUUID->"5576749e-56dc-4296-8eb5-\
3f19da25a524"],

Cell[TextData[{
 "The superoperator \[ScriptCapitalA] has the following definition:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], 
          StyleBox["i", "TI"]], 
         StyleBox["X", "TI"], "\[LongEqual]", 
         FractionBox[
          RowBox[{
            SubscriptBox[
             StyleBox["c", "TI"], 
             StyleBox["i", "TI"]], 
            StyleBox["X", "TI"], "+", 
            StyleBox["X", "TI"], 
            SubsuperscriptBox[
             StyleBox["c", "TI"], 
             StyleBox["i", "TI"], "\[Dagger]"]}], "2"]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A_iX=\\frac{c_iX+Xc_i^\\dagger}{2}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "69b33d33-22f3-4d58-a6ea-a1434bea8111"],
 "\nwe can show again that the superoperator \[ScriptCapitalA] can be \
calculated as:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", 
         StyleBox["K", "TI"], 
         FractionBox[
          RowBox[{
            StyleBox["I", "TI"], "\[CircleTimes]", 
            SubscriptBox[
             StyleBox["c", "TI"], 
             StyleBox["j", "TI"]], "+", 
            SubsuperscriptBox[
             StyleBox["c", "TI"], 
             StyleBox["j", "TI"], "*"], "\[CircleTimes]", 
            StyleBox["I", "TI"]}], "2"], 
         StyleBox["K", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A=K\\frac{I \\otimes c_j + c_j^* \\otimes I}{2}K", "state" -> "Boxes"|>,
    
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f36a6fc3-f9ca-4e4f-8187-b6ff50be7a06"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{3.936796058190325*^9},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"619580d9-dd11-49df-a419-6c89b11b42e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Super\[ScriptCapitalA]", "[", 
   RowBox[{"Hamiltonian_", ",", "measureOps_List", ",", "\[Beta]_List"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "Id", ",", "measureOpsStar", ",", "\[ScriptCapitalA]", ",", 
      "commutationMartix"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "Hamiltonian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"commutationMartix", "=", 
      RowBox[{"KMatrix", "[", 
       RowBox[{"n", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Id", "=", 
      RowBox[{"IdentityMatrix", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"measureOpsStar", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{"measureOps", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "measureOps", "]"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Enviromental", " ", "damping", " ", "has", " ", "no", " ", 
        "influence"}], ",", " ", 
       RowBox[{"only", " ", "measurement"}]}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ")"}], "^", "2"}], " ", "/", 
          "2"}], 
         RowBox[{"commutationMartix", ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{"Id", ",", 
              RowBox[{"measureOps", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "+", 
            RowBox[{"KroneckerProduct", "[", 
             RowBox[{
              RowBox[{"measureOpsStar", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "Id"}], "]"}]}], ")"}], 
          ".", "commutationMartix"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "measureOps", "]"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[ScriptCapitalA]", "]"}], ";"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.936795297806862*^9, 3.9367953363623962`*^9}, {
  3.936796902582353*^9, 3.9367969069175386`*^9}, {3.9367983835081997`*^9, 
  3.936798406651309*^9}, {3.9367996542520027`*^9, 3.936799726716012*^9}, {
  3.936799981711055*^9, 3.936799998164407*^9}, {3.93680229473527*^9, 
  3.9368023505114603`*^9}, {3.936802541370308*^9, 3.9368025635529613`*^9}, {
  3.936802966028687*^9, 3.936802992701655*^9}, {3.936808211344945*^9, 
  3.936808213985793*^9}, {3.936847747206369*^9, 3.936847751321459*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ac9c7e9b-d7be-4a9f-9175-31d2f2941ca7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[ScriptCapitalA]\[CloseCurlyQuote]", "Subsection",
 CellChangeTimes->{{3.936795987153693*^9, 
  3.936795990286137*^9}},ExpressionUUID->"21b61330-5a62-4b0c-8899-\
e6815d316b47"],

Cell[TextData[{
 "The modified \[ScriptCapitalA] superoperator is defined as:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["A", "TI"], "\[Prime]"], 
         StyleBox["X", "TI"], "\[LongEqual]", 
         StyleBox["A", "TI"], 
         StyleBox["X", "TI"], "-", "Tr", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["A", "TI"], 
             SubscriptBox["\[Rho]", "0"]}], ")"}], 
         StyleBox["X", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A^\\prime X = A X - \\text{Tr}(A \\rho_0)X", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cb4065db-60c0-41f5-9681-45f4d301cad5"],
 " so we can calculate this modified superoperator as \n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["A", "TI"], "\[Prime]"], "\[LongEqual]", 
         StyleBox["A", "TI"], "-", 
         StyleBox["I", "TI"], "Tr", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["A", "TI"], 
             SubscriptBox["\[Rho]", "0"]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A^\\prime = A - I \\text{Tr}(A \\rho_0)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1dc1e5c1-d163-4337-ba6d-ab568e9dce49"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.937016948694914*^9, 3.937016979990884*^9}, {
  3.937017068436489*^9, 3.9370170693029423`*^9}, {3.937017212158058*^9, 
  3.937017245923208*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"ad6b8689-45c5-48f4-9999-e5dcd69e9471"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Super\[ScriptCapitalA]Prim", "[", 
   RowBox[{
   "Hamiltonian_", ",", "Liouvillian_", ",", "measureOps_List", ",", 
    "\[Beta]_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "m", ",", "Id", ",", "\[Rho]Steady", ",", "\[ScriptCapitalA]", 
      ",", "\[ScriptCapitalA]Dot\[Rho]Steady", ",", "\[ScriptCapitalA]Prim"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "Hamiltonian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Length", "[", "Liouvillian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Id", "=", 
      RowBox[{"IdentityMatrix", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]Steady", "=", 
      RowBox[{"SteadyState", "[", 
       RowBox[{"Hamiltonian", ",", "Liouvillian"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{"Super\[ScriptCapitalA]", "[", 
       RowBox[{"Hamiltonian", ",", "measureOps", ",", "\[Beta]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ScriptCapitalA]", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ".", "\[Rho]Steady"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "\[ScriptCapitalA]", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ArrayReshape", "[", 
         RowBox[{
          RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "\[ScriptCapitalA]", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]Prim", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ScriptCapitalA]", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "-", 
         RowBox[{"Id", " ", 
          RowBox[{"Tr", "[", 
           RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "\[ScriptCapitalA]", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[ScriptCapitalA]Prim", "]"}], ";"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"5badf7d0-5815-4a39-95fa-dde7bf0330e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fourier Transformation of The Propagator \[ScriptCapitalG]\
\[CloseCurlyQuote]", "Section",
 CellChangeTimes->{
  3.9368068681650877`*^9},ExpressionUUID->"f62f30d9-26be-4d2d-b510-\
4c58b2d5276b"],

Cell[TextData[{
 "Instead of calculating the propagator by calculating a matrix exponential, \
I can use the way introduced in prb2018:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["G", "TI"], "\[Prime]"], 
         RowBox[{"(", "\[Nu]", ")"}], "\[LongEqual]", "\[CapitalLambda]", 
         SubscriptBox[
          StyleBox["D", "TI"], 
          OverscriptBox[
           SuperscriptBox[
            StyleBox["G", "TI"], "\[Prime]"], "~"]], 
         SuperscriptBox["\[CapitalLambda]", "-1"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "G^\\prime (\\nu) = \\Lambda D_{\\tilde{G^\\prime}} \\Lambda^{-1}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "51ca5e27-759f-4ab5-835c-78f73ea05e1f"],
 "\nTo calculate \[CapitalLambda] we just calculate the eigenvectors of the \
Liouvillian. (In Mathematica the results will be on row vectors. So we have \
to transpose so the vectors will be column shaped.)\nThe ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], 
        SuperscriptBox[
         OverscriptBox[
          StyleBox["G", "TI"], "~"], "\[Prime]"]], TraditionalForm], 
     "errors" -> {}, "input" -> "D_{\\tilde{G}^\\prime}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "43207d1d-325b-4039-9981-fe75399bcc74"],
 " containes the diagonal elements ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       FractionBox["1", 
        RowBox[{"-", 
          SubscriptBox["\[Lambda]", 
           StyleBox["j", "TI"]], "-", 
          StyleBox["i", "TI"], "\[Nu]"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "\\frac{1}{-\\lambda_j - i\\nu}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "efe50d8e-344e-4638-a83f-b8d0fd3dcce2"],
 " for non steady-state. For the state-state we substitute the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       FractionBox["1", 
        RowBox[{"-", 
          SubscriptBox["\[Lambda]", 
           StyleBox["j", "TI"]], "-", 
          StyleBox["i", "TI"], "\[Nu]"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "\\frac{1}{-\\lambda_j - i\\nu}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3cb0d8ff-c4db-4def-99e2-c2019888972c"],
 " with a 0."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.9370173849357367`*^9, 3.9370174424349747`*^9}, 
   3.937017525986253*^9, {3.937018161124023*^9, 3.9370181965353317`*^9}, {
   3.9370182322240057`*^9, 3.937018354765335*^9}, {3.9370214531711197`*^9, 
   3.937021538062166*^9}, {3.937021643160981*^9, 3.937021692517642*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"0c926947-1851-48ce-9303-596df5637a09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DiagLiouvillian", "[", 
   RowBox[{
   "Hamiltonian_", ",", "cOps_List", ",", "measureOps_List", ",", 
    "\[Gamma]_List", ",", "\[Beta]_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[ScriptCapitalL]", ",", "\[CapitalLambda]", ",", "\[Lambda]", ",", 
      "zeroIndex"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[ScriptCapitalL]", "=", 
      RowBox[{"LiouvillianSuperoperator", "[", 
       RowBox[{
       "Hamiltonian", ",", "cOps", ",", "measureOps", ",", "\[Gamma]", ",", 
        "\[Beta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Eigenvectors", "[", "\[ScriptCapitalL]", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"Eigenvalues", "[", "\[ScriptCapitalL]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"zeroIndex", "=", 
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"-", "1"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"\[CapitalLambda]", ",", "\[Lambda]", ",", "zeroIndex"}], 
       "}"}], "]"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.955506558632661*^9, 3.9555065751712227`*^9}, {
  3.955507682017997*^9, 3.955507749076116*^9}, {3.9555077986902*^9, 
  3.955507828570854*^9}, {3.95550819716389*^9, 3.955508208345274*^9}, {
  3.955508238667721*^9, 3.955508250494074*^9}, {3.955508326358738*^9, 
  3.9555083314763527`*^9}, {3.955508442500392*^9, 3.955508454715435*^9}, {
  3.955508596807907*^9, 3.9555086029255667`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2987aeb1-e24d-43fe-9771-7a17682a1cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"G\[Nu]", "[", 
   RowBox[{
   "\[Nu]_", ",", " ", "\[CapitalLambda]_", ",", " ", "\[Lambda]_", ",", 
    "zeroIndex_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"DGTildePrimDiagElements", ",", "DGTildePrim", ",", "Gof\[Nu]"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DGTildePrimDiagElements", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Lambda]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Nu]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DGTildePrimDiagElements", "=", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"DGTildePrimDiagElements", ",", 
        RowBox[{"zeroIndex", "->", "0"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DGTildePrim", "=", 
      RowBox[{"DiagonalMatrix", "[", "DGTildePrimDiagElements", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Gof\[Nu]", "=", 
      RowBox[{"Dot", "[", 
       RowBox[{"\[CapitalLambda]", ",", "DGTildePrim", ",", 
        RowBox[{"Inverse", "[", "\[CapitalLambda]", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "Gof\[Nu]", "]"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.955507681095809*^9, 3.955508263499096*^9, 3.95550829823248*^9, {
   3.95550841277141*^9, 3.955508431049385*^9}, {3.955508910996921*^9, 
   3.9555089229946527`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7bf0f522-8b89-4acd-8076-0cea5facc5ef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poly-spectra Functions", "Chapter",
 CellChangeTimes->{{3.936806921308279*^9, 
  3.9368069230811653`*^9}},ExpressionUUID->"fbfafeb4-a239-4543-ab16-\
cb98e0ae16f4"],

Cell[CellGroupData[{

Cell["S1", "Section",
 CellChangeTimes->{{3.9368069409855127`*^9, 
  3.936806941376688*^9}},ExpressionUUID->"2812a318-ab63-4cb7-bb1b-\
ad10ae805adc"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["S", "TI"], 
        RowBox[{"(", "1", ")"}]], TraditionalForm], "errors" -> {}, "input" -> 
     "S^{(1)}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "859b9114-f874-4f9a-b0c5-dc3976cfc621"],
 " is the expectation value of the measurement and can be calculated as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"Tr", "(", 
         RowBox[{
           StyleBox["A", "TI"], "\[Rho]"}], ")"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\text{Tr}(A\\rho)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bb1576a7-8de6-472d-beb9-0d904940624e"],
 ". The multiplication with ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox["\[Beta]", "2"], TraditionalForm], "errors" -> {}, 
     "input" -> "\\beta^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5573f109-95c1-4c67-aff4-5cca206b2bee"],
 "is necessary to consider the measurement strength."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.9555922630286217`*^9, 3.955592332583618*^9}, {
  3.955592382799142*^9, 3.955592421473703*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"00ddad8b-185d-4e60-8dfa-c39607ae5e3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstOrderSpectrum", "[", 
   RowBox[{
   "Hamiltonian_", ",", "Liouvillian_", ",", "measureOps_List", ",", 
    "\[Beta]_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "\[ScriptCapitalA]", ",", "\[Rho]Steady", ",", 
      "\[ScriptCapitalA]Dot\[Rho]Steady", ",", "S1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "Hamiltonian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{"Super\[ScriptCapitalA]", "[", 
       RowBox[{"Hamiltonian", ",", "measureOps", ",", "\[Beta]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]Steady", "=", 
      RowBox[{"SteadyState", "[", 
       RowBox[{"Hamiltonian", ",", "Liouvillian"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ScriptCapitalA]", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ".", "\[Rho]Steady"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "\[ScriptCapitalA]", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ArrayReshape", "[", 
         RowBox[{
          RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "\[ScriptCapitalA]", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"S1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ")"}], "^", "2"}], 
         RowBox[{"Tr", "[", 
          RowBox[{"\[ScriptCapitalA]Dot\[Rho]Steady", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "\[ScriptCapitalA]", "]"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "S1", "]"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.936806959924507*^9, 3.936806963757286*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"94f3d3b6-cb38-4ea3-9ef0-b4110c99fe5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["S2", "Section",
 CellChangeTimes->{{3.93680721920758*^9, 
  3.936807220496006*^9}},ExpressionUUID->"65c91c2b-f5e2-4666-a3d0-\
d9333f73cc1b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["S", "TI"], 
        RowBox[{"(", "2", ")"}]], TraditionalForm], "errors" -> {}, "input" -> 
     "S^{(2)}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3a004bf9-50ce-41db-a243-e698a09b5753"],
 " is related the second order cumulant and can be described as follows:"
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.955592619932914*^9, 3.9555926794196053`*^9}, 
   3.955592807616374*^9},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"65e17c43-13e7-4c79-ac7a-4d99923a7201"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SecondOrderSpectrum", "[", "\[Nu]_", "]"}], "[", 
   RowBox[{
   "Hamiltonian_", ",", "Liouvillian_", ",", "cOps_List", ",", 
    "measureOps_List", ",", "\[Gamma]_List", ",", "\[Beta]_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "\[Rho]Steady", ",", "\[ScriptCapitalA]Prim", ",", 
      "diagResults", ",", "S21", ",", "S22", ",", "S2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "Hamiltonian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]Steady", "=", 
      RowBox[{"SteadyState", "[", 
       RowBox[{"Hamiltonian", ",", "Liouvillian"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]Prim", "=", 
      RowBox[{"Super\[ScriptCapitalA]Prim", "[", 
       RowBox[{
       "Hamiltonian", ",", "Liouvillian", ",", "measureOps", ",", "\[Beta]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diagResults", "=", 
      RowBox[{"DiagLiouvillian", "[", 
       RowBox[{
       "Hamiltonian", ",", "cOps", ",", "measureOps", ",", "\[Gamma]", ",", 
        "\[Beta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"S21", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ScriptCapitalA]Prim", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ".", 
         RowBox[{"G\[Nu]", "[", 
          RowBox[{"\[Nu]", ",", 
           RowBox[{"diagResults", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"diagResults", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"diagResults", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ".", 
         RowBox[{"\[ScriptCapitalA]Prim", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ".", "\[Rho]Steady"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S22", "=", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ScriptCapitalA]Prim", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ".", 
         RowBox[{"G\[Nu]", "[", 
          RowBox[{
           RowBox[{"-", "\[Nu]"}], ",", 
           RowBox[{"diagResults", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"diagResults", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"diagResults", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ".", 
         RowBox[{"\[ScriptCapitalA]Prim", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ".", "\[Rho]Steady"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S2", "=", 
      RowBox[{
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Beta]", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "\[Beta]", "]"}]}], "}"}]}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Tr", "[", "S21", "]"}], "+", 
         RowBox[{"Tr", "[", "S22", "]"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "S2", "]"}], ";"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9368072389871073`*^9, 3.936807246706655*^9}, {
  3.9368522414363947`*^9, 3.9368522481040173`*^9}, {3.9368523617698603`*^9, 
  3.936852369820259*^9}, {3.955508860012476*^9, 3.955508863619369*^9}, {
  3.955508942053647*^9, 3.9555090262591467`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"9aba14cd-4d94-4d92-880d-6f38ee049b52"]
}, Open  ]],

Cell[CellGroupData[{

Cell["S3", "Section",
 CellChangeTimes->{{3.936807256253793*^9, 
  3.9368072573172407`*^9}},ExpressionUUID->"c47ceba5-1174-41a4-ba5e-\
be1b8819a8a4"],

Cell["", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"59fe6340-1ff3-4d68-8b0d-6c8a4f0a0c0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ThirdOrderSpectrum", "[", 
    RowBox[{"\[Nu]1_", ",", "\[Nu]2_"}], "]"}], "[", 
   RowBox[{
   "Hamiltonian_", ",", "Liouvillian_", ",", "cOps_List", ",", 
    "measureOps_List", ",", "\[Gamma]_List", ",", "\[Beta]_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "\[Nu]Vector", ",", "\[Nu]Arguments", ",", "\[Rho]Steady", ",",
       "\[ScriptCapitalA]Prim", ",", "diagResults", ",", "perms", ",", 
      "traces"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "Hamiltonian", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Nu]Vector", "=", 
      RowBox[{"{", 
       RowBox[{"\[Nu]1", ",", "\[Nu]2", ",", 
        RowBox[{
         RowBox[{"-", "\[Nu]1"}], "-", "\[Nu]2"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]Steady", "=", 
      RowBox[{"SteadyState", "[", 
       RowBox[{"Hamiltonian", ",", "Liouvillian"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]Prim", "=", 
      RowBox[{"Super\[ScriptCapitalA]Prim", "[", 
       RowBox[{
       "Hamiltonian", ",", "Liouvillian", ",", "measureOps", ",", "\[Beta]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"diagResults", "=", 
      RowBox[{"DiagLiouvillian", "[", 
       RowBox[{
       "Hamiltonian", ",", "cOps", ",", "measureOps", ",", "\[Gamma]", ",", 
        "\[Beta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"perms", "=", 
      RowBox[{"Permutations", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"(*", 
      RowBox[{
      "build", " ", "the", " ", "6", " ", "contributions", " ", "and", " ", 
       "sum", " ", "their", " ", "traces"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"traces", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "=", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"y", "=", 
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"z", "=", 
             RowBox[{"p", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", "tmp", "}"}], ",", 
            RowBox[{
             RowBox[{"tmp", "=", 
              RowBox[{
               RowBox[{"\[ScriptCapitalA]Prim", "[", 
                RowBox[{"[", "x", "]"}], "]"}], ".", 
               RowBox[{"G\[Nu]", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Nu]Vector", "[", 
                   RowBox[{"[", "x", "]"}], "]"}], "+", 
                  RowBox[{"\[Nu]Vector", "[", 
                   RowBox[{"[", "y", "]"}], "]"}]}], ",", 
                 RowBox[{"diagResults", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"diagResults", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"diagResults", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ".", 
               RowBox[{"\[ScriptCapitalA]Prim", "[", 
                RowBox[{"[", "z", "]"}], "]"}], ".", "\[Rho]Steady"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp", "=", 
              RowBox[{
               RowBox[{"\[ScriptCapitalA]Prim", "[", 
                RowBox[{"[", "y", "]"}], "]"}], ".", 
               RowBox[{"G\[Nu]", "[", 
                RowBox[{
                 RowBox[{"\[Nu]Vector", "[", 
                  RowBox[{"[", "y", "]"}], "]"}], ",", 
                 RowBox[{"diagResults", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"diagResults", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"diagResults", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ".", "tmp"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Tr", "@", 
              RowBox[{"ArrayReshape", "[", 
               RowBox[{"tmp", ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}]}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "perms"}], "}"}]}], "]"}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"Total", "[", "traces", "]"}]}]}], "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.936807272392556*^9, 3.936807298442947*^9}, {
  3.937280623001135*^9, 3.937280666185177*^9}, {3.95544074070688*^9, 
  3.955440819940114*^9}, {3.955440867674472*^9, 3.955440940719618*^9}, {
  3.955440972995757*^9, 3.955440981524066*^9}, {3.955509083052451*^9, 
  3.955509118307962*^9}, {3.955510323457471*^9, 3.9555103563224487`*^9}, {
  3.955510456117538*^9, 3.955510489709415*^9}, {3.955510660431542*^9, 
  3.955510690865106*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"672e6964-9eba-4955-845d-d3723bcd4c31"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculations & Plotting", "Chapter",
 CellChangeTimes->{{3.9368073260539618`*^9, 
  3.936807332427409*^9}},ExpressionUUID->"62e56e59-077a-403f-a726-\
9b7fd40f5328"],

Cell[CellGroupData[{

Cell["Calculating Spectra", "Section",
 CellChangeTimes->{
  3.936807345395958*^9},ExpressionUUID->"693caea1-62eb-43f5-9152-\
39ba4b631f83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcSpectra", "[", 
   RowBox[{
   "Hamiltonian_", ",", " ", "cOps_List", ",", " ", "measureOps_List", ",", 
    " ", "\[Gamma]_List", ",", " ", "\[Beta]_List", ",", " ", "orders_List"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Liouvillian", ",", " ", 
      RowBox[{"spectrum", "=", 
       RowBox[{"<|", "|>"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Liouvillian", "=", 
      RowBox[{"LiouvillianSuperoperator", "[", 
       RowBox[{
       "Hamiltonian", ",", "cOps", ",", "measureOps", ",", "\[Gamma]", ",", 
        "\[Beta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"orders", ",", " ", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"spectrum", "[", "\"\<ThirdOrder\>\"", "]"}], "=", 
        RowBox[{"(", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Nu]1", ",", "\[Nu]2"}], "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"ThirdOrderSpectrum", "[", 
              RowBox[{"\[Nu]1", ",", "\[Nu]2"}], "]"}], "[", 
             RowBox[{
             "Hamiltonian", ",", "Liouvillian", ",", "cOps", ",", 
              "measureOps", ",", "\[Gamma]", ",", "\[Beta]"}], "]"}], "]"}]}],
           "]"}], ")"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"orders", ",", " ", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"spectrum", "[", "\"\<SecondOrder\>\"", "]"}], "=", 
        RowBox[{"(", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "\[Nu]", "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"SecondOrderSpectrum", "[", "\[Nu]", "]"}], "[", 
             RowBox[{
             "Hamiltonian", ",", "Liouvillian", ",", "cOps", ",", 
              "measureOps", ",", "\[Gamma]", ",", "\[Beta]"}], "]"}], "]"}]}],
           "]"}], ")"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"orders", ",", " ", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"spectrum", "[", "\"\<FirstOrder\>\"", "]"}], "=", " ", 
        RowBox[{"(", 
         RowBox[{"FirstOrderSpectrum", "[", 
          RowBox[{
          "Hamiltonian", ",", "Liouvillian", ",", "measureOps", ",", 
           "\[Beta]"}], "]"}], ")"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "spectrum"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.9554425236380177`*^9, {3.955510600281302*^9, 3.95551060061578*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1ae29d08-1de9-4ac7-bfbf-898e5dba9293"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting Functions", "Section",
 CellChangeTimes->{
  3.936807368302006*^9},ExpressionUUID->"bb79e6fc-005d-4283-b79f-\
b15bba5297c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"seismicColors", "[", 
    RowBox[{"x_", "?", "NumericQ"}], "]"}], "/;", 
   RowBox[{
    RowBox[{"-", "1"}], "<=", "x", "<=", "1"}]}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.", ",", "0.", ",", "0.3"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.", ",", "0.", ",", "1."}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1.", ",", "1.", ",", "1."}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1.", ",", "0.", ",", "0."}], "]"}], ",", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", "0.", ",", "0."}], "]"}]}], "}"}], ",", "x"}], 
   "]"}]}], "\n", 
 RowBox[{"LinearGradientImage", "[", 
  RowBox[{"seismicColors", ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "30"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"5f27cc6c-a34d-4293-bb6b-d9ada186a38a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt1/+T1VUZwPELKC7fTFJZBVlckEGM+NoKCvezfBMEBlpXN0AZGLBdV76I
rAiDxMagTAQYSk4hKSQWVIAJKBYWykhEVhJIiEoZIKHgYJQaqCvxnGfPc86c
n/oD3s/M47x3Rt27997P53NexZOml1c1zOVy9xWc/0f5xNkDamomzrm1sfxQ
OXFqr55TG53PovPbpUEuJ+1n5eOPZ74LKldZz+r+tPW7n62zLv/9BuuXl2+y
7jp+q/UTnV+0bvrxS9ZzXt5pfXzJH6wrRr9m/Ur71617nHrDevWvD1m3WHjY
em7ZP63fb3PSeszxD613bf7I+mu1Z63XDPvCetHiBqW+S//VyPqTisbWG18s
sP5mcTPrNt9pYb3vgy9Zf7f8y9b9f3WZ9X/bFlo/8+CV1lXvt7Fu+/Ui6/3P
XW29pHUH64HzO1qfPdbJ+tkR11nftamLdVFhN+u/fquH9dIjvawH3Xy99acb
+1hvurSvdfWcvHW7d0qtDwweaP3wLwZbD75kqPXn9w+z3vL2COvJA0ZZF68r
sz7Y/FbrZTUV1kMOjrauy99u/dzT46ynNJlg3X76ROs3999p/ciNVdZDf1xt
/cWFU6yfnzLNeure6dYdetdYv/XETOvlDWdbD6ueY517ba71C71qSwu73dFX
NpebX3pP3aJ+stKfPvZJP1npQa165mWlmxypzstKHz+wLC8r/Wq/9XlZ6Y1r
duVlpR8pOJKXlb7vnrq8rPRXJjfPZKWvats6k5W++C+dMlnpcwtKMlnp0yWD
MlnpI++VZbLSr/9ofCYr/btRUzNZ6a0NHshkpW9768FMVvrPWxZnstI3Pfxo
Jiu9vWpFJivdu//qTFb62SvXZrLS1/5nQyYr/dSftmSy0q3XbstkpZd/e0cm
K91s7O5MVvqhnnsyWem6ZgcyWen7jx3KZKVPbT+ayUrfteJEJiv9zozTmaz0
mBFnMlnpvdecy2SlO55r6Fb68JTGbqVXHWziVvr2m1q4lW61+RK37j0susyt
9LIlhW6lR5xp7Va6oLLIrfTOvcVupednHd1K59df61b6bGEXt+6zeKibW+ma
0z3dSncdf71b6ZOv3uBWel3vvFvpO3/S36301S0Hu5U+NG+oW+kVJ4a7la4Y
PcqtdMudt7h1n3v3CrfSi58c41Z6SNNxbqUbzZ7gVvqlo5PcSs8tq3Ir3ee3
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
QR08qPP/ePB/SMXrYw==
    "], {{0, 30.}, {300., 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{300., 30.},
  PlotRange->{{0, 300.}, {0, 30.}}]], "Output",
 CellChangeTimes->{3.936807453309846*^9, 3.936809129059084*^9, 
  3.936847842150045*^9, 3.936859990775033*^9, 3.937024013443553*^9, 
  3.9374552233152437`*^9, 3.945939743513804*^9, 3.9499895096939373`*^9, 
  3.9499942591551447`*^9, 3.949994312135268*^9, 3.955441285427739*^9, 
  3.955441612765994*^9, 3.955441764281494*^9, 3.95544235939174*^9, 
  3.955509045507268*^9, 3.955510611810234*^9, 3.955510746496496*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"67903a37-f208-48b0-9980-73ed5d94b5e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotSpectra", "[", 
   RowBox[{
   "spectrum_", ",", "orders_List", ",", "\[Nu]Min_", ",", " ", "\[Nu]Max_", 
    ",", "resolution_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "thirdNummeric", ",", "maxAbs3", ",", "maxAbsIm3", ",", "colorFunc", ",",
       "colorFuncIm", ",", "realThird", ",", "imagThird", ",", " ", 
      "realSecond", ",", "imagSecond", ",", 
      RowBox[{"plots", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"orders", ",", " ", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"thirdNummeric", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"spectrum", "[", "\"\<ThirdOrder\>\"", "]"}], "[", 
            RowBox[{"\[Nu]1", ",", " ", "\[Nu]2"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Nu]1", ",", "\[Nu]Min", ",", "\[Nu]Max", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Nu]Max", "-", "\[Nu]Min"}], ")"}], "/", 
              "resolution"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Nu]2", ",", "\[Nu]Min", ",", "\[Nu]Max", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Nu]Max", "-", "\[Nu]Min"}], ")"}], "/", 
              "resolution"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"maxAbs3", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"Re", "[", "thirdNummeric", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxAbsIm3", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"Im", "[", "thirdNummeric", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"colorFunc", "=", 
         RowBox[{"Function", "[", 
          RowBox[{"z", ",", 
           RowBox[{"seismicColors", "[", 
            RowBox[{"Rescale", "[", 
             RowBox[{"z", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "maxAbs3"}], ",", "maxAbs3"}], "}"}]}], "]"}], 
            "]"}]}], "]"}]}], ";", 
        RowBox[{"colorFuncIm", "=", 
         RowBox[{"Function", "[", 
          RowBox[{"z", ",", 
           RowBox[{"seismicColors", "[", 
            RowBox[{"Rescale", "[", 
             RowBox[{"z", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "maxAbsIm3"}], ",", "maxAbsIm3"}], "}"}]}], 
             "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"realThird", "=", 
         RowBox[{"DensityPlot", "[", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{
             RowBox[{"spectrum", "[", "\"\<ThirdOrder\>\"", "]"}], "[", 
             RowBox[{"\[Nu]1", ",", "\[Nu]2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Nu]1", ",", "\[Nu]Min", ",", "\[Nu]Max"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"\[Nu]2", ",", "\[Nu]Min", ",", "\[Nu]Max"}], "}"}], ",", 
           
           RowBox[{"ColorFunctionScaling", "->", "False"}], ",", 
           RowBox[{"ColorFunction", "->", "colorFunc"}], ",", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"Automatic", ",", " ", "Right"}], "]"}]}], ",", 
           RowBox[{"PlotPoints", "->", "resolution"}], ",", 
           RowBox[{"MaxRecursion", "->", "8"}], ",", 
           RowBox[{"PlotRange", "->", "All"}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"PlotLabel", "->", "\"\<Real Part of S3\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], ";", 
        RowBox[{"imagThird", "=", 
         RowBox[{"DensityPlot", "[", 
          RowBox[{
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{"spectrum", "[", "\"\<ThirdOrder\>\"", "]"}], "[", 
             RowBox[{"\[Nu]1", ",", "\[Nu]2"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Nu]1", ",", "\[Nu]Min", ",", "\[Nu]Max"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"\[Nu]2", ",", "\[Nu]Min", ",", "\[Nu]Max"}], "}"}], ",", 
           
           RowBox[{"ColorFunctionScaling", "->", "False"}], ",", 
           RowBox[{"ColorFunction", "->", "colorFuncIm"}], ",", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"Automatic", ",", " ", "Right"}], "]"}]}], ",", 
           RowBox[{"PlotPoints", "->", "resolution"}], ",", 
           RowBox[{"MaxRecursion", "->", "8"}], ",", 
           RowBox[{"PlotRange", "->", "All"}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"PlotLabel", "->", "\"\<Imaginary Part of S3\>\""}], ",", 
           RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"GraphicsRow", "[", 
           RowBox[{"{", 
            RowBox[{"realThird", ",", "imagThird"}], "}"}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"orders", ",", " ", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"realSecond", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{
             RowBox[{"spectrum", "[", "\"\<SecondOrder\>\"", "]"}], "[", 
             "\[Nu]", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Nu]", ",", "\[Nu]Min", ",", "\[Nu]Max"}], "}"}], ",", 
           RowBox[{"PlotPoints", "->", "resolution"}], ",", 
           RowBox[{"MaxRecursion", "->", "2"}], ",", 
           RowBox[{"PlotRange", "->", "All"}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"PlotLabel", "->", "\"\<Real Part of S2\>\""}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"imagSecond", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Im", "[", 
            RowBox[{
             RowBox[{"spectrum", "[", "\"\<SecondOrder\>\"", "]"}], "[", 
             "\[Nu]", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Nu]", ",", "\[Nu]Min", ",", "\[Nu]Max"}], "}"}], ",", 
           RowBox[{"PlotPoints", "->", "resolution"}], ",", 
           RowBox[{"MaxRecursion", "->", "2"}], ",", 
           RowBox[{"PlotRange", "->", "All"}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"PlotLabel", "->", "\"\<Imaginary Part of S2\>\""}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"GraphicsRow", "[", 
           RowBox[{"{", 
            RowBox[{"realSecond", ",", "imagSecond"}], "}"}], "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"orders", ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<First-order spectrum (S1):\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"spectrum", "[", "\"\<FirstOrder\>\"", "]"}], "]"}], ";"}]}],
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "plots", "]"}], ">", "0"}], ",", 
       RowBox[{"GraphicsGrid", "[", 
        RowBox[{"Partition", "[", 
         RowBox[{"plots", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"f45458c7-f2b2-4a8e-8221-b5bb493c7f81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Chapter",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.937021915243577*^9, 3.937021917185727*^9}, {
  3.9370219517506523`*^9, 3.9370219627940483`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"44fc1c05-8ef8-4440-a3e8-9f3087c837d6"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s imagine an electron in a magnetic field ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["B", "TI"], "\[RightVector]"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell[
                    SubscriptBox[
                    StyleBox["B", "TI"], 
                    StyleBox["z", "TI"]], "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\vec{B}=\\begin{pmatrix}0\\\\0\\\\B_z\\end{pmatrix}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "99fba308-60b8-4795-9b3a-ebef118ed44f"],
 ". For such a system we can write the Hamiltonian as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["H", "TI"], "^"], "\[LongEqual]", 
         SubscriptBox["\[Omega]", 
          StyleBox["L", "TI"]], 
         SubscriptBox["\[Sigma]", 
          StyleBox["z", "TI"]], "/", "2"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{H}=\\omega_L\\sigma_z/2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "82f8af8b-f0c2-4fe3-b5ec-f34c2865f6bc"],
 ". In such a system, the electron spin will rotate in the plane of x-y. The \
second order cross spectrum of x-y is then ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["S", "TI"], 
          RowBox[{
            StyleBox["x", "TI"], 
            StyleBox["y", "TI"]}]], 
         RowBox[{"(", "\[Omega]", ")"}], "\[Proportional]", "<", 
         SubscriptBox[
          StyleBox["X", "TI"], "\[Omega]"], 
         SubsuperscriptBox[
          StyleBox["Y", "TI"], "\[Omega]", "*"], ">"}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "S_{xy}(\\omega)\\propto <X_\\omega Y_\\omega^*>", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "70af84d1-a06a-4065-88f0-ba81c340c4ba"],
 "\nWe know ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["X", "TI"], 
         RowBox[{"(", "\[Omega]", ")"}], "\[LongEqual]", "\[Integral]", 
         StyleBox["X", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "\[Omega]", 
            StyleBox["t", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "X(\\omega)=\\int X(t)e^{i\\omega t} dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5a36b120-a7e2-47e7-afc0-67d24c8c2711"],
 " \nand ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["Y", "TI"], 
         RowBox[{"(", "\[Omega]", ")"}], "\[LongEqual]", "\[Integral]", 
         StyleBox["Y", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "\[Omega]", 
            StyleBox["t", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "Y(\\omega)=\\int Y(t)e^{i\\omega t} dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f8b5556e-cd39-48ea-b6e6-46a2c7db3d8a"],
 "\nLet\[CloseCurlyQuote]s assume that the initial condition is that the \
electron spin is pointing the same direction as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["x", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat{x}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "60548bde-d70e-448a-8c90-69d03dd47014"],
 ". Such rotation will be Cosine function. Since it the spin rotates towards \
the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["y", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat{y}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "11ccf227-3dc2-4123-bebf-0d5967b4261f"],
 " direction we have:"
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.937021945661786*^9, 3.937022007346715*^9}, {
  3.937022042689674*^9, 3.937022096292012*^9}, {3.937022134302621*^9, 
  3.9370221343878803`*^9}, {3.9370221810355463`*^9, 3.937022261120862*^9}, {
  3.9370223677794437`*^9, 3.9370223846407843`*^9}, {3.937022415091188*^9, 
  3.937022444459347*^9}, {3.9370224827814837`*^9, 3.937022597003981*^9}, {
  3.937022660665503*^9, 3.9370226636096077`*^9}, {3.9370227602181892`*^9, 
  3.937022789783746*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"7b7b9b99-83b1-4231-9fb1-db042005e1d2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Typeset`open = False}, 
   TemplateBox[{"Expression", 
     RowBox[{"Plot", "[", 
       DynamicBox[
        FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
     GridBox[{{
        RowBox[{
          TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["1200", "IconizedItem"]}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
     Dynamic[Typeset`open]},
    "IconizedObject"]],
  Plot[{
    Cos[$CellContext`x], 
    Sin[$CellContext`x]}, {$CellContext`x, 0, 6 Pi}, 
   PlotStyle -> {{Blue, Thick}, {Red, Thick}}, 
   PlotLegends -> {"Spin X direction", "Spin Y direction"}, 
   AxesLabel -> {"time", "amplitude"}, PlotLabel -> 
   "Electron Spin Rotation in a magnetic field", GridLines -> Automatic],
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.937022802640283*^9, 3.937022802643025*^9}, {
  3.937022833467167*^9, 3.937022920550695*^9}, {3.937280890714525*^9, 
  3.937280891937065*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[90]:=",ExpressionUUID->"48ca6f77-c103-4d52-90be-b8363df19ad0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0, 0, 1], 
           Thickness[Large], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
M1I=
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[1, 0, 0], 
           Thickness[Large], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwlWnk4lN/7Rsi+jH3fRxjLiNLmPNoIRREqtEl9VFTKllJCJUnRorSgkkSU
KEtHkShCIfu+m5kj++433+v317nu67znfpb7ed7zPnON2iGfXUe4ODg4opdx
cPxvDVcW+1BXHW/+W+n/12aDqjdOGf7Ixct/+Q72ml+iIaiRcRWpbXznx8Fe
00R3rOXPuI/e6HANX0y/jzRMu3fOp6cg9cMPNP6kpaD27+mtE+m5qF3JpnPn
i1y0QTw2eTT9O/JOPiDnfeM7YnwI5/2X/he9z9y7FKv5Fzmo9u99JtmA9qvH
RxiH/UV5kVZv7c43INUx+7C47r/o2n5BlwyrRrTHK0n4aWID0uK/nXq8uwnF
ZBg+fy/fhNxdE2z7ZNuQ6YMNJ5dztKJjl/eUMy26UH2wc95pq06UsCrSd8u5
LpTl8sLwtm8nqhrOU3r8qgtxX7D+eOVJJ1rlpHjGVrQbyZys3dYx1om49drl
01q6kergJt/jCV3oWa3HiWP+vUhjMfvB8Z5u1Kh9SrT7zQAKkI9ctW57H5I1
D8r90zKAUF6L2xWfPuTiGLa/RGgQ/Wm5rRt/uw/VX3rw9sWJQTS4/24ora4P
/W4ssjtGG0L1rarDg3v6UcUN8Rhm2jDyKXYXDtkzgASTFMzamoeR9nPTNxcD
BpD1R62OX4IM1H5Ye7/l/QFU3rPGKPM4A+22DWIa1w6g0g2Hqs/oMVFJIll3
3GYQFZF3YtOvWQi3bsJUwyG0xFP4caCJheKwoP0D6yFkrvj9QKMAQSNP/7T9
OjKECq2aM/O8CBKYieeKfDSEWqsvvzKXGkF+u9/X0bmHUZPOayvOuhH0QkBn
TvLHMJo1eZswwxhBnFqO//I6h5EcZI/84/6HXLfmO6jPDCMXp88Pukz+If6K
jBsm2gz0N/T3QHHcP9TtbEg7eImBaptnr0U4jqIbEqs1M6lMlLtL/yLviVG0
4XCTz9gaJnpYvt834soouhof8nbKlokO5pa4RbwbRXHKFkc3nmEi1p1o4wix
MWTY8syt5RMT1fB/0eZdMYa4+h4Pqf9kouxLY4oRaAzJhh431mlhovPeLssj
vMdQba3igbMLTMRnrd4SXjGGpgcrdnJuYKHhIscanp4xJMJ9vsrCloV+rb5a
Gj43hvYu+PyDfSx0V4uRGa47jpSbHRODAlhInTMnPPzaOHo1K2jd8JaFeAIG
gniejaOEm3IhAoUsNMCSPxWeO472KasfmS1nobctIXvD+8bRtSHxOko3C63/
uM0wfPMEurnOfq8GhSAVw2BNHtcJRMbpOqBEENfLDLlw3wkkVHGlUW4FQeWx
EtzhSRMoqOLY5WUbCHojsHWGO28C/ZNvt5GwJCjmcgArrGYCfTGOetxuT5CT
T2tDGMckaiqLCU0/TNCaPtFf3LKTyOeHMzPjBEGKbhuLwwwn0dkxk+gT5wjq
tk5JD3OfRFy6LtqKEQSdop4ODSuYRI5P3X5aPyfI4XGyP3ftJLoXPzqpl0bQ
Ksn6E2HDkyhYoqamLIugBc51zmHyU+j2N5ar6WeCOgJO2nIbTyH58QOj3CUE
lZCnFmHbplBlWShnTDlBka3ctLCAKXT3fpxbwx+CTjquVuOOmULe4k5xdxsI
sv/5n3RYyhT6c8BLVqSVIJONCYLceAqdukvrsOgkSObTL46w+il0iyeqy6iX
oFlDzsllrCn08qCQTPMAQW0vVw5f4ZlGyaXfzgGDoC9Knh3LlKbR/C+PqQOE
oOdxD+qumEyj4CTdu+tHCSplBmZy7phG066zVnwTBA1u3Xcj5Og08tzt3hY6
RZDQs/WeC5em0dbPgnZvZggymFGyOP9wGhV/Db8bNsf2d9eSwsz7afQ0Tild
cIGgM2kdk36V00g2YPS2xSJBcdxfa8b7plFB5T+gLhGU65b85gzHDFov/zf3
Exs35YRdHZGbQSuEaBNzbDwv6nnIe+UMSgmxmmawsfJ/lhsYtjNI89KuL1Fs
DF9XyHp5zqBBS/OdzWz+QwoCY/0hMyhnw6/UBrb98LPDlUfiZ5DNyJ3KsHmC
XlVWvOp+N4M6RYdx+yxBP6gZVw5WzKCkI8vCB6cJYoTccm/vnUF85fVqSZME
iTaeWuO2NIM2SRgk8I8TZGy8S7JZdhZdFns2q/KPIMcbK4mL8Sxa53N7cy+T
IL8eyR/1NrPoRLpJ6J4hguI3TD53PDKLvi2LLAjuY+tBPu61fzCLFCbt7KrZ
enJse2j6K2sW0WtKCjkaCdJIOi9m+3MWFQqMO3aw6+GYo3mp5eIsstF2NU4v
Y9dLukriN5k5NNDKdffhV3b983IGb6LPIcFdaM/qAoL+fSymI4855GyoZhWS
QZAk5YVQ4YU5RLkYf1c3hV2vxyP6196fQ+ILtpHhTwkKUtr2eNWPOeQkVJ1r
fYugBD/dgOzuOdQp/FvuA7v+cZWgg/HCHEr55Huu6gJB3KG/+AyM5lF5d85Z
yeMEUZvfdqdtm0e89d2W6CBB20xuf9Y5PI9iO0t95Z0Jiu5zOKt1j70/5b+h
y4IgWZvGdsX5eSTrpPooT4Kgtc/z8h5KLaDmFhH68eUEuS08uitruIAiunKX
Vc6yUNJbdxvJQwtIzk+543kHC+lJ9uQIli0gpTpZ7dRXLGTeyro5G7uItuq2
8WrqslBfX0F/SdoiEh01/qkqz0LRI5EWt4oXUaPPFq5mfhZqX6Y9oTG2iC6c
Ut5zbYCJLunud92+awkJrOYv/JHERJ35R6Xs+ThAoXFHvZggE+UU7dhoKskB
jypudE1OMlDkN1MfeVUOmDOG3oQuBjKuWlbes5oDfnDcD9X5xEChXU+DA49y
wM+3F/WsDzOQBn9Dd1IpB2w6vuj7h32vTQtjsWu/OaDJlJdeFTuMKigvN5xs
44Ag008TN88Po7OKZ++vnuQATi/qyd3Ww6jEUMymQosTujRvUii9Q+iIk9W7
iTBOSNi4vtVXdAilJH+8ZLWJC5R1NVQurxlAD+X8n9HsuWCtTtSzTJkBFH3L
tEjMjQvqrlNjEyf6kd/5d0sNflxw1d7OoDyzH212eHPxv9dcMHdhpdgazX7U
xfUsOFJ8GdROFGsxlnqR8qGrARXty6Dv4+7aTTe7UZyq0yn7YB74/mWmxlK/
BXnZph2YvsYDy65eO7L+dzNCARw7n93lAbqNqsuwXzMaqnpNH8nggeuFiHke
NyEIWRq91ckDx56ZcFze3ogYra/OVW3lBdthYWqfWz3a/GguaIf4ctBeZ/n9
rlM1mpBKDLd9yQdhru9kevoyEEUxNKAhXhASfFweyfr8wdbiWo9evBSEA18E
P92p/oNDecsKz7wXhHkOF/kmei0eHRFeJlwpCK9yB4srxmrx72/xNy04hGB3
3Me71HP1+I5PVtJrTyE4sFCsXHeiEUsUd1QErxQGg660kHCddmz78QrZBsLA
MGmrrQ5tx2HpVIrMdmFwP9oc9LO5HY/fP+Gc5SkMtKA9d49s7cC1J6Y7e+OF
wVl+ddbJiQ4cJy02tYNDBMq/JqiZ23RhSS+kplYpAv+qaGPDv3vwrVyXK5KN
IpBY5n1TdaoHC/Cc6V3eKwIt0enuVIVezPHseSprXgTu1y16PD/Uixl1/MYF
NFHI2KFuf5D04hKL2o3OUaIgetU1+OFSH0a3mM+tH4iCmkjj10LVfpzXwrvc
/LkodIb0n0i36MeZ/mt+ahaIgsQ6w9KR0H6ckP7EYXRYFF5VSj9b4hrAeVEm
70q1xCD4sbMgx8wADlhpcbhITwyS+Ppky6QHsWnTdsk8uhhs2ftOx8VkEGdq
H/VL3yAGlzWeba/yHsQvv8avjdstBh38LyIonYP4zvTi14PhYpB5PPrph7wh
/J9H+Z/5HjFw3O/qWQ0MLOupdrJhSAy+7pTme+/EwKVHA3mzR8Tgm5FVt8sJ
BlY/rrPm+LwY/GvujGLeY+CW09efNEqIg6+Z+SfTQQa2D9n2X85GcWi23HpD
IZSJFy8lct2xEocI0yk1pTgmTg+deXRyB3v/u8e29hdMLBCR+ktzrzhcWZvy
7nkZExdH8ZvEnhaHa5/4+gwFWXjVw/JFn2fisHa0ZbtOGAv3PFJ7YPNSHAI1
Hm7UuMPCsY8D6dpvxOGTj01K81MWHnmm49GWKw7u2zxsruaxcGrK9XLbKnEY
LrYYLGWwsEtq56EVdeJQ1vBoc9Y0C/OmrZlf1sy2Zz+zcg83wYcyBg3y+8TB
M9TueKc8wYoftsXpLIqDSPOz5OrNBP/ISdTn4abAeYoX14sdBAd+nCnt4KfA
Ro3O9atcCK7PT525L0WB4INOY9FeBIcVcsb6KlCgZXjO0smXYGO8h2anRoEq
tyc6TecJvvWVfz+vPgX6vrjbyEQRbF5ycLrTmAK7N6Yeq44lmPHt0+1CMwo8
Ebeu3PKIYKvy/0rObqYAj5Om/pFUgid/fHGzt6bAN1NJAdFMgl9UyE3p2VPg
btD3f2dzCOaqLtfp3keB467aaWe/EgyRN9ebH2LvN7sph5cRfHHzTrv4YxRY
dm+Fw5ZfBBcsSh4a96bA92SudR/+EDz3seGs3TkKnGykl9U2ELzWN+Hq6/MU
eDlUykxuJThA/8BDnlAKsCIfP1XvIng8sR/nR1Pg2ty58wZD7Hhd035L36VA
1jrt2/lMgk9J+/SefkSBNqVAgekRgjOqjacrEimwdRq1d4+x442cFFjxigJl
eQp8IZME627JU7qSwebjDLhYPk3wsaULRm3ZFIjWilpfPEvwy08Wm9bkU+CA
zb4NJ+YJ7vXlcYr7QoF4n+zgkgWCNQ3Kj5HvFAg5bTz1c5Gt70DUeetfFLij
sP516BLBz5Lso1/UUkBdlztugI3bXCUTOZopUGd3/f0CGyvKNLzf10kBE7N7
fF/ZeG/No9KcfgoYXfsSa8rGD27sbxRnUSC15aSTC5u/fosG48Q4BYZKy3fp
su1LcvQvfp+lgO73qhtpcwTvynstrsEpATxbtvK0zBAcc9Zb8+JyCZgKx8X5
UwRXGRivbhSWgIrE+ArrCYJFBie2mUhKgMK5Ra3rowTbJn9yvSUvARm3u+v9
CMGRbhd8hlQlYIIm0C/BILhMxiJ0i7YEnBZacj8wQDDvb+67z/TZ50/JW7n2
ELw5qixlbqUE1MyGvFneQXDo1qg8p7USkP9A+f6hZoK/cNhXZgGb/3CmxMl6
gjnyJTqELCUgLjzPQLuGXZ/n/o4e3S4BVbI3J2J+Epw36C6rvFcCvLu/YF9M
8HSyul7gAQnwKv/UyfhI8Cr3vg21nhKQafSCIfWO4He/Tx6O9JUAXfOVywKS
CU7LD86YjJKAPEM3q4uhBA+dgy87YyVAb3n8l4BAglcYcde+iZcAk9XzxRqn
CH7+/MbMoZcSkKaOim+4Epxw8+HmKiwBctzpp17SCW6ydHfWLZUAmu6jUW0q
wbJc6l7hFWz/e/ir97L7+a5f6q11jRLgeNRNqo6T4Oj9H5tSRiUgQKVhvUol
C7O2rBa+Ny0BXPjuGtUiFt5Oy0FhixLgaW7zpPUdCwvNvH9+QEASUEC5ZPR9
Fr5x5623nLokTOq9Eih3Y+Fr315y3dgpCRfePU8sbmXigTQt00BnSSgJ0xd4
WMHElneeHz3qJgn3BOb+GeQzMe/+pIpN/0mC0Dv5xrj7TBw+/fje/CVJ0O0o
dtm9nYlD9e7qemdKgkip/I3KNwzcJS7p5pojCbd9LSlP7zOwxfSdW9YFksBz
rB/TQxmY41vMOLVMEjwHTtk8Yr+/Q9yjPre3S8JL/00nwuaHcfDtK7t2ikpB
ymjf36b1w9h/6nSQibcU0PY//CJxexB73nOlJp2VAk/tt048Zwaxk6nlb9Hz
UsCRFrvyw65BbOKrqDt8VQr8eMf5dkoM4lFWaWNiohR47x/RCL09gL37FNaI
1knBnnfXrCTZ99mRum9Tg+uk4dIF4eteq3qx49nMZOeN0nD7xD+5X6K9eLPE
I7tvVtKg/Fpsy9xAD1bfeSrl2W5puLI+ee79wx7cUSHv7OwjDZ7jNctez3Vj
1xKfnJIkaYjsf8a/LLsLO7yXO/eUXwbMGl/FOXN2YJN0O34iKgMSYXY/ZNLa
sWRK+GNzaRlId3O5T3dox7UP/31rVZeB6pxgteCkNuwUWi6tuF4Gtqm8kgjf
0IpddgZ+fOAtA2LhV/J1PJuwO2mYu/1HBnLaviTPXa3F/+k9CA17LAvRR/q2
CVwpwq1pnRfp0vKQKyvU1Lf+F/KONH8TqygP3nNudzcsq0Ic/z1qnFCXh+OC
LMct5VVIk7rbJM9QHgR3yHMYva5GXs/KBjduk4fG00XXtqz8jSbj3jo6BsvD
875vby6vr0NiFy/o+nfJA8Vvz/1wzWaU5Nrk3DggD53X0yo6LzWjletWh68j
bHsGhpNTLc3IaXqkfWlOHhY4PYJ3xLWgx2c87l6TUoA11wuaI5dake5RG46H
VgqQWuNRkn+4A22yl6svyFCAe5M7qkMEu9HkXrrGu2wF0NqWkPiR3o1eH9l2
KiVPAbxVb7aUOncjsfOBAndKFUB5YmbDoeRu1PKi0fxomwIoxByMvGHWg87O
xaeIiyjCBpEGzwN7e9GLl/KBnicVYUktVnMwsB+5ZBmX7vNVBCu3Z7orH/Yj
oQJriZ2BihBadPG3VV4/OlMTlL4uXBF8HQ4P1830I/P5pk6xx4rw9uJ/d338
BlD9zkfW+RWKsHbtOMvjyCBavqCgKEZTgvOaPBJ3ZIeRddHTrjBjJQh0sP07
sHIYRV3RSJ0xU4IPTtWF0zuGEUVAb1X3FiVwdbNq2Bg2jJRl1trn7FeCWu3C
vIDhYWRCdwlzjVWCrWK33OhvGMh/vNm6Jl4JNj9e/DP7lYHycveLb32mBNEP
Bd0CGxkIzI8+MUxXAiv9fYVxPExkY+P3keu7Eow933XRfC8THToSx3g1qwRH
NZeVGUww0YsVsu+VOJVBpezxM8PlLDQw/CjwznJlKGFsQF2yLOR9Jpk3WFIZ
uPuItOs6FgoMeadqZ6AMmq2Rzo+DWahg46r+YhNlqDczDtWOYqFFnrx0s3XK
0H04UPbQIxYKi/qyVt2KjZt4hvo/slBMfLXjxEFlsLI8u0AfYaE/ro4KXseU
gXLw1751CywkrdrQ2eatDMsHVi6N8bPnzZft3mXnlWHNJo/bZ9QJav/vsOmG
UGXIurkfzAwIUtfvn8u6pgw8Dd+z36whKOU969qju8og27jbP9GOoCG/M3Zi
CcrwuskqSm0vQbS1k1LhScrwmXfzuJ0HQe+KFpK83yrD6KKoY64/QZ8rhQot
ypUh3fjPs/SHBI0ONx9/UKUMih5nHQKT2POsQJo8qVOG0PbBuxOpBN3cui0g
oUsZ8uMHQ5ZyCSrykNUeG1CGG6oruW9+Jmg8tL9uG1GGmsaqmh8lBLni8JVT
c8pwVFde0LmaoJhWx67tXCrguadsz4s6gkrmNG4/51MBkZU/c5ObCJqWG0Nz
Iiowf/+B7K52gvTMvrJ2SqnAni0+pzK7CXJ3uv34lYIKeIw6ZX/uJ+jO2QO2
S2oqMHlctSl4mKDSO4Zzu1eogFLGkYYhFkGzmYupbwxU4O3c9Zd8owQZVFW6
LDNVAdbYp/X14wQdYiYs37tOBYxeDsc6TBF0T/BETqaFClxNbntxaYagcp11
R5ZbqUCQiOJJtzmC5i0FJN13qMCnV5M9g/MEGXk2fs12VIGWtkh+6iJBHmGv
TgvuUwHd35//ii8R9CDJX/XQQRVwP7BxezobVxRtrfp4VAXO69w6Ns3GHO1S
F0W9VeBR7MCKMTY2WeiheZ5VgV8V+6Ifs/FRhezmgiAVGPuB46fY/A/XXImU
uKwCSds+2HKy8S/nXWu8rqoApfRlah7bHy4/tYGimyrAF1j2XoPt76q4kXsy
cWy+HbI+69nxeL3DW7wfqsCKVrcObna8T6qjx0uesfPrrCt8gZ2P3yy3ZIUU
FdC81DD3/B9BPML6u86kq0BzfNT7YHY+zfTmOcrfq8BxR5P13Ox8n9j2861K
ngr4fYp4so6tR234f8KVpSpQ3jMhnddGEN9zswKNShUQzPTeyMnWd/3X5ceD
/qiA7Oy2M9O1BCUvvijT7lABVf1QylQ5QfWK5/wv9qlA+p/LTxaLCRJYt5la
x1CBEgMdz5xCgs74d10JnVGBwnr7gVWZBL24m2XcuKQCoZtySpZeEcTYUzQi
s0wVAuxuqgYmEqQacOupN78qrC0hSRduE7R2+dRkvJAqnHN7/I/vOkGO99x3
fBNVhYnbHGJbLhF0LVt/QUFaFX7OfpSsPklQ0qa7jpZyqvBB46iOCrt/Cn7P
p51RVIVU12AvFXZ/jYz83Fuurgo6w2J/V24hyFnf66OfoSp8vxC+7a0MQaG7
3j49bqwKKZnrMt2ECHrjPx5xwFQVtp1at76Mg63X14u7rdepgvsiS+f3AAu9
cYodVbJUheuMg1sKPrBQ/fmGRoq1Klx1icnf8YqFOBOVvizfrgppB7PpTx6y
kNNwyq1/u1ThvavCvbMXWYjjUgHtm7sqHFnDlcq1iYV0X3BK5h1UhRtN/mGX
VrLQ7h9b5zI8VOFO3or9BRos9FqypvyBlyoIbnya4L2MvZ/a63nCTxVeaXGq
fsFM9Pq3SKJEtCpohuW5IRoT1U45XOO7zfa/1j4qQ5aJlhTjfRZi2fG1m2m2
cTOR41EN8/54VRh+9HlDSAsDLc2tbs57oQqcDqqTldcYyFHroNShQlXQ98yh
l9YNo0X/99czGapQWEChXNk4hE4FZuj3ElVYdUygVFxrCHUHpdbIjakCc+VF
O7flQ6jswlO5KzPsfIV+k6T9HER3rtxI3c2rBrw/Xw9n2g0i6q3D5bMqavBH
7qDAE9sBtOOlBP8WBzWY7U28tke2DxWliKQHOqlBmdj13RpjvWhlKv/OjD1q
8ITe/Dm7shfJvll6IHNAjf2+nOo3DO1FXVnDK4ZOqIHQ86p1dwZ6kF9hsdWt
CDXo48kbdUvrRk9qfa81flKDtc7Cm3oFO5HaCduCvwVqcM5FzcSmuwM9X6Y1
UofVwEh6h8ONvA6UZlzv/PubGhTs2X790bEO9DHGTPtnjRrUFKt/F4xoR79t
F74VDKrB/Y8P01O6WhDvt4hlz+TUoWR/Zm7Hib/o5If4i56B6qCvZZ/k3/kd
7RnXvWhkqgH65V3RaZWlOEGq/dB+Mw2IPNK/lufed9yxKtYyep0GOJfna2u4
l+FjgXNiDAsNcPxQ0JDMLMd+iz+TU3ZogElY+fbL/JX4Dt/JcuVjGuCU+3Jd
UHwNrlB8Kyn8SAPyh3x5Y5/+xWLmh2fWPdGAZdPVCqqLf7HDfpk2r0QN0Flr
6XXKtQE3JYaklKVoQOJZ/ykn2UY8SLVfG5atAWobjjSo3WzCvPR/++cqNeDg
8hTOzv9aMdqyMm2QQxOS31QatJ3txHHzJSpdyzTZ37szW58ldOKB905xTbya
YBIrF76upBPHqAdd+CmkCTxFItLzlC7ctVRkly6rCZSYOvGEjC4clrdj/JSR
JsRwLP0SauvG5YZeG6b3a0LeHbcEH4U+rMy+PkcOacJJjzeK2Rv68JknN6mD
RzTBavFF1Pf9fVheOEu06bgm6L9xEt2b3IdPDE115vtrwm+LqstaK/qxyIvw
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
TSRT
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
M1I=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
cYodVbJUheuMg1sKPrBQ/fmGRoq1Klx1icnf8YqFOBOVvizfrgppB7PpTx6y
kNNwyq1/u1ThvavCvbMXWYjjUgHtm7sqHFnDlcq1iYV0X3BK5h1UhRtN/mGX
VrLQ7h9b5zI8VOFO3or9BRos9FqypvyBlyoIbnya4L2MvZ/a63nCTxVeaXGq
fsFM9Pq3SKJEtCpohuW5IRoT1U45XOO7zfa/1j4qQ5aJlhTjfRZi2fG1m2m2
cTOR41EN8/54VRh+9HlDSAsDLc2tbs57oQqcDqqTldcYyFHroNShQlXQ98yh
l9YNo0X/99czGapQWEChXNk4hE4FZuj3ElVYdUygVFxrCHUHpdbIjakCc+VF
O7flQ6jswlO5KzPsfIV+k6T9HER3rtxI3c2rBrw/Xw9n2g0i6q3D5bMqavBH
7qDAE9sBtOOlBP8WBzWY7U28tke2DxWliKQHOqlBmdj13RpjvWhlKv/OjD1q
8ITe/Dm7shfJvll6IHNAjf2+nOo3DO1FXVnDK4ZOqIHQ86p1dwZ6kF9hsdWt
CDXo48kbdUvrRk9qfa81flKDtc7Cm3oFO5HaCduCvwVqcM5FzcSmuwM9X6Y1
UofVwEh6h8ONvA6UZlzv/PubGhTs2X790bEO9DHGTPtnjRrUFKt/F4xoR79t
F74VDKrB/Y8P01O6WhDvt4hlz+TUoWR/Zm7Hib/o5If4i56B6qCvZZ/k3/kd
7RnXvWhkqgH65V3RaZWlOEGq/dB+Mw2IPNK/lufed9yxKtYyep0GOJfna2u4
l+FjgXNiDAsNcPxQ0JDMLMd+iz+TU3ZogElY+fbL/JX4Dt/JcuVjGuCU+3Jd
UHwNrlB8Kyn8SAPyh3x5Y5/+xWLmh2fWPdGAZdPVCqqLf7HDfpk2r0QN0Flr
6XXKtQE3JYaklKVoQOJZ/ykn2UY8SLVfG5atAWobjjSo3WzCvPR/++cqNeDg
8hTOzv9aMdqyMm2QQxOS31QatJ3txHHzJSpdyzTZ37szW58ldOKB905xTbya
YBIrF76upBPHqAdd+CmkCTxFItLzlC7ctVRkly6rCZSYOvGEjC4clrdj/JSR
JsRwLP0SauvG5YZeG6b3a0LeHbcEH4U+rMy+PkcOacJJjzeK2Rv68JknN6mD
RzTBavFF1Pf9fVheOEu06bgm6L9xEt2b3IdPDE115vtrwm+LqstaK/qxyIvw
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
TSRT
                "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0, 6 Pi}, {-0.9999990687548602, 
               0.9999999999999261}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0], 
                Thickness[Large]], 
               Directive[
                Opacity[1.], 
                AbsoluteThickness[2], 
                RGBColor[0, 0, 1], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 6 Pi}, {-0.9999990687548602, 
              0.9999999999999261}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0], 
               Thickness[Large]], 
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               RGBColor[0, 0, 1], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
M1I=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
cYodVbJUheuMg1sKPrBQ/fmGRoq1Klx1icnf8YqFOBOVvizfrgppB7PpTx6y
kNNwyq1/u1ThvavCvbMXWYjjUgHtm7sqHFnDlcq1iYV0X3BK5h1UhRtN/mGX
VrLQ7h9b5zI8VOFO3or9BRos9FqypvyBlyoIbnya4L2MvZ/a63nCTxVeaXGq
fsFM9Pq3SKJEtCpohuW5IRoT1U45XOO7zfa/1j4qQ5aJlhTjfRZi2fG1m2m2
cTOR41EN8/54VRh+9HlDSAsDLc2tbs57oQqcDqqTldcYyFHroNShQlXQ98yh
l9YNo0X/99czGapQWEChXNk4hE4FZuj3ElVYdUygVFxrCHUHpdbIjakCc+VF
O7flQ6jswlO5KzPsfIV+k6T9HER3rtxI3c2rBrw/Xw9n2g0i6q3D5bMqavBH
7qDAE9sBtOOlBP8WBzWY7U28tke2DxWliKQHOqlBmdj13RpjvWhlKv/OjD1q
8ITe/Dm7shfJvll6IHNAjf2+nOo3DO1FXVnDK4ZOqIHQ86p1dwZ6kF9hsdWt
CDXo48kbdUvrRk9qfa81flKDtc7Cm3oFO5HaCduCvwVqcM5FzcSmuwM9X6Y1
UofVwEh6h8ONvA6UZlzv/PubGhTs2X790bEO9DHGTPtnjRrUFKt/F4xoR79t
F74VDKrB/Y8P01O6WhDvt4hlz+TUoWR/Zm7Hib/o5If4i56B6qCvZZ/k3/kd
7RnXvWhkqgH65V3RaZWlOEGq/dB+Mw2IPNK/lufed9yxKtYyep0GOJfna2u4
l+FjgXNiDAsNcPxQ0JDMLMd+iz+TU3ZogElY+fbL/JX4Dt/JcuVjGuCU+3Jd
UHwNrlB8Kyn8SAPyh3x5Y5/+xWLmh2fWPdGAZdPVCqqLf7HDfpk2r0QN0Flr
6XXKtQE3JYaklKVoQOJZ/ykn2UY8SLVfG5atAWobjjSo3WzCvPR/++cqNeDg
8hTOzv9aMdqyMm2QQxOS31QatJ3txHHzJSpdyzTZ37szW58ldOKB905xTbya
YBIrF76upBPHqAdd+CmkCTxFItLzlC7ctVRkly6rCZSYOvGEjC4clrdj/JSR
JsRwLP0SauvG5YZeG6b3a0LeHbcEH4U+rMy+PkcOacJJjzeK2Rv68JknN6mD
RzTBavFF1Pf9fVheOEu06bgm6L9xEt2b3IdPDE115vtrwm+LqstaK/qxyIvw
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
TSRT
            "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{0, 6 Pi}, {-0.9999990687548602, 
           0.9999999999999261}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0], 
            Thickness[Large]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Thickness[Large]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox["\"time\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"amplitude\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Electron Spin Rotation in a magnetic field\"", 
      TraditionalForm], PlotRange -> 
    NCache[{{0, 6 Pi}, {-0.9999990687548602, 0.9999999999999261}}, {{
       0, 18.84955592153876}, {-0.9999990687548602, 0.9999999999999261}}], 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Spin X direction\"", "\"Spin Y direction\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{
  3.937022812362885*^9, {3.937022902755869*^9, 3.9370229236331177`*^9}, 
   3.937280892665975*^9, 3.949994259353875*^9, 3.955441612826682*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"Out[90]=",ExpressionUUID->"add38ea8-5cbd-4d04-aa16-a42d72cdc86b"]
}, Open  ]],

Cell[TextData[{
 "Meaning that we can substitute ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "y(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e6dd7da3-d109-4101-9b8e-472bdb83abd2"],
 " with ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "(", 
         RowBox[{
           StyleBox["t", "TI"], "-", 
           FractionBox[
            StyleBox["T", "TI"], "4"]}], ")"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x(t- \\frac{T}{4})", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "91081e2b-3014-4e1d-8b2a-db609f747283"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["T", "TI"], TraditionalForm], "errors" -> {}, "input" -> "T", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2de0a7a2-0919-4570-8020-9a27aae8eda4"],
 " is the time of one period. then:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["Y", "TI"], 
         RowBox[{"(", "\[Omega]", ")"}], "\[LongEqual]", "\[Integral]", 
         StyleBox["X", "TI"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["t", "TI"], "-", 
             StyleBox["T", "TI"], "/", "4"}], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "\[Omega]", 
            StyleBox["t", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"], "\[LongEqual]", "\[Integral]", 
         StyleBox["X", "TI"], 
         RowBox[{"(", 
           SuperscriptBox[
            StyleBox["t", "TI"], "\[Prime]"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "\[Omega]", 
            SuperscriptBox[
             StyleBox["t", "TI"], "\[Prime]"], "+", 
            StyleBox["T", "TI"], "/", "4"}]], 
         StyleBox["d", "TI"], 
         SuperscriptBox[
          StyleBox["t", "TI"], "\[Prime]"], "\[LongEqual]", 
         StyleBox["i", "TI"], "\[Integral]", 
         StyleBox["X", "TI"], 
         RowBox[{"(", 
           SuperscriptBox[
            StyleBox["t", "TI"], "\[Prime]"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "\[Omega]", 
            RowBox[{"(", 
              RowBox[{
                SuperscriptBox[
                 StyleBox["t", "TI"], "\[Prime]"], "+", 
                StyleBox["T", "TI"], "/", "4"}], ")"}]}]], 
         StyleBox["d", "TI"], 
         SuperscriptBox[
          StyleBox["t", "TI"], "\[Prime]"], "\[LongEqual]", 
         StyleBox["i", "TI"], 
         StyleBox["X", "TI"], 
         RowBox[{"(", "\[Omega]", ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "Y(\\omega)=\\int X(t-T/4) e^{i\\omega t}dt=\\int \
X(t^\\prime)e^{i\\omega t^\\prime+T/4}dt^\\prime=i\\int \
X(t^\\prime)e^{i\\omega(t^\\prime + T/4)}dt^\\prime = i X(\\omega)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1d9bd0f8-84d9-4787-9070-0914abd7e89f"],
 "\nYielding",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["S", "TI"], 
          RowBox[{
            StyleBox["x", "TI"], 
            StyleBox["y", "TI"]}]], 
         RowBox[{"(", "\[Omega]", ")"}], "\[Proportional]", "<", 
         SubscriptBox[
          StyleBox["X", "TI"], "\[Omega]"], 
         SubsuperscriptBox[
          StyleBox["Y", "TI"], "\[Omega]", "*"], ">", "\[LongEqual]", "-", 
         StyleBox["i", "TI"], "<", 
         SubscriptBox[
          StyleBox["X", "TI"], "\[Omega]"], 
         SubsuperscriptBox[
          StyleBox["X", "TI"], "\[Omega]", "*"], ">"}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "S_{xy}(\\omega)\\propto <X_\\omega Y_\\omega^*>=-i<X_\\omega \
X_\\omega^*>", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "54c34eae-d3bd-4e53-b669-b06493411ae0"],
 " \nSo we expect ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"Im", 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["S", "TI"], 
              RowBox[{
                StyleBox["x", "TI"], 
                StyleBox["y", "TI"]}]], "(", "\[Omega]", ")"}], ")"}], "<", 
         "0"}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\text{Im}(S_{xy}(\\omega))<0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "36651b24-0ed5-4971-8925-e8d4909fba97"],
 " and purely imaginary with no real part. "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.9370229499087677`*^9, 3.9370230411109467`*^9}, {
  3.937023117037462*^9, 3.937023120480259*^9}, {3.937023156231097*^9, 
  3.93702319303796*^9}, {3.9370236421028843`*^9, 3.9370236559270144`*^9}, {
  3.937023710604888*^9, 3.937023726471836*^9}, {3.937280806375257*^9, 
  3.9372808181248703`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f5618a32-2ac3-4b87-9889-39c168b1e912"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HamiltonainExample", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}], "+", " ", 
    RowBox[{
     RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cOpsListExample", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "*", "0.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"measureOpsListExample", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}], ",", 
     RowBox[{
      RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]ListExample", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]ListExample", "=", 
   RowBox[{"{", 
    RowBox[{"0.01", ",", "0.01"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SecondOrderCrossExample", "=", 
   RowBox[{"CalcSpectra", "[", 
    RowBox[{
    "HamiltonainExample", ",", " ", "cOpsListExample", ",", " ", 
     "measureOpsListExample", ",", " ", "\[Gamma]ListExample", ",", " ", 
     "\[Beta]ListExample", ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotSpectra", "[", 
  RowBox[{"SecondOrderCrossExample", ",", 
   RowBox[{"{", "2", "}"}], ",", "0", ",", " ", "3", ",", "170"}], 
  "]"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.9370237735772123`*^9, 3.937023791377713*^9}, {
  3.9370240205071*^9, 3.937024141474908*^9}, {3.937282139932825*^9, 
  3.937282144587838*^9}, {3.955442234441543*^9, 3.9554422444813643`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[15]:=",ExpressionUUID->"c1790823-6cb2-4bab-bad6-7fab090e7c7e"],

Cell[BoxData[
 GraphicsBox[{{}, InsetBox[
    GraphicsBox[{{}, {InsetBox[
        GraphicsBox[{{{}, {}, 
           TagBox[
            {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
             Opacity[1.], LineBox[CompressedData["
1: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
              "]]},
            Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox["\"Real Part of S2\"", TraditionalForm],
         PlotRange->{All, All},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {160., -97.26975123751222}, 
        ImageScaled[{0.5, 0.5}], {300., 185.27571664288044},
        BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        GraphicsBox[{{{}, {}, 
           TagBox[
            {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
             Opacity[1.], LineBox[CompressedData["
1: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
qlCZ4OSpBU4St+YXF2n4apSDSa6FFvwPI7BqmA==
              "]]},
            Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 1.0325118461853721`*^-16},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->All,
         Method->{
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}},
         PlotLabel->FormBox["\"Imaginary Part of S2\"", TraditionalForm],
         PlotRange->{All, All},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}], {480., -97.26975123751222}, 
        ImageScaled[{0.5, 0.5}], {300., 185.27571664288044},
        BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
     DisplayFunction->Identity,
     ImagePadding->{{0., 0.}, {0., 0.}},
     ImageSize->{640., 194.53950247502445`},
     Method->{"IgnoreImageSizeAutomaticLimit" -> True},
     PlotRange->{{0, 640.}, {-194.53950247502445`, 0}},
     PlotRangePadding->Automatic], {336., -102.13323879938784}, 
    ImageScaled[{0.5, 0.5}], {640., 194.53950247502445},
    BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], {}},
  ImageSize->{
    UpTo[600], 
    UpTo[195]},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRangePadding->Automatic]], "Output",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.9370241101001377`*^9, 3.937024141765353*^9}, 
   3.949994259456702*^9, 3.955441294474702*^9, 3.955441560893386*^9, 
   3.955441612911028*^9, 3.955441769526741*^9, 3.955442245032674*^9, 
   3.9554423682021437`*^9, 3.955442534900703*^9, 3.955509051754135*^9, 
   3.9555106205208197`*^9, 3.955510752978198*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"Out[21]=",ExpressionUUID->"0592c70e-f0a9-4001-a02c-3e129f9b4fbd"]
}, Open  ]],

Cell["\<\
As we see the imaginary part is giving the correct phase information and \
correlation between the two spins. The constant 0 for the real part was also \
expected. \
\>", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.937280733601038*^9, 3.937280842325796*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"5cef91da-4f48-424d-b898-48d43b760597"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examining different Systems", "Chapter",
 CellChangeTimes->{{3.9374552975358467`*^9, 
  3.9374553073326063`*^9}},ExpressionUUID->"07b6362e-3587-42c7-adbb-\
7950c9383188"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cOpsListExample", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "*", "0.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"measureOpsListExample", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}], ",", 
     RowBox[{
      RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}], ",", " ", 
     RowBox[{
      RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]ListExample", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]ListExample", "=", 
   RowBox[{"{", 
    RowBox[{"0.01", ",", "0.01", ",", " ", "0.01"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ThirdOrderCrossExample", "=", 
   RowBox[{"CalcSpectra", "[", 
    RowBox[{
    "HamiltonainExample", ",", " ", "cOpsListExample", ",", " ", 
     "measureOpsListExample", ",", " ", "\[Gamma]ListExample", ",", " ", 
     "\[Beta]ListExample", ",", " ", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.955441303580147*^9, 3.95544137973834*^9}, {
  3.955441492231612*^9, 3.955441513349732*^9}, {3.9554415518566*^9, 
  3.955441590028624*^9}, {3.955441775954438*^9, 3.9554417946303*^9}, {
  3.95544214623536*^9, 3.955442199641308*^9}, {3.9554423739089603`*^9, 
  3.9554423819599257`*^9}, {3.955442448457136*^9, 3.9554424492689857`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"18da1754-4eda-4659-9111-9b0aa3ed8c5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotSpectra", "[", 
  RowBox[{"ThirdOrderCrossExample", ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"-", "3"}], ",", " ", "3", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.9554424537587337`*^9, 3.955442503864153*^9}, 
   3.9554425411078587`*^9, {3.955510891805695*^9, 3.955510893027959*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"21c42944-0ff5-4b87-b886-bedd6c001c87"],

Cell[BoxData[
 GraphicsBox[{{}, InsetBox[
    GraphicsBox[{{}, {InsetBox[
        StyleBox[
         TemplateBox[{
           GraphicsBox[{
             GraphicsComplexBox[CompressedData["
1:eJyF3T+oZlfZhvExJp4QCxuxiEKIDKiFpLGx0QOCEosUBkEsEtAIWqhglcZm
QBMLm6SIgiiCEhBBbKwET8B/oIIo2GgRhQgiwihRQgjR885ev0dyLQ7z8cHi
ej05796TubL3Wut57nX/Jz7/kU/dce3atev3XLt2Go//u/vC+Nyv3vX4e+86
G77xzMM3v3DPG4Y/8Mkvfvr7b7pr+M4Hnn3+hTffOfyzl3/7sfvuff3wl39+
+uCO4Q89df3Bp66/bvjuRx66/Mprw0+fvu6RV3+C3/L30ze+Mvz1Wxf08vDb
7j39wEvD3/rh+97zhyf+M/z2B09f+OLwdy+v9sff+NfwOy/v9oFnbw5/9L7T
L/zH8MdPl/f434YfPd3+V18YfuyS/v3tPw//7kef/ePl/w//6fLbbjzz++Hf
nL7+xi+Gn3zi9Af0g+HrT97i9+MXj58fvnn8vuG/Ht83/LnjeoY/c1zv8GPH
/Qw/etzv8LuPP4/h7x1/XsPvOP48h79z/HkP33/8+xj+5vHva/itx7/P4a8d
/76H33j8fTjHHz7+vgx/5fj7NPzL4+/b8Nnx93H4g8ff1+EvHX+fh396/H0f
XmN5vOjID8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/MD8wPzA/MD8yPud7lx9zP8gPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzI8+F8uYB7sgPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPud7lx9zP8gPzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI+9J5e25UA9wR35gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+zPUu
P+Z+lh+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5k3lLf3pD4X
6gHuyA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/Mj7ne5cfcz/ID8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8yPz6PI2b+h7Up8L9QB35AfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+YH5gfmB+YH5gfmB+YH5sdc7/Jj7mf5gfmB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gfmRdaXyNo/uvKHvSX0u1APckR+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfc73Lj7mf5Qfm
B+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmR9ZZy9u6UufRnTf0PanP
hXqAO/ID8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD82Oud/kx97P8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI
vkN5W2ftulLn0Z039D2pz4V6gDvyA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzY653+TH3s/zA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/Mg+XHnbd+g6a9eVOo/uvKHvSX0u1APckR+YH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfc73Lj7mf5QfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmR/aly9s+XPcdus7adaXOoztv
6HtSnwv1AHfkB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+bHXO/yY+5n+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5kTqN
8rYv3X247jt0nbXrSp1Hd97Q96Q+F+oB7sgPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/MD8wPzA/MD8yPud7lx9zP8gPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzI3VL5a1Oo/vS3YfrvkPXWbuu1Hl05w19T+pzoR7gjvzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8mOtdfsz9LD8wPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP1LHV97qllqn0X3p7sN136Hr
rF1X6jy684a+J/W5UA9wR35gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+
YH5gfsz1Lj/mfpYfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+p
ay1vdXytW2qdRveluw/XfYeus3ZdqfPozhv6ntTnQj3AHfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfkx17v8mPtZfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+pM67vNW1to6vdUut0+i+dPfhuu/QddauK3Ue3XlD
35P6XKgHuCM/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+Z6lx9zP8sP
zA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/0PZS3Ou/WtbaOr3VL
rdPovnT34brv0HXWrit1Ht15Q9+T+lyoB7gjPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/5nqXH3M/yw/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/Mj/QBlbe+h9Z5t661dXytW2qdRveluw/XfYeus3ZdqfPozhv6ntTnQj3A
HfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfkx17v8mPtZfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+pC+uvPUBte+hdd6ta20dX+uWWqfRfenu
w3XfoeusXVfqPLrzhr4n9blQD3BHfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7M
9S4/5n6WH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf6RMtb31x
7QNq30PrvFvX2jq+1i21TqP70t2H675D11m7rtR5dOcNfU/qc6Ee4I78wPzA
/MD8wPzA/MD8wPzA/MD8wPyY611+zH0sPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD8wPzA/MD8wPzA/0jdd3vpE2xfXPqD2PbTOu3WtreNr3VLrNLov3X247jt0
nbXrSp1Hd97Q96Q+F+oB7sgPzA/MD8wPzA/MD8wPzA/MD8yPuc7lx9zP8gPz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzIzkC5a1vun2i7YtrH1D7
Hlrn3brW1vG1bql1Gt2X7j5c9x26ztp1pc6jO2/oe1KfC/UAd+QH5gfmB+YH
5gfmB+YH5gfmx1zv8mPuZ/mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+ZFcjfKWI9C+6faJti+ufUDte2idd+taW8fXuqXWaXRfuvtw3XfoOmvX
lTqP7ryh70l9LtQD3JEfmB+YH5gfmB+YH5gfmB9zvcuPuZ/lB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZHcmbKW65GcwTaN90+0fbFtQ+ofQ+t
825da+v4WrfUOo3uS3cfrvsOXWftulLn0Z039D2pz4V6gDvyA/MD8wPzA/MD
8wPzY653+TH3s/zA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Eju
UnnLmWmuRnME2jfdPtH2xbUPqH0PrfNuXWvr+Fq31DqN7kt3H677Dl1n7bpS
59GdN/Q9qc+FeoA78gPzA/MD8wPzA/Njrnf5Mfez/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8wPzA/MD8SA5Zectdas5MczWaI9C+6faJti+ufUDte2id
d+taW8fXuqXWaXRfuvtw3XfoOmvXlTqP7ryh70l9LtQD3JEfmB+YH5gfmB9z
vcuPuZ/lB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZHcvnKWw5Z
c5eaM9NcjeYItG+6faLti2sfUPseWufdutbW8bVuqXUa3ZfuPlz3HbrO2nWl
zqM7b+h7Up8L9QB35AfmB+YH5sdc7/Jj7mf5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmRnMrylsvXHLLmLjVnprkazRFo33T7RNsX1z6g9j20
zrt1ra3ja91S6zS6L919uO47dJ2160qdR3fe0PekPhfqAe7ID8wPzI+53uXH
3M/yA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjua3lLaeyuXzN
IWvuUnNmmqvRHIH2TbdPtH1x7QNq30PrvFvX2jq+1i21TqP70t2H675D11m7
rtR5dOcNfU/qc6Ee4I78wPyY611+zP0sPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD8wPzA/MD8wPzA/kmNc3nJbm1PZXL7mkDV3qTkzzdVojkD7ptsn2r649gG1
76F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOGvif1uVAPcEd+zPUuP+Z+
lh+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH8n1Lm85xs1tbU5l
c/maQ9bcpebMNFejOQLtm26faPvi2gfUvofWebeutXV8rVtqnUb3pbsP132H
rrN2Xanz6M4b+p7U50I9wB35Mfez/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8SM59ecv1bo5xc1ubU9lcvuaQNXepOTPN1WiOQPum2yfavrj2
AbXvoXXerWttHV/rllqn0X3p7sN136HrrF1X6jy684a+J/W5UA/mejNOfcni
qS9ZPPUli6e+ZPHUlyye+pLFU1+yeOpLFk99yeKpL1k89SWLp75k8dSXLJ76
ksVTX7J46ksWT33J4qkveS1vOffN9W6OcXNbm1PZXL7mkDV3qTkzzdVojkD7
ptsn2r649gG176F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOGvif1uVAP
5n4yTn3i4qlPXDz1iYunPnHx1CcunvrExVOfuHjqExdPfeLiqU9cPPWJi6c+
cfHUJy6e+sTFU5+4eOoTF0994mt5O/ehOffN9W6OcXNbm1PZXL7mkDV3qTkz
zdVojkD7ptsn2r649gG176F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOG
vif1uVAPcEd+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfuRcoPJ2DkrP
fWjOfXO9m2Pc3NbmVDaXrzlkzV1qzkxzNZoj0L7p9om2L659QO17aJ1361pb
x9e6pdZpdF+6+3Ddd+g6a9eVOo/uvKHvSX0u1APckR+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB+YHzknq7ydC9RzUHruQ3Pum+vdHOPmtjansrl8zSFr7lJz
Zpqr0RyB9k23T7R9ce0Dat9D67xb19o6vtYttU6j+9Ldh+u+Q9dZu67UeXTn
DX1P6nOhHuCO/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mi5ceXtnKyeC9Rz
UHruQ3Pum+vdHOPmtjansrl8zSFr7lJzZpqr0RyB9k23T7R9ce0Dat9D67xb
19o6vtYttU6j+9Ldh+u+Q9dZu67UeXTnDX1P6nOhHuCO/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzIOYrl7dy4npPVc4F6DkrPfWjOfXO9m2Pc3NbmVDaXrzlk
zV1qzkxzNZoj0L7p9om2L659QO17aJ1361pbx9e6pdZpdF+6+3Ddd+g6a9eV
Oo/uvKHvSX0u1APckR+YH5gfmB+YH5gfmB+YH5gfmB+YHzlXtLydo9hz43pO
Vs8F6jkoPfehOffN9W6OcXNbm1PZXL7mkDV3qTkzzdVojkD7ptsn2r649gG1
76F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOGvif1uVAPcEd+YH5gfmB+
YH5gfmB+YH5gfmB+5Jzd8nauaM9R7LlxPSer5wL1HJSe+9Cc++Z6N8e4ua3N
qWwuX3PImrvUnJnmajRHoH3T7RNtX1z7gNr30Drv1rW2jq91S63T6L509+G6
79B11q4rdR7deUPfk/pcqAe4Iz8wPzA/MD8wPzA/MD8wPzA/cu50eTtnt+eK
9hzFnhvXc7J6LlDPQem5D825b653c4yb29qcyubyNYesuUvNmWmuRnME2jfd
PtH2xbUPqH0PrfNuXWvr+Fq31DqN7kt3H677Dl1n7bpS59GdN/Q9qc+FeoA7
8gPzA/MD8wPzA/MD8wPzI+ewl7dzp3vObs8V7TmKPTeu52T1XKCeg9JzH5pz
31zv5hg3t7U5lc3law5Zc5eaM9NcjeYItG+6faLti2sfUPseWufdutbW8bVu
qXUa3ZfuPlz3HbrO2nWlzqM7b+h7Up8L9QB35AfmB+YH5gfmB+YH5gfmR3g7
h73nTvec3Z4r2nMUe25cz8nquUA9B6XnPjTnvrnezTFubmtzKpvL1xyy5i41
Z6a5Gs0RaN90+0TbF9c+oPY9tM67da2t42vdUus0ui/dfbjuO3SdtetKnUd3
3tD3pD4X6gHuyA/MD8wPzA/MD8wPzI/wnFvFj57D3nOne85uzxXtOYo9N67n
ZPVcoJ6D0nMfmnPfXO/mGDe3tTmVzeVrDllzl5oz01yN5gi0b7p9ou2Lax9Q
+x5a59261tbxtW6pdRrdl+4+XPcdus7adaXOoztv6HtSnwv1AHfkB+YH5gfm
B+YH5kd4znHjB+ZHz2HvudM9Z7fnivYcxZ4b13Oyei5Qz0HpuQ/NuW+ud3OM
m9vanMrm8jWHrLlLzZlprkZzBNo33T7R9sW1D6h9D63zbl1r6/hat9Q6je5L
dx+u+w5dZ+26UufRnTf0PanPhXqAO/ID8wPzA/MD8yM85xryA/MD86PnsPfc
6Z6z23NFe45iz43rOVk9F6jnoPTch+bcN9e7OcbNbW1OZXP5mkPW3KXmzDRX
ozkC7Ztun2j74toH1L6H1nm3rrV1fK1bap1G96W7D9d9h66zdl2p8+jOG/qe
1OdCPcAd+YH5gfmB+RGecz75gfmB+YH50XPYe+50z9ntuaI9R7HnxvWcrJ4L
1HNQeu5Dc+6b690c4+a2NqeyuXzNIWvuUnNmmqvRHIH2TbdPtH1x7QNq30Pr
vFvX2jq+1i21TqP70t2H675D11m7rtR5dOcNfU/qc6Ee4I78wPzA/AjPubf8
wPzA/MD8wPzoOew9d7rn7PZc0Z6j2HPjek5WzwXqOSg996E59831bo5xc1ub
U9lcvuaQNXepOTPN1WiOQPum2yfavrj2AbXvoXXerWttHV/rllqn0X3p7sN1
36HrrF1X6jy684a+J/W5UA9wR35gfoTnHGh+YH5gfmB+YH5gfvQc9p473XN2
e65oz1HsuXE9J6vnAvUclJ770Jz75no3x7i5rc2pbC5fc8iau9ScmeZqNEeg
fdPtE21fXPuA2vfQOu/WtbaOr3VLrdPovnT34brv0HXWrit1Ht15Q9+T+lyo
B7gjP8IXPucH5gfmB+YH5gfmB+YH7rnsPYe65+72nNGeq9hz5HpuVs8J6rko
PQeiuffN+W6ucXNcm1vZnL7mkjWHqbkzzdlorkD7qNs32j659gW1D6J1361z
bV1f65hat9F96u7LdR+i665dZ+q8uvOIvjf1OVEvOt66/RtnF8b1+fBfjvE8
//v2z/k5/zy+auzv6T/X6+h1+7nTn+5Dz51dGP95jFd+3tH39Of6eb+/3+Pn
/e/9/IrvPb/11/H5s4uMt/t8Rr+/P9fPe/39nl5/P7/ie89Ptj588+wi4+0+
n9Hv78/1815/v6fX38+v+N7zWzq+dHaR8Xafz+j39+f6ea+/39Pr7+dXfO/5
rf8cvHJ2kfF2n8/o9/fn+nmvv9/T6+/nV3zv8d/HV1e9zv/H230+o9/fn+vn
vf5+T6+/n1/xvee/Pv3n9b9nFxlv9/mMfn9/rp/3+vs9vf5+fsX3nv8P8XDS
gA==
              "], {{{
                 EdgeForm[], 
                 GrayLevel[0.8], 
                 GraphicsGroupBox[{
                   PolygonBox[CompressedData["
1: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
Wec5z3MT34G5zXze/wEDu4k2
                    "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["

1:eJy1vX18zvX7/z9XWUwtTaTlIqNhNAyjxWhYLC0tlkajkauQy6XFYpiMFt7M
RUy5GC0Nw9RitDRCwzAzzMwuz/P1mkiL4Xv2Po/j8HPo8anfH+/zn/ttj9v2
cp6v19PzfD6P53E8jqbDJwwYUdXBwcGtloNDNRufujGw3i83zO5Mh/++yrtP
a5i/ptN1U8j6p6vKzve5ZgpZd5pv7r1smELWtzp+1zanzBSy3nvZi0t/KzKF
rAevnf/IkXxTyHrVijYd0s+bQtbjYsNHZ58whaw/cn7RTc8fTSHrfoN8d3+S
aApZD9nZPtFzgSlk3eJ2wuHgCFPI+q2g2RNCDptC1pmu3p1Sf11pClkPnb72
9y5RplB+/5Lr690XmULWvW9cn75guSlkPeHPoZs3rjGFrKddXzgzbZ0pZD3r
hbcG+sSbQtadLw7b6rnWFLLuVt4yx8v2vpmsF1Tf8+vvn5lC1qOHHXDw/MQU
sl45c4Zxa4oplPFSL2LsvbGmkPXqm9+/kvq2KZT7UG/8Fy49TaE8n+eHx33t
agpZ93xhZrvRhYaQ9agqvd9vv9wQyvt8e3PQbVdDyHqmR/DuJ0dZhaz7BrYf
vyrOImQ9r8OZgXOeNYTxCUf6mrXzhfKcxjU6Ve3ZE0LWE3299x1YahHqcRW+
6Py+0essQtZTtrTf9fmfFqGMt3E9lx8+YhWynn0svrDsHUPIesziN7LeOGgI
Wa+4e/jw09VNIeshT/Ze9FQ7U8h67Mx3+rUJNIWsp/rFzv0zzBSyHhcZ+Owj
H5hC1oN2hY+4/qEpRPPS8qPvloywzUdM1nuennfLwzSFrEe2eLbRGIspZL3W
oinrLMWmkPUpP7XOGVtgCllPaBwzZvpFU8i635ae2W+dMYWsb9tyaselI6aQ
9eQb8yoL95pC1kfNmfLiStv/Yybrwx1qlPxnmimU63Tofa/Xq6aQ9aQ+lX1j
00yhHlcpWZ+0eMo27zFZP1o+90r8BFPIeoB77UeO254Hk/Wo6IY1B9jmNSbr
zkGnhzVZaArl+h9fnTNisSlk/caCw2kxtp+ZrHsP/+lygu3vmawXz3n0cIe5
plDGs1+DoEW298eU++ReO6D+e6aQdf/r3wzrPMgUyv1b+XPEtr6mkHWXVxyO
/+xlClkPjCl0D69rClnPc667wzXPEMp9iIzM7Gibj5isL2tWt+mM5w2hvM+n
Z76yaaZVKOO6/fCWkdEWIesNaljWjTpQJlzyy/oGj+41hA+Oh/uvtI63N+0L
N7t3a9h7Xotdl4V6/CQ6jLs2bItFyHr01pa3TlW1COX9tHpu5nUnq1Def9NH
h147bxXKfXOpnb80zBCy7jvj+JH0fYaQdUt7s1/CbUMo47D1p92DmptC1tNj
/Cta9jCFrMef6zhh0+umkPWE615dLg0xhazreQytl9C8lPb7hBVxtvmIKe9v
5sY+75aYQtYvtnKtGXTVFLI+ZUnUD/XyTKHcry2XtrqdM4Ws93+/vPTrX00h
60FfNZjd86ApZP3unfINI7eZQtan/XGz31LbuoAp99Fr8IDR75hC1ifl7vFd
3tYUsj5xZWJso12mUI+3gjZ+Axbb1hNM1rNmPfvFowNNIeupo4prRA0zhawf
7frc/qnvm0LWI97+OKPWVFPIeuwTWV3G2v4/MFn3a7pvci3bz0zWPRN8s69N
NoUyPl1u+X1gW/cwWQ+Nruc0K8QUsl75QaBx288Usp5Uu+sQ8wVTyHrimveW
tWtkClkfVdLtVh0HU8h6SrMbN6qdMISsu8edrDpwoSFk3ce6/rHNzQyhfC6f
I93fnmcVyvtc3WJaD9s6iSnPpYpxJGdUmZD16Oyn5o9/2XKfh3ZOz/jgovDB
8XD/1fZQh3TXQEv32KarG3/uawj1+PF2yx08261MKPd/kd/+6Q4Wofzd+PpD
/mxovU/Snfp2GTvgglXIenL8Afd9IYZQ/t0lNbcu3m4IWXfe3HlkYakhlOe4
+Znljk+YQhlvCQffrepuClm/sXrn0CpdTCHraB7T6zG0j0PrJTQvbXXdGbvW
Nh8xWR9freqkbNt8xGR94DeGU2KOKWR9U8OlT3x80hSyHvDJwMT+P5tC1s/U
Kk+cvMcUsu5WJeOsaVs/MVnPeT0xdchHppD1iKnHwpxt+wwm63VXPtFnfE1T
yPqOl0teOrnRFOrx5rrx9OeNbPsZJuuj6nzokdXRFLLu4Xbv3g+2f5fJeppn
17nBtvU0k3WXuy+lHgo2hfLcnKscdbPNI0y5/vSFIWWDTSHr4XEVA+u+aQpZ
j/E765z4iilkPfNxD4eGnUwh69WHTJ44q74pZD3jpy7HbtwyhKzHDZz87fDL
hlDeT1pF6fndhpD1o20qnp05xRCy7jNj1+81njCErK95b8PL92ZYhazHd9tW
55MVFiHrSd3X15kQUiZk3f/nLy/vqywV7vPrWzw8p0T44HO//wr79ODrDZyM
7knBg6d9/EaWUI+T7CO53ZsvswpZb+D+RVenU6VC1kPHH5x6oIpFKOPqeku3
4y5WoVxnd42xJ45Zhaynf7Mi9mAfQ8j6hkHbS55caQhZz/3qZGXacUPIevDt
3SERpiFk3Td57kdLbf9fmKyjeQytx2JoP8lE8SW0j0PrJTQv3doSd9T9vCmU
z9834fwvp0wh64HZwTE1bPs6JuvTfOb23ZhqClmPajX45Y1bTCHrxsGyD0cv
MoWsV26ftGCEbf3CZN3beVCX1q6mkPVxr3yVGpZlCGUcn633VnKsKdTj0Dkk
aEHgi6aQ9Yy2z53e6WQKWa8+/W5Jk2dMobzfrWc8NrQyhaxXDHTddLODKWTd
y3P1xoadTSHrWXNWpc637a+YrKfUTQx6ysMUynUGbzv7ke0+MFlfY5nxhW9V
U8h6uN+RVe+dM4SsR1YsqJ1k+55msj4qf8o7d23rISbrESMGDezS3xCynvfC
zzs+sVqFrGda/Z8/OdgqZL3Yt76l5ccWoejpYXXm+pUJ5Xl1n3p25YJSYVSv
Rm12nrAK+feanH/3+7DvjwtFv1A2PtFxj1Due3jd6Q5D8oV6nLh2+sD5+VYW
ody3+jN63dxSKmQ9fl/K+OjSMiHrvo7HZ3T4wyJkPTaxe6e0r61CeV7PeNy9
9pwhlM+x8If1eRMNIesu5XEFqfGGkHX/vPK73/xoCFlH8xhaj6F9pY6Pobg3
ii+hfRxaL6F5qXDm4Mcu2+YjJuuhddctrrHfFLKe47/PLd22r2PKcxr6Uc31
K0wh6w1Lqn3ayrZPYrI+PvN4897dTaGMq9H3EuvZ1rlM1hcX7z/jFmsI5fdH
OrcfO8kU6nGYOMV1bZcnTaGMt9vv7Aw+awhZHzdkbmbHIkPIupfl19yLFYaQ
9YR3a6TXqWYKWXd0C3798xqmkPVi56pLTtr2V0wZbyemxnxwwxDK+JyX9N6S
i4aQ9fLAoremfGcIWc/+xqnl67MNIet+M5+a+/YrhlD+3TvHWvVyNoSs+7j+
8urSnVYh65YR6U2zmlqFrKfUWDl8m59FKM/hYM1nX3Equ0/Sm0zOcurqVSqc
eaXX9I22fTCTfy9t34jE4YXnhPL5xz3+ZvyHvwrlvles71Hr3Akh6wHfF4TE
H78q1OPEZ9sus83MMqGMr7caf/31uFIh6+5tF7ZbtKNMyHpcN59pw/ZZhKxX
NG1WOmuSVSjXP5ea8WmRVSjj88WXpm55wRDKeLs3rdOBdw2hjBMwj6H1GNpX
oviYjvOj8zgU90bxJbSPQ+slNC/NcFqcPyTJFLJe1Ty97cU1ppD1mLf6Lfpk
lilkvfTKyHYrgkyhjO8xCTmdbPM6k/Wc853W3dloCFn3uzPhx9/bGULW0xND
Ey1+plCPw9S7T9adlmcIWa/ecXlFmW3eY8p9Whv81KH1hpD14j6fnty7yxCy
fsPn1z2fpxlCeV/B5yenHDCErB8NKLszbq8hZD1vT+/VJZsMIeuVF0qHjZxv
CGX89A1u8nSQIZT3//LPk/2qG0LW/ZccfP6bb61CGUcnZr81Z6BVyHp4N5+v
9h+yCFl37Vr+4YDCMiHrU9pPaF6cUCqU69fz2fL04RIh60E7270187gpTHn2
z8U96l8U8u+VNx8Z0czzjJD13G0L27mMOCOU5/7Z6G3j3j57n/x55uX/Vv+5
IqEeJ+5f+65Y4lAmlHEXMKjt5kdKhazH7n7ynR2vlwllnNzMufz0cIuQdcsn
69b71bcKWY8LPv39gvlWIeuZPdqu33PWKmQdzWNoPYb2lSg+huL8+rwS5Qmg
8zgU90bxJbSPQ+slNC8NvLz0ZPJsU8j60cReX3kMNYXyPBb2/yPseVMo4+fw
gPeuZRpC1h0XJng37G0IWY9a8nZA2larkPWer35Wf2mlIdTjcFzvOi1m275v
mKynTDoW8WZ7Q8i6k+OhwSd7GkLWK9cu+OJqsCFkfeIM3/2Ztu85przfwOtH
uw43hKwnffz+6XtvGELWA29vu7W2syGUcWgpu77f0RDKdfL6V3j9YBWyHray
/ton+1iF8nymFa0dmW4Ryudd07xuvpdFyPqokv7hFtv/Qybrqcag7UdrlwpZ
zzvhMtqpXYmQ9eg9M92PzDGFgct7LUmbe1HIv+d/a0rjtz2zhawXRz/hv71e
jlDGT5d9W+71PSeU+3X4etMDEdlC1mvVKvliZ/ci4UPjJOar3K6zS4Ws564f
2uLoeyVC1pc5DO5be2+pkHX3wf33dcosE7KedbDbquQ5FqGM95TRjuOrWYWs
o3kMrcfQvhLFx5Iovp+k4vy5dE6Zq84rdd4Fyl9CeQLoPA7FvVF8Ce3j0HoJ
zUv5kbW9+rY1haxX1Nju/VyhIWTdzWtvw6mTDaG8z/b9Q35LsQrlOpOfdVp4
0SJkPXVV6tzrkYZQj0O3LZFtlwwwhKwHrD3mNm+7Vci698XIF2vvswplfLo+
Us3jtFXIutNneSU7LlqFrGcELw79wfa9yGR93CuztgbstwpZb9JwQMzMJVYh
6/4eTo079rUKWa+clrz1jTMWoXyuxf3e+LCxRcj6muGPdw17tUzIenD9kiO9
wkqFrDdoNPj3xU+XCFmP+/pEfLPgYiHrXl0XLhy80hQ2KBm7/MTJ80J5H918
k3wSzwhZj/c9/eKZETlC0QcEFLd79byQ9bwZ1mP1tmcL5X2HP7fn22ZnhPL7
rU5YnwgsFOpxEhe6/qXs30qEcn9mNcvwDS8WyvPamZYw2bZeZLLu+eG94vpX
SoWsV29e/7vGyWVC1tE8htZjaF+J4mMuFN93UXF+dF4ZQfkWESrvQuePobxK
lL+E8gTQeRyKe6P4EtrHofUSmpdcPNc0bzrHELLu+uqWTZ0LrELWC3ZNj330
gkXI+o25vv2Kl5UJWe+6dn39jiutQj0Os5eG9Jh/zypkvXKw++Jvq1qFMt7K
B69YU8UqZN198961jZ6yCuV9zZwRtrWhVci6x/O/rG/4qFXIetqfBVGf2eZb
JutrLtWrM+M/FqE8/w86tNjU1CKU53Drx22tR5UJWS+/k5nXxLdUyLq3W63H
5hQVC2Ucnh+2o8rKIqH8fvqQbla3ImF2k9zWcbZ1OZN/z7fb/pgaPU8LWY//
+E7gsKknhPL5l/dr32fYWSHrkRaP3x3cc4Ssh1926Xbb55xQ7u+efofeWZ8l
ZD3p690dHBJ/FbI+c3Dy9Sq/XxHqcRJ+bMK+3EElQtYT494L21K7SMh62JbV
UfVeLhbK5+iR/+2Gz0qErHvR/OWl5jG0HkP7ShQf86H4vo+K86PzSpR34UJ5
Yy4qfyyZ8l+ZKN8b5VWi/CWUJ4DO41DcG8WX0D4OrZfQvFS9Vs1pZ25ZhKwv
DurTbfn7ZULWbzba1DQ8sETI+rZN3oejt5UJ9Tj0+zLtSEfb9weT9ezDhVWn
PG8Rsr7sz9WPtLtTJmQ9+kzl9wOrWYTyuQe2izv9Z5mQdc+hk1o9dqpMyHrq
24WvGPPLhHK/Bzzbbl+dMiHrsce6Vz7/WqmQ9ZCdXTcMa1QiZD23x+ao8Z2L
hKwHNAyc6+57VSifd9zqlmUfXhVe7BzZ42vbuo/Jv+fbo9rE1tPShKzn1R6W
80PR90LWJxa1MX7zyxTKfek/65vFb54Wsp4W77Sr0v+MUO57591pXww5JZTf
z5m0/ejdn4Xy3AeHxC5d+fV9kp7Uee3oAZYLQj1OnG+13n+1rFjIenn/Bif6
nCkQyt/VubvwySaF90n6KJq/Rql5DK3H4mg/Gaf2lSg+huL8a+icco06rwyh
fIsQlXcRQnljISp/DOXBRlAePxPVoaB8b5RXifKXUJ4AOo9DcW8YXwL7OLRe
QvPSxTfbPvHcpWKhjLdrq47VLS4Qsr78WYftu68XCvU4LIh7tOG0SkPIeuL5
zw/7ri4Tsn40b03qBaNUKNcZFfPH7X2lQnm+h8LbjP+sVMh64FO1zyZ1LxWy
bnlhUrN5+0uErFcsv3uiXWWxkHWPLw667zpdJJTxNqbL5PDHCoWsV6ZGZR2d
fUXI+kQj7KNp964ILdHZX4x5vFj44H27/8qMHjPl1wslD+kbZrVu3uxH233b
6uvxzNSv75Pvy7DCPj2fyRCy7rs5+9YvS44LWR916YvQuTOOCuX3V49ze6fe
ASF6n3dXzfhylpzj33+9sqn6i+UutvVOw7bNP2iZJnzwOn/lvVydeKW4RCjP
/eXymsV784XyvGj+qlDzWBKtw5LUegztK/MoLpan4mMozo/OKyMo3yJC5V24
Ut6Yq8of86H8Vx+VB5tOefzMSKpHilR1Sag+bjfVn+xWdSgo3xvlVaL8JZQn
gM7jUNz7FsWVbqn40m+0f/tN7ePQegnNS9FvLB5yus45Ietror6bkVs3S8h6
eJ8urokjS4R6fLoPvfRSorMpZD3jJ3NU3d0WIesxzruSWxwuE7Ke9vKe4BUv
lQnluQfvG1lxsFTIuv+lkR/85lMqZN3JOD7Ic2OJkPXqCadv7nqyRCjjPOKR
jr2cSoSsBxdUddydbxF6fvTaguvTDwsfvA/3X1k+66dNbJz1kN5q3fM+d47n
P6SPtA7Y/Z9XbfvaG8tHDZyVKOTrJ7zfOXxuyo9C1jNXr3NKq3pIyHrktEfq
LD7zgxC9z093D7k8RPLZ7r8mnTQynu9a/JCetsOz7qL55x7So6NSihxm53dv
mOm8+livUuGD/67tedH85a/mMS9ah3mp9Vgs7Sdj1b4yieJiSSo+Fknx/UgV
5/ehc0ofdV4ZSPkWgSrvwovyxrxU/lgF5b8ye1Mef2+Vz5/wtL0eiSnvj+oq
I1V9JarbRfVxqA4F5XujvEqUv4TyBNB53HcU7/5Oxb1RfAnt49B6KY7mozg1
L+lxaCSN/Czn1dLunqMDDrh/uEfIvx88Mmn6lJcvClnvFFbjyx+mFAhl/N0b
tP3dzYVC1i+uce32++tFQtZP3v3Ft7qlUMj6uJWtbvYOuSpk3XlVw62dLZeF
rOc9fnzuoTanhejzHkr7KKnH3bKH9A7/fZ16SH80MOaZ+ZvOPnzffvrgWEa0
2T3wrXvdPNafF/K/m5XxSqaDU4GQ9ZD6CQ63DxYKWQ/6/Mt7IbuKhKxX7r39
7eH3ioSsZwweuX/Q9qtC1psUjGq3L/aykPXqL9QuC/PIFKL7E5b/3erWqwr/
9f0JpXks7mn7OozJ1/em/aS32lf2pbhYXxUfS6T4fqKK82c9aj+nZLLuS/kW
virvwpnyxpxV/thsyn+drfJgUwbZ8/iZ6P7k/mSvS9K6ayd7feVFqg+/qOrE
mchPANXtovo4VIeC8r1RXiXKX0J5Aug8DsW9UXwpj/ZvTLRe8qX5yFfNS/r+
dx2x8VB4D7N72ravTw+YdVjIv3/0uzefCfc7LWS9Qasdg6+FZgvleWSbbzy3
/6yQ9RCvrCbtPj8lZL14YvUJeb4/CdH7zGw2cN6Rg9aH9F7XXltUr86Vh/ST
X5xO6hdxprtPvx0fz515Qfjg9cu7L4t9YWBul6tC1ice2n5s8Mv5QtaT2/Qr
Ko7PF7Ief9551gCvK0IZD2k9O97+/IpQ7tNbJ9v33nhFyHpUrRWf54+9ImQ9
3KfHx8OMfCHrrlU2P/7G2/lC1p2/ebLer+n5QtYrmv248dAEq1Dft1ZgHnPd
+ffrsbG0r3R4m+Jibz8YH8uk+H6mivOj80oXyrdwUXkXxYvteWNM1vP+sOe/
MuXz59rz+JkPPvf7r3lUl1Txs72uksm/f5zqw4//bZ24bX4lnwsm68jnBPkJ
oLpdVB+H6lBQvjfKq0T5SyhPAJ3Hobg3ii/pfRxaL6F5ybHfn33mTzklZL38
8cd9N76eLWQ9bnO9/ePfOydkveDne+eym54Vyv1976nZr1c9IWTd1/FO97G3
k4VoXIXOf3nzKLeH10sJTSMz2tQv7R616+LE7d8aQj2uGjzWdujZnHNC1mN7
t5nz2sJzQtYTBsfd6dfzkpD1KT2W7W/20WWhjKv1QSPHz8gXsp53M/3T9Rfz
haxntv2p95Ef8oWsB194eZvhnC+U97+qdtKcb/OEcv1TuWPOLc4Vsh6+yevH
V1afFbIeSPMX07etfR3GRPc/GuwrXVfb42PO5+3xfSZfx5/OKf3VeWU55VuU
q7wLlD+WQfmvGSoPNo3y+NNUPn+DXHs9EpN17172ukqmHifhVB/OlOspvwvW
kW8P8l9CPifITwDV7aL6OFSHgvK9UV4lyl9CeQLoPA7FvXV8yYv2b15qH5dB
66QMtV5C81L0Hw5J1xucF8pzPZu+Ycb2HKF8/p3z5i/KPiOUzzkmdOWqF48J
Zby9Zgm+XPMLoYyDx7903fHYHqEeVxv8Zk84sMEiZD241ok7UWsvCEUfctb5
88QLQnm/85/eXNLispB1R9dFT10JviKU67xRZVCvlQVC1nN37PCP97wqZD1s
/bshfwRcFbLu1ug1h/o3C4SsVxTcHtTwyQIh6ym1ZuXuH5ovlHFoTWu8ef8l
odynLJq/sh6cx/xpHcZMv2LfTzIfvM/3X0soPpZE8f0kFeffQOeUG9R5ZTTl
W0SrvAuUP5ZN+a/ZKg82j/L481Q+v/d+ez0Sk/V8qqvMV/WVMr6oPpzJejr5
XKQrv4so8uuJUr49yH8M+cIh/yXkc4L8BFDdLqqPQ3UoKN8b5VWi/CWUJ4DO
43TcezHFlRar+BLax6H1EpqXfPZ5zH1xT7aQdf+OM26/duikUMbn8Bb7R+ce
FLIeZDxz8u6kTKEeV8X9+g5sWL9MyHrqhDszPl6RJ5TnXtdxcXrEZaGM93OZ
E7574YpQnlfdOWeNnAKhfO4rQatr9ygUyv1Pco4YXrVIyPo4i2fCi/2KhKxP
8QlqHNuhSCjjKrvZ5h07C4Wsp2Sty2z+1VWhPLe3e7gPcygQynim+StNzWNN
aB3WRK3H4mk/yRxDcbExKj7mS/F9XxXnj6dzynh1XplB+RYZKu8C5Y/FUP5r
jMqD9aQ8fk+Vz+/RyF6PxGQ9k+oqM1V9JVPXict9Jp+LFOV3kUJ+PSnKtyeA
fMcClP8Y8lFEfpXIFw75LyGfE+QngOp2UX0cqkNB+d4orxLlL6E8AX0el0vx
7lwV90bxJbSPQ+slNC9FW5cndBr6s1DGbZ32XWplZAn1uBoVNbljlu3zMFnP
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
eyMfXeRXiXzhkP8Sio+hOD86r0S+xKgOBeV767zKTMpbyvyH/KXBIE+Az+NQ
3Luc4krlKr6E9nFovYTmJUtfu581U+4j+V+PUj7Y8eSXHa98s5ku5K/tovol
IV9u5OPt8Db5fb/9oO838glHvuLIhxz5liOfc+SLjnzUke868mnPIz935hLy
f1+ifOCjD9n94plovIWRz7zzBfKlv/CgL71jhd2/ninX+Yz87j970Pe+Cfnj
N1E++chXP4X891OUDz/qa6nfvz/7/KsX6tMU+kAfAdR3wDZ+aP4KUPOY9tFl
XftVsq594WQ8KP8leW7K54R17SfA+kN1u6T/fX2cbX6m+hNmIuV5J/5DvjfK
q5wP6sQ5TyCazuGi1XlcFMW7o1TcO5PiSpkqvuRO+zd3tY9D6yU0L+n32Yj6
jERSP5JI1ZckivqXRIG+b8XU76RY9a8MoP4oAbpPCvVTyVN9Vdyp/4q76sOC
+rakUX+XNNXnBfWFcaH+MS6qjwzqO4P61KC+NroPzlrql7P2b/vm3H+ldbT3
2dF620P2vjxJwfb+PUy+Thb1+8lSfX8CqD9QgOoTFE79hMJVX6Fatez9h5jy
nKhfUZ7qW4T6gKN+u/93X8v7r0+p75LWUZ8m7oeC+g4cIl/vQ8rfG/nobqD4
/gYV579JfnA3lS8c8l+CPif/0k+gE6jbjen/93270P3hfG+UV4nyl1CeADqP
Q3FvFF9C+zi0XkLzkv68Dtvtfd8yqT9cpuoTF0f95OJUX7kN1H9ug+pD50n9
6jxV37rd1N9ut+pz50P98HxUX7w06p+XpvronaR+eydV373e1J+vt+rTh/r6
jaf+f+NVH0DUN7CC+gtWqD6DadSPME31JezW0N6/kMl6DPU7jFF9D5lZ1B+R
ybor9VN0VX0Vfaj/oo/qw+hO/RrdVd/GcdTfcZzq8xhH/SDjVF/IcOofGa76
SLpQv0kX1XdS99v9v/ta3n+FgnnsKdCnCfVDWUbxMeTvjXx0gynfIljlXYSS
H1yo9oVTL+S/VA58TthPwJ3qdd1B3W4e1cXlqfo4VIeC8r1RXiXKX0J5Aug8
DsW9UXxJ7+Nm0zpptlovoXmpgPrvFqg+vOnUrzdd9e11aEz9fRs/2Oe3gvoB
V6i+wJXUP7hS9RFGfYd7U3/i3qpPcSz1M45VfY1RH2QX6pfsovomT6H+ylNU
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
r++4fk+jItvfM5GOrvO/vv7/A8j1pEI=
               "]], {}}, {
            DisplayFunction -> Identity, DisplayFunction -> Identity, 
             Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, AxesLabel -> {None, None}, 
             FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> 
             Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
             DisplayFunction :> Identity, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "GridLinesInFront" -> True}, 
             PlotLabel -> FormBox["\"Real Part of S3\"", TraditionalForm], 
             PlotRange -> {All, All}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
           FormBox[
            FormBox[
             TemplateBox[{
               FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   GraphicsBox[{
                    RasterBox[CompressedData["
1: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
Z5R47E6SYP8NLglz4g==
                    "], {{
                    Rational[-15, 2], -180}, {
                    Rational[15, 2], 180}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], -180}, {
                    Rational[-15, 2], -180}, {
                    Rational[-15, 2], 180}, {
                    Rational[15, 2], 180}, {
                    Rational[15, 2], -180}}, {{
                    7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                    7.5, -180}}]]}, {
                    CapForm[None], {}}, 
                    StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -140.5874499332443}, 
                    Offset[{4., 0}, {7.5, -140.5874499332443}]}, {{
                    7.5, -92.52336448598128}, 
                    Offset[{4., 0}, {7.5, -92.52336448598128}]}, {{
                    7.5, -44.45927903871826}, 
                    Offset[{4., 0}, {7.5, -44.45927903871826}]}, {{7.5, 
                    3.6048064085447447`}, 
                    Offset[{4., 0}, {7.5, 3.6048064085447447`}]}, {{7.5, 
                    51.66889185580776}, 
                    Offset[{4., 0}, {7.5, 51.66889185580776}]}, {{7.5, 
                    99.73297730307077}, 
                    Offset[{4., 0}, {7.5, 99.73297730307077}]}, {{7.5, 
                    147.7970627503338}, 
                    Offset[{4., 0}, {7.5, 147.7970627503338}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -179.0387182910547}, 
                    Offset[{2.5, 0.}, {7.5, -179.0387182910547}]}, {{
                    7.5, -169.42590120160213`}, 
                    Offset[{2.5, 0.}, {7.5, -169.42590120160213`}]}, {{
                    7.5, -159.8130841121495}, 
                    Offset[{2.5, 0.}, {7.5, -159.8130841121495}]}, {{
                    7.5, -150.20026702269692`}, 
                    Offset[{2.5, 0.}, {7.5, -150.20026702269692`}]}, {{
                    7.5, -130.97463284379168`}, 
                    Offset[{2.5, 0.}, {7.5, -130.97463284379168`}]}, {{
                    7.5, -121.36181575433906`}, 
                    Offset[{2.5, 0.}, {7.5, -121.36181575433906`}]}, {{
                    7.5, -111.74899866488649`}, 
                    Offset[{2.5, 0.}, {7.5, -111.74899866488649`}]}, {{
                    7.5, -102.13618157543387`}, 
                    Offset[{2.5, 0.}, {7.5, -102.13618157543387`}]}, {{
                    7.5, -82.9105473965287}, 
                    Offset[{2.5, 0.}, {7.5, -82.9105473965287}]}, {{
                    7.5, -73.29773030707608}, 
                    Offset[{2.5, 0.}, {7.5, -73.29773030707608}]}, {{
                    7.5, -63.684913217623496`}, 
                    Offset[{2.5, 0.}, {7.5, -63.684913217623496`}]}, {{
                    7.5, -54.07209612817088}, 
                    Offset[{2.5, 0.}, {7.5, -54.07209612817088}]}, {{
                    7.5, -34.846461949265674`}, 
                    Offset[{2.5, 0.}, {7.5, -34.846461949265674`}]}, {{
                    7.5, -25.233644859813076`}, 
                    Offset[{2.5, 0.}, {7.5, -25.233644859813076`}]}, {{
                    7.5, -15.620827770360457`}, 
                    Offset[{2.5, 0.}, {7.5, -15.620827770360457`}]}, {{
                    7.5, -6.008010680907856}, 
                    Offset[{2.5, 0.}, {7.5, -6.008010680907856}]}, {{7.5, 
                    13.217623497997344`}, 
                    Offset[{2.5, 0.}, {7.5, 13.217623497997344`}]}, {{7.5, 
                    22.830440587449946`}, 
                    Offset[{2.5, 0.}, {7.5, 22.830440587449946`}]}, {{7.5, 
                    32.44325767690255}, 
                    Offset[{2.5, 0.}, {7.5, 32.44325767690255}]}, {{7.5, 
                    42.05607476635515}, 
                    Offset[{2.5, 0.}, {7.5, 42.05607476635515}]}, {{7.5, 
                    61.281708945260355`}, 
                    Offset[{2.5, 0.}, {7.5, 61.281708945260355`}]}, {{7.5, 
                    70.89452603471297}, 
                    Offset[{2.5, 0.}, {7.5, 70.89452603471297}]}, {{7.5, 
                    80.50734312416557}, 
                    Offset[{2.5, 0.}, {7.5, 80.50734312416557}]}, {{7.5, 
                    90.12016021361816}, 
                    Offset[{2.5, 0.}, {7.5, 90.12016021361816}]}, {{7.5, 
                    109.34579439252337`}, 
                    Offset[{2.5, 0.}, {7.5, 109.34579439252337`}]}, {{7.5, 
                    118.95861148197596`}, 
                    Offset[{2.5, 0.}, {7.5, 118.95861148197596`}]}, {{7.5, 
                    128.57142857142858`}, 
                    Offset[{2.5, 0.}, {7.5, 128.57142857142858`}]}, {{7.5, 
                    138.18424566088117`}, 
                    Offset[{2.5, 0.}, {7.5, 138.18424566088117`}]}, {{7.5, 
                    157.40987983978638`}, 
                    Offset[{2.5, 0.}, {7.5, 157.40987983978638`}]}, {{7.5, 
                    167.02269692923898`}, 
                    Offset[{2.5, 0.}, {7.5, 167.02269692923898`}]}, {{7.5, 
                    176.63551401869157`}, 
                    Offset[{2.5, 0.}, {7.5, 176.63551401869157`}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "5.`"}], 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -140.5874499332443}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "4.`"}], 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -92.52336448598128}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "3.`"}], 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -44.45927903871826}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "2.`"}], 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, 3.6048064085447447`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "1.`"}], 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, 51.66889185580776}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0.`", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 99.73297730307077}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, 147.7970627503338}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
                    
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                    False], {{
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
                    "GraphicsAxes"}, StripOnInput -> False]}, 
                    PlotRangePadding -> Scaled[0.02], PlotRange -> All, Frame -> 
                    True, FrameTicks -> {{False, False}, {True, False}}, 
                    FrameStyle -> Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 360}, BaseStyle -> {}], 
                   Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]}, "BarLegend", 
              DisplayFunction -> (#& ), 
              InterpretationFunction :> (RowBox[{"BarLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"z$", ",", 
                    RowBox[{"seismicColors", "[", 
                    RowBox[{"Rescale", "[", 
                    RowBox[{"z$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "maxAbs3$14517"}], ",", "maxAbs3$14517"}], 
                    "}"}]}], "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.824253167690916`*^-13"}], ",", 
                    "1.665345646303348`*^-13"}], "}"}]}], "}"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                   RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
                   RowBox[{"ScalingFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                   RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
                 "]"}]& )], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(FormBox[
            GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"], 
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, BaselinePosition -> {1, 1}],
             TraditionalForm]& ),
          Editable->True,
          InterpretationFunction->(FormBox[
            RowBox[{"Legended", "(", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
            TraditionalForm]& )],
         StripOnInput->False,
         ImageSizeMultipliers->{1, 1}], {159.4666666666667, -195.825}, {
        Center, Center}, {299., 373.},
        BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
       InsetBox[
        StyleBox[
         TemplateBox[{
           GraphicsBox[{
             GraphicsComplexBox[CompressedData["
1:eJyF3T+oZlfZhvExJp4QCxuxiEKIDKiFpLGx0QOCEosUBkEsEtAIWqhglcZm
QBMLm6SIgiiCEhBBbKwET8B/oIIo2GgRhQgiwihRQgjR885ev0dyLQ7z8cHi
ej05796TubL3Wut57nX/Jz7/kU/dce3atev3XLt2Go//u/vC+Nyv3vX4e+86
G77xzMM3v3DPG4Y/8Mkvfvr7b7pr+M4Hnn3+hTffOfyzl3/7sfvuff3wl39+
+uCO4Q89df3Bp66/bvjuRx66/Mprw0+fvu6RV3+C3/L30ze+Mvz1Wxf08vDb
7j39wEvD3/rh+97zhyf+M/z2B09f+OLwdy+v9sff+NfwOy/v9oFnbw5/9L7T
L/zH8MdPl/f434YfPd3+V18YfuyS/v3tPw//7kef/ePl/w//6fLbbjzz++Hf
nL7+xi+Gn3zi9Af0g+HrT97i9+MXj58fvnn8vuG/Ht83/LnjeoY/c1zv8GPH
/Qw/etzv8LuPP4/h7x1/XsPvOP48h79z/HkP33/8+xj+5vHva/itx7/P4a8d
/76H33j8fTjHHz7+vgx/5fj7NPzL4+/b8Nnx93H4g8ff1+EvHX+fh396/H0f
XmN5vOjID8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/MD8wPzA/MD8yPud7lx9zP8gPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzI8+F8uYB7sgPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8yPud7lx9zP8gPzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI+9J5e25UA9wR35gfmB+YH5gfmB+
YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+zPUu
P+Z+lh+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5k3lLf3pD4X
6gHuyA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/Mj7ne5cfcz/ID8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8yPz6PI2b+h7Up8L9QB35AfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+YH5gfmB+YH5gfmB+YH5gfmB+YH5sdc7/Jj7mf5gfmB+YH5gfmB+YH5gfmB
+YH5gfmB+YH5gfmB+YH5gfmRdaXyNo/uvKHvSX0u1APckR+YH5gfmB+YH5gf
mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfc73Lj7mf5Qfm
B+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmR9ZZy9u6UufRnTf0PanP
hXqAO/ID8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD82Oud/kx97P8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI
vkN5W2ftulLn0Z039D2pz4V6gDvyA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzA/MD8wPzY653+TH3s/zA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzA/Mg+XHnbd+g6a9eVOo/uvKHvSX0u1APckR+YH5gfmB+Y
H5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfc73Lj7mf5QfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmR/aly9s+XPcdus7adaXOoztv
6HtSnwv1AHfkB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfm
B+bHXO/yY+5n+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5kTqN
8rYv3X247jt0nbXrSp1Hd97Q96Q+F+oB7sgPzA/MD8wPzA/MD8wPzA/MD8wP
zA/MD8wPzA/MD8wPzA/MD8yPud7lx9zP8gPzA/MD8wPzA/MD8wPzA/MD8wPz
A/MD8wPzA/MD8wPzI3VL5a1Oo/vS3YfrvkPXWbuu1Hl05w19T+pzoR7gjvzA
/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8mOtdfsz9LD8wPzA/
MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP1LHV97qllqn0X3p7sN136Hr
rF1X6jy684a+J/W5UA9wR35gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+
YH5gfsz1Lj/mfpYfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+p
ay1vdXytW2qdRveluw/XfYeus3ZdqfPozhv6ntTnQj3AHfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmB+YH5gfkx17v8mPtZfmB+YH5gfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+pM67vNW1to6vdUut0+i+dPfhuu/QddauK3Ue3XlD
35P6XKgHuCM/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP+Z6lx9zP8sP
zA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzI/0PZS3Ou/WtbaOr3VL
rdPovnT34brv0HXWrit1Ht15Q9+T+lyoB7gjPzA/MD8wPzA/MD8wPzA/MD8w
PzA/MD8wPzA/5nqXH3M/yw/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wP
zA/Mj/QBlbe+h9Z5t661dXytW2qdRveluw/XfYeus3ZdqfPozhv6ntTnQj3A
HfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfkx17v8mPtZfmB+YH5gfmB+YH5g
fmB+YH5gfmB+YH5gfmB+YH5gfmB+pC+uvPUBte+hdd6ta20dX+uWWqfRfenu
w3XfoeusXVfqPLrzhr4n9blQD3BHfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH7M
9S4/5n6WH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gf6RMtb31x
7QNq30PrvFvX2jq+1i21TqP70t2H675D11m7rtR5dOcNfU/qc6Ee4I78wPzA
/MD8wPzA/MD8wPzA/MD8wPyY611+zH0sPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD8wPzA/MD8wPzA/0jdd3vpE2xfXPqD2PbTOu3WtreNr3VLrNLov3X247jt0
nbXrSp1Hd97Q96Q+F+oB7sgPzA/MD8wPzA/MD8wPzA/MD8yPuc7lx9zP8gPz
A/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzIzkC5a1vun2i7YtrH1D7
Hlrn3brW1vG1bql1Gt2X7j5c9x26ztp1pc6jO2/oe1KfC/UAd+QH5gfmB+YH
5gfmB+YH5gfmx1zv8mPuZ/mB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+ZFcjfKWI9C+6faJti+ufUDte2idd+taW8fXuqXWaXRfuvtw3XfoOmvX
lTqP7ryh70l9LtQD3JEfmB+YH5gfmB+YH5gfmB9zvcuPuZ/lB+YH5gfmB+YH
5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZHcmbKW65GcwTaN90+0fbFtQ+ofQ+t
825da+v4WrfUOo3uS3cfrvsOXWftulLn0Z039D2pz4V6gDvyA/MD8wPzA/MD
8wPzY653+TH3s/zA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Eju
UnnLmWmuRnME2jfdPtH2xbUPqH0PrfNuXWvr+Fq31DqN7kt3H677Dl1n7bpS
59GdN/Q9qc+FeoA78gPzA/MD8wPzA/Njrnf5Mfez/MD8wPzA/MD8wPzA/MD8
wPzA/MD8wPzA/MD8wPzA/MD8SA5Zectdas5MczWaI9C+6faJti+ufUDte2id
d+taW8fXuqXWaXRfuvtw3XfoOmvXlTqP7ryh70l9LtQD3JEfmB+YH5gfmB9z
vcuPuZ/lB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+ZHcvnKWw5Z
c5eaM9NcjeYItG+6faLti2sfUPseWufdutbW8bVuqXUa3ZfuPlz3HbrO2nWl
zqM7b+h7Up8L9QB35AfmB+YH5sdc7/Jj7mf5gfmB+YH5gfmB+YH5gfmB+YH5
gfmB+YH5gfmB+YH5gfmRnMrylsvXHLLmLjVnprkazRFo33T7RNsX1z6g9j20
zrt1ra3ja91S6zS6L919uO47dJ2160qdR3fe0PekPhfqAe7ID8wPzI+53uXH
3M/yA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mjua3lLaeyuXzN
IWvuUnNmmqvRHIH2TbdPtH1x7QNq30PrvFvX2jq+1i21TqP70t2H675D11m7
rtR5dOcNfU/qc6Ee4I78wPyY611+zP0sPzA/MD8wPzA/MD8wPzA/MD8wPzA/
MD8wPzA/MD8wPzA/kmNc3nJbm1PZXL7mkDV3qTkzzdVojkD7ptsn2r649gG1
76F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOGvif1uVAPcEd+zPUuP+Z+
lh+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH8n1Lm85xs1tbU5l
c/maQ9bcpebMNFejOQLtm26faPvi2gfUvofWebeutXV8rVtqnUb3pbsP132H
rrN2Xanz6M4b+p7U50I9wB35Mfez/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA
/MD8wPzA/MD8SM59ecv1bo5xc1ubU9lcvuaQNXepOTPN1WiOQPum2yfavrj2
AbXvoXXerWttHV/rllqn0X3p7sN136HrrF1X6jy684a+J/W5UA/mejNOfcni
qS9ZPPUli6e+ZPHUlyye+pLFU1+yeOpLFk99yeKpL1k89SWLp75k8dSXLJ76
ksVTX7J46ksWT33J4qkveS1vOffN9W6OcXNbm1PZXL7mkDV3qTkzzdVojkD7
ptsn2r649gG176F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOGvif1uVAP
5n4yTn3i4qlPXDz1iYunPnHx1CcunvrExVOfuHjqExdPfeLiqU9cPPWJi6c+
cfHUJy6e+sTFU5+4eOoTF0994mt5O/ehOffN9W6OcXNbm1PZXL7mkDV3qTkz
zdVojkD7ptsn2r649gG176F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOG
vif1uVAPcEd+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfmB+YH5gfuRcoPJ2DkrP
fWjOfXO9m2Pc3NbmVDaXrzlkzV1qzkxzNZoj0L7p9om2L659QO17aJ1361pb
x9e6pdZpdF+6+3Ddd+g6a9eVOo/uvKHvSX0u1APckR+YH5gfmB+YH5gfmB+Y
H5gfmB+YH5gfmB+YHzknq7ydC9RzUHruQ3Pum+vdHOPmtjansrl8zSFr7lJz
Zpqr0RyB9k23T7R9ce0Dat9D67xb19o6vtYttU6j+9Ldh+u+Q9dZu67UeXTn
DX1P6nOhHuCO/MD8wPzA/MD8wPzA/MD8wPzA/MD8wPzA/Mi5ceXtnKyeC9Rz
UHruQ3Pum+vdHOPmtjansrl8zSFr7lJzZpqr0RyB9k23T7R9ce0Dat9D67xb
19o6vtYttU6j+9Ldh+u+Q9dZu67UeXTnDX1P6nOhHuCO/MD8wPzA/MD8wPzA
/MD8wPzA/MD8wPzIOYrl7dy4npPVc4F6DkrPfWjOfXO9m2Pc3NbmVDaXrzlk
zV1qzkxzNZoj0L7p9om2L659QO17aJ1361pbx9e6pdZpdF+6+3Ddd+g6a9eV
Oo/uvKHvSX0u1APckR+YH5gfmB+YH5gfmB+YH5gfmB+YHzlXtLydo9hz43pO
Vs8F6jkoPfehOffN9W6OcXNbm1PZXL7mkDV3qTkzzdVojkD7ptsn2r649gG1
76F13q1rbR1f65Zap9F96e7Ddd+h66xdV+o8uvOGvif1uVAPcEd+YH5gfmB+
YH5gfmB+YH5gfmB+5Jzd8nauaM9R7LlxPSer5wL1HJSe+9Cc++Z6N8e4ua3N
qWwuX3PImrvUnJnmajRHoH3T7RNtX1z7gNr30Drv1rW2jq91S63T6L509+G6
79B11q4rdR7deUPfk/pcqAe4Iz8wPzA/MD8wPzA/MD8wPzA/cu50eTtnt+eK
9hzFnhvXc7J6LlDPQem5D825b653c4yb29qcyubyNYesuUvNmWmuRnME2jfd
PtH2xbUPqH0PrfNuXWvr+Fq31DqN7kt3H677Dl1n7bpS59GdN/Q9qc+FeoA7
8gPzA/MD8wPzA/MD8wPzI+ewl7dzp3vObs8V7TmKPTeu52T1XKCeg9JzH5pz
31zv5hg3t7U5lc3law5Zc5eaM9NcjeYItG+6faLti2sfUPseWufdutbW8bVu
qXUa3ZfuPlz3HbrO2nWlzqM7b+h7Up8L9QB35AfmB+YH5gfmB+YH5gfmR3g7
h73nTvec3Z4r2nMUe25cz8nquUA9B6XnPjTnvrnezTFubmtzKpvL1xyy5i41
Z6a5Gs0RaN90+0TbF9c+oPY9tM67da2t42vdUus0ui/dfbjuO3SdtetKnUd3
3tD3pD4X6gHuyA/MD8wPzA/MD8wPzI/wnFvFj57D3nOne85uzxXtOYo9N67n
ZPVcoJ6D0nMfmnPfXO/mGDe3tTmVzeVrDllzl5oz01yN5gi0b7p9ou2Lax9Q
+x5a59261tbxtW6pdRrdl+4+XPcdus7adaXOoztv6HtSnwv1AHfkB+YH5gfm
B+YH5kd4znHjB+ZHz2HvudM9Z7fnivYcxZ4b13Oyei5Qz0HpuQ/NuW+ud3OM
m9vanMrm8jWHrLlLzZlprkZzBNo33T7R9sW1D6h9D63zbl1r6/hat9Q6je5L
dx+u+w5dZ+26UufRnTf0PanPhXqAO/ID8wPzA/MD8yM85xryA/MD86PnsPfc
6Z6z23NFe45iz43rOVk9F6jnoPTch+bcN9e7OcbNbW1OZXP5mkPW3KXmzDRX
ozkC7Ztun2j74toH1L6H1nm3rrV1fK1bap1G96W7D9d9h66zdl2p8+jOG/qe
1OdCPcAd+YH5gfmB+RGecz75gfmB+YH50XPYe+50z9ntuaI9R7HnxvWcrJ4L
1HNQeu5Dc+6b690c4+a2NqeyuXzNIWvuUnNmmqvRHIH2TbdPtH1x7QNq30Pr
vFvX2jq+1i21TqP70t2H675D11m7rtR5dOcNfU/qc6Ee4I78wPzA/AjPubf8
wPzA/MD8wPzoOew9d7rn7PZc0Z6j2HPjek5WzwXqOSg996E59831bo5xc1ub
U9lcvuaQNXepOTPN1WiOQPum2yfavrj2AbXvoXXerWttHV/rllqn0X3p7sN1
36HrrF1X6jy684a+J/W5UA9wR35gfoTnHGh+YH5gfmB+YH5gfvQc9p473XN2
e65oz1HsuXE9J6vnAvUclJ770Jz75no3x7i5rc2pbC5fc8iau9ScmeZqNEeg
fdPtE21fXPuA2vfQOu/WtbaOr3VLrdPovnT34brv0HXWrit1Ht15Q9+T+lyo
B7gjP8IXPucH5gfmB+YH5gfmB+YH7rnsPYe65+72nNGeq9hz5HpuVs8J6rko
PQeiuffN+W6ucXNcm1vZnL7mkjWHqbkzzdlorkD7qNs32j659gW1D6J1361z
bV1f65hat9F96u7LdR+i665dZ+q8uvOIvjf1OVEvOt66/RtnF8b1+fBfjvE8
//v2z/k5/zy+auzv6T/X6+h1+7nTn+5Dz51dGP95jFd+3tH39Of6eb+/3+Pn
/e/9/IrvPb/11/H5s4uMt/t8Rr+/P9fPe/39nl5/P7/ie89Ptj588+wi4+0+
n9Hv78/1815/v6fX38+v+N7zWzq+dHaR8Xafz+j39+f6ea+/39Pr7+dXfO/5
rf8cvHJ2kfF2n8/o9/fn+nmvv9/T6+/nV3zv8d/HV1e9zv/H230+o9/fn+vn
vf5+T6+/n1/xvee/Pv3n9b9nFxlv9/mMfn9/rp/3+vs9vf5+fsX3nv8P8XDS
gA==
              "], {{{
                 EdgeForm[], 
                 GrayLevel[0.8], 
                 GraphicsGroupBox[{
                   PolygonBox[CompressedData["
1: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
Wec5z3MT34G5zXze/wEDu4k2
                    "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["

1: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
iLpv8H/a7HhZEVEvSXnz+ohxFiI9n0de7P3tHw13CXp+n26+Nw0WIupNvb4q
qwjRiKgHNHmc/r5WI9LnVrl6X5qnIqLuNKTghSg9TiFRn7702IFfFioi6lFv
umxtl6yIqPvZhT/4sf59g2yFeNTK4lJPiFtI1DvD+qszW4edg33kObafREr5
JWkfJ62XpLhk+/rKt0/o8QiJuuvVistj9HiERL1ynUe10ylFpPv/i1C75/T/
F0jUm6+9d3aGHo+QqCeXTtoUq8dtJOpZm2YuCNqniKiXjzKl2urxDqmtbfrm
SOld4uNCXf7e9WGRRkR9+KUlhy5t1Iiot3zy9N/PPa6IqActfb7zjPGKiPqE
q4e6aPr9gqT7bO/OLdtSFBH1a/1H9R6s7xuRqFc9tG3/nM2KiLph1tefvLJF
EVG/9cWLw7XvFRH1AY7NZ57Rvz+R9Hzsl7Zp1OM4kt9XDqVPzQ78VRFRz6y8
vbJdnCKinhP9eE/HqYpI9+Fz3y+teE0R6Tov9O05wl4RUU/x6jhjaa5GRD3q
pYlhKa0WIr2Od15d3iajkYh6a/+Qae3bNxBR921/aeFsPY4gUe+09Zeujeka
EfUQz11/DNnYQCR92lnz4zkNRNS9yl5+Nm+GhYh63sLAscOmakTUqyNrDi/R
1/lI1E0LjR3LPBQRdb9lV5a+pd9vSNQLL3ccMlH/PkCibn7yQnh/fZ2PlOKS
L8QtJOoesP7yYOswaT8p5cWQUt5byi9J+zhpvSTFJbtuvZuG6PEIifr0sl7b
ZujxCIn6ySUD0r7R4xGSXt/C3u8ePaCIqGe0X5SwUF9PIunzKjjTlLlXEVFv
mX7g3d56XEOm7qwMHlxxl/i4zs/PWPL79xqRnt+Tlurb8RoR9aKP5q2c+adG
RD377LOfLRmiiKiXDviP/9xZioh6zbCinZ0TFBH1oeVDXg1bpYiopzyza+jk
tYqIerfMB3dU639Hor797IeFnfU4iEQ9usOjGzfr+zAk3d8RH/89XX//kPy+
qvY63nr0R0Wkz9ftacMrwYqIurngsa7ufRWRPt9R/b3H3dSIqHu6rpo0IUMj
om740PEDlysWIupxq/8cGDirkUivY7HTg8P71BNRN64f3Xr4bAMR9eRnHXbm
DdCIqCdNy3l6SJSFiLrpxHvxm/zriahH3XrreNXgBiLqzvHdbev8LUS6Lw71
MlUFaUR6fzq0+XHwcY2IetC1h4f26qaI9Lp2j7DtOEwR6X17ZPW2F+Yp4g2I
RzdYXLoIcQuJeiSsvyL5Ogz2kX5sP5kK+bBUlheT8vtI6TxOyntL+SVpHyet
l6S41PRUVk6RHo+QqOeG29lc1OMRkj6vhYkv5fysiKi3Bl/1XKDva5Col7zh
/rj3D4qIeoDLpatr9yiiT2D8jJNn7hIfF7rwJ/OIZI2I+qBfvL6re1sjot5x
5s+/zPxdI6Ie9p/TX//1nCKiftx0PWfXW4pI94PPyMXDIhUR9ZhPRhf30tdh
SLr+8vQPZi9WRNQr/vihoOATRUR9/stFLbVzFRH17A8ePddP/31Iuu/fm9q1
3SZF5PeV19D1HUbo9ycS9YSFL3w3vqsiop7RPMqj4wmNSJ+LXbtnn5+rEem+
Mrz5sluehYh65s5vi+a0ayTSfb416mZJ1ytE1H2n7s6a/HY9EfWQ/LxkTV8/
Iel5OuQ+1M5sIdLnELls7dm+jUTUg4ebYpceMxNRN5v6ucSsrifSfRv4ypWO
D1iIqHtWz3OxddWIqJefe3jLmm0aka7zxzzPPfr3IxL15SeqEgeMVMQWiEct
LC4FQ9xCol4A668Ctg6bDPvIyWw/KeXFBkFefxDL7x+C88lD7JwSKdUJmOEc
zszO46S8t5RfkvZx0npJiksnV49yX6/HIyTqzdFDx3+q73+RqIeldz9l1PdB
SPrcX5i7rM16RaT788hcmxX6ehXpkfho9/6Nd0nv/9hT17vM04iod3ZbVXBW
v4+QqKc/Fjrz22yNSJ/7lT/8ndsqIuqJo91mN72kiKh38+1fFxygiHS/vtT2
QsC7ioh6zNxZzbVTFBH1619sHfl6qCLS9fNHf104WhHpfZ/Yb8wGb0VEfWbw
4cOf6es8JL+vbL6tTx4Qoe4S9NZjh7yaczQifY6vFvQr7aMR6f2eVffnw4EW
IurRWSN+enpcAxH1xvK9oZFr6oh0Pz8zxS0vzkxEvdPcbi6evo1Eev+8j390
domFiLrLDo/hYS4WIn3O2THbR+2oJ6Je8vNGg9ZQS6Tr5NhUG1ddIdJ9OPq1
NtHLGomoG6LPdSmqtBBRt3/i8C+uURoRddf1bhGhf2nE6xCPrrO4FA9xC4l6
Iay/Ctk6zBf2kb5sP+kI+TBHlhdbBnn9ZSy/vwrOJ1exc0oPqLPwYPUWSKl+
SaoTkM7jpLy3lF+S9nHSekmKS8En3DYfz1JE1GOf+bPdJH2/g0Td1Ha19ztL
FZHej5MxD3re+TsSdIfcocNv/6mI/f4z8r3gqRoRHxf691+dF1ssRNRzNLvt
5+ZoRPp8dx5r5/ebRkS99Ku2Xz/xgCLSfXVRG7zfRRFRT+g6LiutnyKivu37
c6HherxDot73w69/WdRLEVG/uCctte5BRUS9qWPdgp4NGhF1d5uQD8++roj8
vrK5lJ608E49ExL05S4uqWNPWYioFz7w+a3uuY1E1KscRm448mo9ke7b2OsD
+719mUjXOfaxXZ9rl4mo5z/29Nf/zq8n0v122nlA4PeNRNSN3bv4zWxuJKKe
FHp16UMtDUTU/edvnTYp20yk+3PSnwM3vFRDRN33YNbEiNt1RHpfT+QeTtnb
QES9Ov2MtmGshUj3V6/d10bq9yGyCeJRE4tLThC3kKi3wPqrha3DAmAfGcD2
kyWQDythebFzkNc/x/L7IXA+GcLOKe2gzsKO1VtIdWP0eoW6Sql+SaoTkM7j
pLy3lF+S9nHSekmKS82XCpbM07/3kajH7d34mrv+fY9EvXJLz0vtDYpI93nJ
trc7688baR7zWL81IRqR3pe6uh+PZ1qIqPt0H2HZ2Esjoj4z5Nk/hi/TiKj3
an02ylisEVEf9f3rSTvPa0T6HD9NuDLginaXoKd5nZ0dfEEjop64cdya5H0a
kd732aWVPis1IuqdY25/PX+cRkS9eH9N6Ixqjcjvq6Sv3nTaEa8RUY9ou299
3JUGIuqpb5v6/jrfTKT3f8bWwuuHLxBRtz3ystPENheJqHuarnZ9+00zka7z
2Nth/VwaiKiX7s3vPf1WAxH1vMcmHjtd0EBEPeYdm3+91aWeSM8/pcghbull
It3nlwtMWZbzRNTTb8TOz/zoMpE+h8Phmcc/rieinlV9KPBpfT2HvAbx6BqL
SxkQt5CoO8D6y4GtwyphH1nJ9pM5kA/LYXkxM+T1zSy/HwTnk0HsnDIS6iwi
Wb1FM9SLNbO6sWKoey1m9a9Iqd5bqquU6pekOgHpPE7Kexshr2Rk+SVpH1cC
66QStl6KhXgUy+JS9cLDK/2HKyK9D1NPXD/wrCKiHrE66Fe/DxQxzdum/yp9
nYTEx7lYfv1qh7+FiPrksaZua3ZbiKj3fXChrWNXjYh64tJotw1jNCK9jws+
v+AephFR91iRt+hVg0ZEvV/huTPzh2pE1OMX+59ubacRUU8dOerdmLUWIuq3
HM/H+j1lIaIesP7UwD3KQuT3VaedOe/P/auRiHrV6LzHk56oJdLrq448t+ir
E0TU7V/2/NNt6nEi6kn2aS6nHq8hol64o8eIF8eZiXT/JDr12Fp3hYh6XvvT
6Slu9UTUvQeWnX997BUi3T8zjz6ZvqOWiLrr1amzP3uimoi615Sm1vSpvxHp
fnmj58rDhgtE1JN3P+394K4rRDPEIzOLSxsgbiFRr4X1Vy1bh4XBPjKM7Se9
IB/mxfJiFZDXr2D5/SI4nyxi55StUGfRyuotoqBeLIrVjYVB3WsYq3+9CPX7
F1kdP32OrA+FPi9W7406r6uk+53VL6HO6wTo9cE5HBJ1nvdGneeX6HUI+zhp
vSTFpdI+c5dpv2tE1FuOj3697zmN6Pz3qqIh5+8SHzffJb/miGokou6Xv6bD
wY4WIv2+mLL1v462EFGvP9pldY+ZFiLqOUnbbWwNFiLq65584+etL1qIqF+7
0rPXH+WNRNS1d5YlfPViI5Ge58uZNxPdGoio51asG77/zBUi6o7PZxekD2wg
8vsquanztAd+qyOibrz13tNjmnKJXlWpN4Zdx/eR/9H3o98/89drR44TUY9p
3+udh6ZcJNLn/ukXPZcPukyk99uz9s2afrVE1KvNsd+OvXyZiHrY2svv/vRs
DZFe15IPMp70P0+k5+n5+HW7tJK7/GlMpP23FvF1tcxwWLNu32liKcSjUhaX
lkPcQtL7X2pdfyFRl/aTkZAPi2R5sU5vWfP6SLoOnE+6s3NKf6iz8Gf1FuVQ
L1bO6sZcoe7VldW/Tof6/emsjr8U+pBKeT8S9MUZWX+c1Ici1XtLdZVS/ZJU
JzAUzuGGsvM4Ke+N5Pkl1PNg/4ak9wnWSUi6f1hcos9zbM4fjn00IupVT6a9
0eaEIm46sj7ScL2RSL9vZ+owz26NRNS3j987bWRFAxH1ftMuveYT20BE3bDU
v8PI5noi3c9/Bz84u2c9kT73YVsevnLeTET9xo/+Yw5crCWibvdXQdCmzEtE
1Gu2pxz4ruQsEXXbx7YnvX2omsg/F8PNCZ+8d7aQWDhz57Tf8zGu3P2TcCTk
lV7/brxHx+vYV877ZFrvX4moJ3/it+zV7Eoi6sYDRyZuH32KiLpPwvrd9c6n
ifT4H49FDlxxgoi6a3b6rCMDy4lRn1d8OYjqfe7+Wb1/2YDgf9fdo8c8kNru
jY6X79G9IR55s7hUDnELiXo0rL+i2TqsFvaRtWw/GQP5sBiWFwuDvH4Yy+87
H7SeTyJR3wV1FrtYvUU21Itls7qxcVD3Oo7VvxZB/X4Rq+OX+pHo/a+z9lci
pb7dTtAX14n1x0l9KFK9twHqKQ2srtIe6pbsWf1SCNQHhLA6gQg4h4tg53F9
Id/dl+W96yGvVM/yS+mwf0tn+zgnWCc5sfUSshriEZI+5/Ff9f1pn0bMvNT9
jY0pd4mP6+4zze54eCOR7rfd67sv+LOeiLrn9N86PLf2ChH1zDaP7lh/rY6I
+oSsC2MHbL9MRP3iU7l2p8ZdJKIetOBIgWP+KSK9Tsfvmj0c8on/fB/u/lHZ
oZGGunv/HxYuXdGY/nvd4KFJB7w3775yz793u/FHw7P97v251h7ZR9tdaLhH
L/m5z6MbC+6ND/i8jDErngv/Yg8RdedTezw+G15MpMfffmLx6o+NRNTj3vhs
uPPDW4hdfv9mpd0z9673jO9n/u1H9Qh3/zhNnB0Y0PXSPbp/qzUeIfH38cd9
P3Cgl11W9T36oOMPeI7a1jjYNNm6j0TidYIhHxbM8mK+kNf3Zfl96ZzSH+os
/Fm9RQnUi5WwujEfqHv1YfWv8VC/H8/r+IFeZ6x9SUjU+06x9lciw6AvHEm/
F3wEfJifgNS3+xH0xX3E+uOkPhSp3luqq5Tql6Q6gQlwDjeBncdJeW8pv7QI
9m+L2D4uC9ZJWWy9lA3xKJvFpXOm61tPOSoi6s5OYxassNOIqAf2qj+3o7KR
SPfP92GvHl/YQES9useayoP7rxBRT5nkse6dUXVE1ENDpxZ/P+ASEXVD+1O3
M0ecIP7zvrr7p8RhU8YTdfeuewy2f30fFHx8cNzZKeUpFZuI/7xO0+CktS7P
RJ+vItJ9ty9yyruJFUT6ufeqnK86nbpL0I1v2rnYHTlLRN3rtlfCtgeriag3
rvGvsvWpJtLzCXZcMLTfeSLqfr+sDnnqyBki6tP/s+Zm2qHfiXSdsqtxA9wq
iNWwTqq+/d/j0uk2s+LmV5+5Ry+78E7+tl36urafdR+JxOvkNFnzYUjUR0Fe
fxTL79vC+aQtO6ccA3UWY1i9hRvUi7mxujFXqHt1ZfWvy3Ks9ftIuv54ax8S
EnVn6KdEoh4PfeFI1AvA36KA+VxIPieSn0At9OvWsr7dFOiLS2H9cVIfilTv
3QnqKTuxukqpfkmqExgE53CD2HmclPeW8kthsH8LY/s4ab3UDeJRNxaXcp4v
ff4/LhoR9ZDfFs36YKWFiPqAZT+857WukYj6oo6RKwf0aiCiPnPUtRHV+n2J
RD2x6DnXqPOXiKiXTzuzecqsCiLqNuxPSGLR2rHv37uemDPn0FK79xoHNy6e
VxB84TLxn9dpGhwbH3DysvEKEfXGM7POTmqsJaLus7CH45976oioJ/1w4LPv
I81Eel+HvhPUdo+ZiHrqrYcC0jLMRNT9PcJfXv2MmYi6S3yX+TbD6oioB50Z
8Wmkfx0RdR6fvMqtcQspvZ+u6/0Na5vvXV9m7OvVtuicGmwP+TB7lhczQV7f
xPL7BjifNLBzyhios4hh9Ra2UC9my+rGFkHd6yJW/+oL9fu+rI6/wNbah4RE
/Qb0U95gfZWB0BceyPrDo8DfIor5XJSDT0858+uR/JdKwd+klPmcSH4CUt+u
1B8n9aFI9d75UE+Zz+oqu0HdUjdWvyTVCXjAOZwHO487BPnuQyzvnQd5pTyW
X6qB/VsN28eNg3XSOLZekuKS6aelrj++YSGibvfLnnq79xuJqNvctPH56Kf6
uwS904NOObav1RFR905JGvTc2nNEug77s3rq1U6/VajBxleG+dUW/UDEx/fy
6rF7b4eLRHq9ZS3xHU80EP95ff39O5u0Y6Ye/5H0uvd/9bzjtAYi6q4tn5YH
b20gol54efbNQc0NRNSzfhqnfm/bSEQ9eI/q0Vd/PkjUlzs8vKFgUQMRdafY
bjUNeQ1E1HnddzHErWIWv4L/tK6/kNL7fDr5o6lzJlkGJ2225sOQ+Hh/yOv7
s/y+G5xPurFzykyos8hk9RbboF5sG6sb84e6V39W/9oR6vc7sjr+CdCHNIH1
IwW8Yu2nRKIeCH3hgaw/3Bf8LXyZz0WHH60+PUjUJd8xyRdO8l+SfE4kPwGp
b1fqjzsJ/ScnWR9KAtR5J7B6b6mu0gXqllxY/ZJUJ2CGczgzO4+T8t5SfskP
9m9+bB/nBeskL7Ze6gTxqBOLS8dfjDpu81oDEfWmN15eHLjQTES9Odq5/a/H
LxBR92m/4ruKPcVE1Pt6fXrgh6sHiag3JmV+/NjqS0R6f7SNfcLyrxDpfbgZ
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
hu2/HV6x7tORIZd6ln8w515/mISmk9c+63HhHn3V+mFuJw7e289ErwvyDEaW
b8iDvEQey0/YdrXmMZCoO0Lew5HnPyBP0sryJdWQV6lm+ZVcyMPksnxMDORt
Ylj+xhvyPN4s31MDeaEalh+KgDxSBMsnSfknKV8lzQGX8mFS/kyaHyfNaZLm
oUj5PylfKPnoSn6V3BdugOC/JPmcSH4CeP2WCGveFUnvs9AfJ/WhSPXeUl1l
HOSZ41i+WaoT4OdxUt5byi9J+ziktF6S4lIw5PmDWb6/FM4FStn5QDCcIwSz
8wRHOHdwZOcPCXBOkcDOK2zwXIOdb8T1tJ6DIDstmbLKMe3e9VJRcM3ebw/K
Pldx3a3nMkjUm1qs5zhI1H3h3MeXnf+kwzlROjsvks6XzHAOZWbnUU5wbuXE
zq9i4Zwrlp135cG5WB47H7NJhnO05H+ep2XBuVsWO39zhXM6V3ZeJ53v+cM5
oD87D8yDc8M8dn4onTe2wrlkKzufrIRzzEp2ninNj5PmNPnDuao/O1+V5g5I
/t554J+bx3x0HcGn0pH5VZrBD87MfOG4/5LpPj4nJvARMDE/AalvV+qPk/pQ
pHrv5XCOv5yd5/P6JalOQDqPk/LeUn4JKe3jpPWSFJeioe4imtVfGKBOw8Dq
NYKgriOI1XdkfWmtA0GinvGStW4EGf1eTs2e8/LnGzDDWpeCpPejg7WOBYl6
E9S9NLH6l0qok6lk9TJNUFfTxOprEqAOJ4HV4yRB3U4Sq9/xhDofT1bv0wp1
Qa2sPugk1BGdZPVEUv2RVK9kgromE6tvkuqhHKBuyoHVT0n1Vi1Ql9XC6rOk
ei6p/kuatyvVl3lBHZoXq0eT5jRJ81CkuQOSv7fkoyv5VcaBH1wc84WrBt+l
aua/JPmcSH4CUt+uP9Qx+rN6RqkPhdd7S+slqX5JqhOQzuOkvDdSyi+J+zhY
JwWx9ZIUl2ywDpbVw+Y8YK2bRdJ9MsxaZ4tEPfkBa10ukt7Pr6x1vEh6/6Hu
t4nV/5qhTtjM6oWdnax1xUjUM6EOOZPVIzdC3XIjq192hzpnd1bvnAJ10Sms
PjoX6qhzWT11LNRdx7L66+lQpz2d1WunQl13KqvvroY68GpWD54HdeN5rH7c
GerMnVm9uVSfLtWzV0HdexWrf4+COvkoVi+fC3X1uay+XqrHl+btSnMtM6Av
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
WDLUvSaz+ld7qN+353X84FMZw/wqc8EPLpf5wkn+S93B36I787mg+0fwE5D6
dqX+OKkPRar3luoqpfolsU5AOI+T8t4tkFdqYfklvo8LgnVSEFsvxUA8imFx
qXrh4ZX+wxUR9Y/2bnzNPUIR6X5ru9r7HT1OIVHv/8LcZW3WKyLdz2+4P+79
gyKiPrzgTFPmXkVEPXPTzAVB+xQRde8vcxPsjigi6te32YUO0+MaEvXJx8aP
MZxURNTntPk5PaNKEfl9lXc1fOP1UI2Iurn/z+dLsjUi6tMfOhp/S9+XIlEP
aPI4/X2tRqT3O7Lm8BJ9v4pEPatDmx8HH9eIqJefe3jLmm0aEXX7Jw7/4hql
EVHP6bX72kg9DiKbIB41sbi0AeIWku5LWH85snWYGfaRZrafNEA+zMDyYv6Q
1/dn+f1QOJ8MZeeU0vw4aU5TPNS9xrP6V2nugAF8vQ3M39sF/HNdmI+u5FcZ
B/4WccznQvJfQko+J6KfgNC3K/XHSX0oUr23VFfpBHVLTqx+KQTqA0JYnYB0
HucI+W5Hlvfm+aV1sH9bx/Zx0nopBuJRDItLjZcKlsxLUETUY5/5s92ktYqI
+uT07qeMmxUR9RvBVz0X7FJE1DPaL0pYaFRE1JNLJ22K1Z83ku7nHR8E3ihT
RNQHHOh9O7BSEVEP9PfzOajHKSTq2f5PF3+uxykkv6+ci24+adukEVHvZL58
c5ijIqJu+GNk2/A+ioh6deXqfWmeioi6aaGxY5mHIqIedO3hob26KSI9r+Z5
nnvunJsiQXdd7xYR+pdGlOJSBsQtJOpmWH+Z2TrMA/aRHmw/GQv5sFiWFxsO
ef3hLL9vg+eT7JxyPtRZzGf1FtlQL5bN6saSoO41idW/RkL9fiSr4/eCPiQv
1o8kzR2Q/L0lH91l4NOzjPn1SL5w9LwE/yXJ50TyE5D6dqX+uAToP0lgfShS
vbdUVynVL0l1Av5wDufPzuN43lvKL9nC/s2W7eNMsE4ysfWSFJdCTrhtPp6l
iKhfjx46/tOdikj34cLEl3J+VsS7eu93jx5QRNSbr713doYej5CojxvqdvWE
vn5Con5u08DiiXo8QqJ+8atzqX30eISkz9XJvybivCLy+6pvaJd3e/sqIuop
G8p/8n5bEVFfXjtl84nJioi605CCF6L0vyNR91t2Zelb4xURdePuEbYdhyki
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
WZ2AdB4n5b2l/JK0j5PWS1JcGvDYqCvd9XiERL3g0uyjnyhF5PcVJ49fqLeF
9Vdbtg6T9pNSXkzK7x+C88lD7JzSHeos3Fm9hVQ3Vgx1r8Ws/rUa6verWR1/
KfQhlbJ+JKR9nbW/EhkBfeFIep/B36KA+VxUgE9PBfPrcQe/MXfmO9Y20eqb
iKTXK/jAngYf69PMz/o6+PFfZ77822GuyHY2X0SaAy7Ne7vfXEtpfpw0p0ma
hyLNHZD8vSUfXcmvUvKFk/yXYsHfJJb5nPiCj4Av8xPgfbuo8/44qQ9FqveW
6iql+iWpTkA6j5Py3lJ+SdrHSeslKS65Fn7QZ1+TIvL7Ku+VXp2X6I9Hou5S
fXm/q/54pLTuku5b6fFIPqd1F/z+Xfd5Hvw60r/z60vP837XT/975bIXdB0p
vS5J5z/Pr5+5ZdSrMbqORN0+xfzt6KuK2Inxfj8v/bt0Hen33u/6lQe3RNzR
kfzf78fj8HPHhZ93PhNiu17XkfS+Xhj1xtoWJfJ+Py/9exr8fBq7jvR773f9
jFfb29/Rkf/r/cN/nl/f++hs9+26jkTd1ze53+hWRRzKiI8bBD83iP28dH3p
OtLvvd/1g22CXryjI//X++d+P59ZVPrj3jv3LxD1nPH53s/fUiLv9/PSv0vX
kX7v/a7v9+iS7Xd05P96//Cf59dv7HE8yqjrSNSjq8efeFy/DnIOIz5Og5/T
2M9L15euI/3e+10/38n2/Ts68n99f/jP8+v7vz7naLGuI1G3+8vy91L9OsgO
jPi4UfBzo9jPS9eXriP93vtdP/nAwv/Tkfzf78dV8HOrhJ9PH59469c7329A
el0HR7Tdpz8/pB8jPm4d/Nw69vPS9UfBz49i15F+r3T9/wckshu1
               "]], {}}, {
            DisplayFunction -> Identity, DisplayFunction -> Identity, 
             Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, AxesLabel -> {None, None}, 
             FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> 
             Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
             DisplayFunction :> Identity, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "GridLinesInFront" -> True}, 
             PlotLabel -> 
             FormBox["\"Imaginary Part of S3\"", TraditionalForm], 
             PlotRange -> {All, All}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
           FormBox[
            FormBox[
             TemplateBox[{
               FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{
                    Rational[-15, 2], -180}, {
                    Rational[15, 2], 180}}], {Antialiasing -> False, 
                    AbsoluteThickness[0.1], 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                    LineBox[
                    NCache[{{
                    Rational[15, 2], -180}, {
                    Rational[-15, 2], -180}, {
                    Rational[-15, 2], 180}, {
                    Rational[15, 2], 180}, {
                    Rational[15, 2], -180}}, {{
                    7.5, -180}, {-7.5, -180}, {-7.5, 180}, {7.5, 180}, {
                    7.5, -180}}]]}, {
                    CapForm[None], {}}, 
                    StyleBox[{Antialiasing -> False, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -168.22429906542058`}, 
                    Offset[{4., 0}, {7.5, -168.22429906542058`}]}, {{
                    7.5, -84.11214953271029}, 
                    Offset[{4., 0}, {7.5, -84.11214953271029}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 84.11214953271029}, 
                    Offset[{4., 0}, {7.5, 84.11214953271029}]}, {{7.5, 
                    168.22429906542058`}, 
                    Offset[{4., 0}, {7.5, 168.22429906542058`}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -151.40186915887853`}, 
                    Offset[{2.5, 0.}, {7.5, -151.40186915887853`}]}, {{
                    7.5, -134.57943925233647`}, 
                    Offset[{2.5, 0.}, {7.5, -134.57943925233647`}]}, {{
                    7.5, -117.7570093457944}, 
                    Offset[{2.5, 0.}, {7.5, -117.7570093457944}]}, {{
                    7.5, -100.93457943925233`}, 
                    Offset[{2.5, 0.}, {7.5, -100.93457943925233`}]}, {{
                    7.5, -67.28971962616824}, 
                    Offset[{2.5, 0.}, {7.5, -67.28971962616824}]}, {{
                    7.5, -50.467289719626166`}, 
                    Offset[{2.5, 0.}, {7.5, -50.467289719626166`}]}, {{
                    7.5, -33.64485981308412}, 
                    Offset[{2.5, 0.}, {7.5, -33.64485981308412}]}, {{
                    7.5, -16.82242990654206}, 
                    Offset[{2.5, 0.}, {7.5, -16.82242990654206}]}, {{7.5, 
                    16.82242990654206}, 
                    Offset[{2.5, 0.}, {7.5, 16.82242990654206}]}, {{7.5, 
                    33.64485981308412}, 
                    Offset[{2.5, 0.}, {7.5, 33.64485981308412}]}, {{7.5, 
                    50.467289719626166`}, 
                    Offset[{2.5, 0.}, {7.5, 50.467289719626166`}]}, {{7.5, 
                    67.28971962616824}, 
                    Offset[{2.5, 0.}, {7.5, 67.28971962616824}]}, {{7.5, 
                    100.93457943925233`}, 
                    Offset[{2.5, 0.}, {7.5, 100.93457943925233`}]}, {{7.5, 
                    117.7570093457944}, 
                    Offset[{2.5, 0.}, {7.5, 117.7570093457944}]}, {{7.5, 
                    134.57943925233647`}, 
                    Offset[{2.5, 0.}, {7.5, 134.57943925233647`}]}, {{7.5, 
                    151.40186915887853`}, 
                    Offset[{2.5, 0.}, {7.5, 151.40186915887853`}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "1.`"}], 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -168.22429906542058`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "5.`"}], 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -84.11214953271029}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0.`", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, 84.11214953271029}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
                    TemplateBox[{"10.`", 
                    RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, 168.22429906542058`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                    False], {{
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], 
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
                    "GraphicsAxes"}, StripOnInput -> False]}, 
                    PlotRangePadding -> Scaled[0.02], PlotRange -> All, Frame -> 
                    True, FrameTicks -> {{False, False}, {True, False}}, 
                    FrameStyle -> Opacity[0], FrameTicksStyle -> Opacity[0], 
                    ImageSize -> {Automatic, 360}, BaseStyle -> {}], 
                   Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]}, "BarLegend", 
              DisplayFunction -> (#& ), 
              InterpretationFunction :> (RowBox[{"BarLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"z$", ",", 
                    RowBox[{"seismicColors", "[", 
                    RowBox[{"Rescale", "[", 
                    RowBox[{"z$", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "maxAbsIm3$14517"}], ",", 
                    "maxAbsIm3$14517"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.0699992838287147`*^-13"}], ",", 
                    "1.0699992838286758`*^-13"}], "}"}]}], "}"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                   RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
                   RowBox[{"ScalingFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                   RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
                 "]"}]& )], TraditionalForm], TraditionalForm]},
          "Legended",
          DisplayFunction->(FormBox[
            GridBox[{{
               TagBox[
                ItemBox[
                 PaneBox[
                  TagBox[#, "SkipImageSizeLevel"], 
                  Alignment -> {Center, Baseline}, BaselinePosition -> 
                  Baseline], DefaultBaseStyle -> "Labeled"], 
                "SkipImageSizeLevel"], 
               ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> Automatic, BaselinePosition -> {1, 1}],
             TraditionalForm]& ),
          Editable->True,
          InterpretationFunction->(FormBox[
            RowBox[{"Legended", "(", 
              RowBox[{#, ",", 
                RowBox[{"Placed", "[", 
                  RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
            TraditionalForm]& )],
         StripOnInput->False,
         ImageSizeMultipliers->{1, 1}], {478.4, -195.825}, {Center, Center}, {299., 373.},
        
        BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
     DisplayFunction->Identity,
     ImagePadding->{{0., 0.}, {0., 0.}},
     ImageSize->{637.8666666666667, 391.65},
     Method->{"IgnoreImageSizeAutomaticLimit" -> True},
     PlotRange->{{0, 637.8666666666667}, {-391.65, 0}},
     PlotRangePadding->Automatic], {334.88, -205.61624999999998}, 
    ImageScaled[{0.5, 0.5}], {637.8666666666667, 391.65},
    BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], {}},
  ImageSize->{918.3359375, 564.4488701048716},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.955510823186515*^9, 3.9555109582752523`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"f942615e-a3c9-454c-8030-cd5a27437a16"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coupled Electron-Nucleon System", "Section",
 CellChangeTimes->{{3.94593982302686*^9, 
  3.9459398379717627`*^9}},ExpressionUUID->"ac831b7b-e69a-44a6-ba05-\
4c4184ff4fda"],

Cell[CellGroupData[{

Cell["Defining Operators and Modelling", "Subsection",
 CellChangeTimes->{{3.945939846563394*^9, 
  3.9459398796701117`*^9}},ExpressionUUID->"6fcd8f19-db6c-43f4-a5c8-\
07af4c247b0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", " ", "j"}], "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Jz", "[", "j_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"Table", "[", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"-", "j"}], ",", "j"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Jplus", "[", "j_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", "=", 
       RowBox[{"dim", "[", "j", "]"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "==", 
          RowBox[{"k", "+", "1"}]}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"m", "=", 
             RowBox[{"k", "-", 
              RowBox[{"(", 
               RowBox[{"j", "+", "1"}], ")"}]}]}], "}"}], ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "m"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"j", "+", "m", "+", "1"}], ")"}]}], "]"}]}], "]"}], ",",
          "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "d"}], "}"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Jminus", "[", "j_", "]"}], ":=", 
   RowBox[{"ConjugateTranspose", "[", 
    RowBox[{"Jplus", "[", "j", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Jx", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Jplus", "[", "j", "]"}], "+", 
      RowBox[{"Jminus", "[", "j", "]"}]}], ")"}], "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Jy", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Jplus", "[", "j", "]"}], "-", 
       RowBox[{"Jminus", "[", "j", "]"}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "I"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.949986143746707*^9, 3.9499861532352047`*^9}, {
  3.94998619159621*^9, 3.949986248319931*^9}, {3.949986415629743*^9, 
  3.949986415701158*^9}, {3.949986701752173*^9, 3.9499867368036337`*^9}, {
  3.9499867785122137`*^9, 3.949986779499839*^9}, {3.949988623695879*^9, 
  3.949988626006708*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"1b65c495-93fa-4a66-bccd-c3404b4d3396"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"j", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nNStates", "=", 
   RowBox[{"dim", "[", "j", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nEStates", "=", 
   RowBox[{"dim", "[", 
    RowBox[{"1", "/", "2"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.949986836355688*^9, 3.949986905026762*^9}, {
  3.9499878492874203`*^9, 3.949987851005013*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"70c41c1f-d636-40b3-868f-bbfa067c9209"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hbar", "=", 
   RowBox[{"6.582", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"2", "*", "Pi", "*", "hbar"}]}], ";"}]}], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"7c569008-afa8-4399-ba83-8c188b7dc594"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"100.2", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}], "*", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"1.27", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}], "*", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]gE", "=", 
   RowBox[{"0.172", "*", "hbar"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]gN", "=", 
    RowBox[{"9.329", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}], "*", "hbar"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Electron", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sxE", "=", 
   RowBox[{"Jx", "[", 
    RowBox[{"1", "/", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"syE", "=", 
   RowBox[{"Jy", "[", 
    RowBox[{"1", "/", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"szE", "=", 
   RowBox[{"Jz", "[", 
    RowBox[{"1", "/", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sE", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"sxE", ",", "syE", ",", "szE"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "Nucleon", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sxN", "=", 
   RowBox[{"Jx", "[", "j", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"syN", "=", 
   RowBox[{"Jy", "[", "j", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"szN", "=", 
   RowBox[{"Jz", "[", "j", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sN", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"sxN", ",", "syN", ",", "szN"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Magnetic", " ", "Field"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b0", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"b0", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.945939904193028*^9, 3.945939940832005*^9}, {
   3.945939973276361*^9, 3.945939979489401*^9}, {3.945940031717098*^9, 
   3.945940141664378*^9}, {3.949986273098495*^9, 3.949986297066771*^9}, {
   3.9499866829599047`*^9, 3.949986713479373*^9}, {3.94998692025618*^9, 
   3.949987057892249*^9}, {3.949987119422496*^9, 3.94998712715695*^9}, 
   3.9499873236001863`*^9, {3.949987372789568*^9, 3.949987390473651*^9}, {
   3.949987426000819*^9, 3.94998743223949*^9}, {3.949987491948441*^9, 
   3.949987492071059*^9}, {3.9499875710142107`*^9, 3.9499875711234837`*^9}, {
   3.949987614184746*^9, 3.949987637902417*^9}, {3.949987838218122*^9, 
   3.949987858412301*^9}, {3.9499886578022013`*^9, 3.949988693703456*^9}, {
   3.950000981987876*^9, 3.9500010165884533`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"82b57f47-644b-4c6a-b2e5-a239429d7e91"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"\[Beta]gE", "*", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"B", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"sE", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "B", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"IdentityMatrix", "[", "nNStates", "]"}]}], "]"}]}], "+", 
    RowBox[{"A", "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"sE", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"sN", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "sE", "]"}]}], "}"}]}], "]"}]}], "+", 
    RowBox[{"P", "*", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "nEStates", "]"}], ",", 
       RowBox[{
        RowBox[{"(", "szN", ")"}], "^", "2"}]}], "]"}]}], "-", 
    RowBox[{"\[Beta]gN", "*", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "nEStates", "]"}], ",", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"B", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"sN", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "B", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"H", "/", "hbar"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", "H", "]"}], "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.949987094483039*^9, 3.949987101971427*^9}, {
  3.9499871337410173`*^9, 3.949987136847974*^9}, {3.9499874667747087`*^9, 
  3.9499874793572407`*^9}, {3.949987547433591*^9, 3.9499875923515673`*^9}, {
  3.949987646443511*^9, 3.9499877148157167`*^9}, {3.95000103114463*^9, 
  3.9500010383378563`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"8f407dab-7a11-46e9-ae49-f5f1e7942637"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.00032276722922981537`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0043`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0004451768704034683`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0043`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.00030680793854957923`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0004451768704034683`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0043`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.0043`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0004451768704034683`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.00030680793854957923`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0043`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0004451768704034683`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0043`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "3.298299580844651`*^-7"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.00032276722922981537`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.949987064228869*^9, {3.949987102677944*^9, 3.949987137305316*^9}, 
   3.949987327097241*^9, 3.949987392661982*^9, 3.949987435107972*^9, {
   3.949987481141488*^9, 3.94998751536837*^9}, {3.949987547881929*^9, 
   3.949987590542148*^9}, {3.949987640832716*^9, 3.949987664424635*^9}, {
   3.9499877065997667`*^9, 3.949987715357765*^9}, 3.949987861261673*^9, 
   3.9499886011870213`*^9, {3.949988852306011*^9, 3.94998886279296*^9}, 
   3.949989520573904*^9, 3.949994259485545*^9, 3.949994325311267*^9, 
   3.950001047760552*^9, 3.955441615726295*^9, 3.955442681517118*^9},
 CellLabel->
  "Out[77]//TraditionalForm=",ExpressionUUID->"f90341fd-a536-4562-b824-\
d096a7ea7efe"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cops1", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "szN"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cops2", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"szE", ",", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cOpsList1", "=", 
   RowBox[{"{", 
    RowBox[{"cops1", ",", "cops2"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.949988878012086*^9, 3.949988915542691*^9}, {
  3.949988977987825*^9, 3.949989046996398*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b5bcdc4c-cebf-44f1-b36c-e8b2ce1ee79e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"measureops1", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "sxN"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"measureops2", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"szE", ",", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"measureOpsList1", "=", 
   RowBox[{"{", 
    RowBox[{"measureops1", ",", "measureops2", ",", "measureops2"}], "}"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"55875406-5194-4208-9e2e-079604f709f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]1", "=", 
   RowBox[{"5", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]2", "=", 
   RowBox[{"2", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]List1", "=", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]1", ",", "\[Gamma]2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]List1", "=", 
   RowBox[{"{", 
    RowBox[{"\[Beta]1", ",", "\[Beta]1", ",", " ", "\[Beta]1"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.949989310231283*^9, 3.949989371646737*^9}, {
  3.9499894038901377`*^9, 3.94998945370639*^9}, {3.9499896294616623`*^9, 
  3.949989629658947*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"6f207864-da34-4914-859b-305e21de0f4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CrossSpectrum1", "=", 
   RowBox[{"CalcSpectra", "[", 
    RowBox[{
    "H", ",", " ", "cOpsList1", ",", " ", "measureOpsList1", ",", " ", 
     "\[Gamma]List1", ",", " ", "\[Beta]List1", ",", " ", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.937455327995983*^9, 3.93745542568987*^9}, {
   3.937455536934416*^9, 3.9374555405741777`*^9}, {3.937455907900519*^9, 
   3.9374559208653393`*^9}, {3.937456025697392*^9, 3.9374561086110687`*^9}, {
   3.937456145176223*^9, 3.937456145237111*^9}, {3.937456272433316*^9, 
   3.937456273748322*^9}, {3.9374563047103853`*^9, 3.9374563082602863`*^9}, {
   3.937456420531698*^9, 3.93745642063666*^9}, {3.93745685214249*^9, 
   3.93745685458451*^9}, {3.937456954011746*^9, 3.93745698021555*^9}, {
   3.9374570938647833`*^9, 3.937457126086426*^9}, {3.937457219987104*^9, 
   3.937457223587492*^9}, {3.937457388116954*^9, 3.937457388206499*^9}, {
   3.937457518787352*^9, 3.93745752071142*^9}, {3.937457585260488*^9, 
   3.937457585321168*^9}, {3.9374576487097692`*^9, 3.937457648834208*^9}, {
   3.937457838236518*^9, 3.937457838391323*^9}, {3.9374579010352077`*^9, 
   3.937457901875801*^9}, {3.937463970538439*^9, 3.937463976805642*^9}, {
   3.937464081728971*^9, 3.9374640818157578`*^9}, {3.937464206754107*^9, 
   3.937464214028068*^9}, {3.937464312464815*^9, 3.937464328006016*^9}, {
   3.937466855392874*^9, 3.937466858569414*^9}, {3.9374669731312847`*^9, 
   3.937466973210281*^9}, {3.937467134676959*^9, 3.9374671381263533`*^9}, {
   3.9374677152306337`*^9, 3.937467718683299*^9}, {3.9374678092771397`*^9, 
   3.937467810872281*^9}, {3.937539877841963*^9, 3.937539886104644*^9}, {
   3.9375401168216867`*^9, 3.9375401168768587`*^9}, {3.937540219939838*^9, 
   3.9375402219391947`*^9}, {3.937540365313867*^9, 3.9375403653790693`*^9}, {
   3.9375405183878*^9, 3.937540524154172*^9}, {3.937540881725011*^9, 
   3.937540883202055*^9}, {3.937540941890255*^9, 3.937540943676223*^9}, {
   3.9375422406155443`*^9, 3.937542246366375*^9}, {3.949988607174074*^9, 
   3.949988608064186*^9}, {3.949989050367612*^9, 3.949989051161633*^9}, {
   3.9499891877266483`*^9, 3.94998925341614*^9}, 3.949989285680256*^9, {
   3.949989459219884*^9, 3.949989468882637*^9}, 3.949989533166623*^9, 
   3.955442928350593*^9, 
   3.955442962386841*^9},ExpressionUUID->"6b9ec554-2091-4587-a374-\
04d49b8fe851"],

Cell[BoxData[
 RowBox[{"PlotSpectra", "[", 
  RowBox[{"CrossSpectrum1", ",", 
   RowBox[{"{", "3", "}"}], ",", "0", ",", " ", "0.005", ",", "5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9499895820110407`*^9, 3.9499896194898453`*^9}, {
   3.949990608682083*^9, 3.949990609159527*^9}, 3.949994352804858*^9, {
   3.949997498512114*^9, 3.94999749861613*^9}, {3.950001083212242*^9, 
   3.950001085218771*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"05d6b0f5-8545-4292-bb2c-6ebaef909bc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{"Expand", "[", "CrossSpectrum1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.950001440236697*^9, 3.9500014504009943`*^9}, {
  3.950001599742338*^9, 3.950001612386518*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"599e8eb2-22d8-4ab9-a89f-6cdbd6f8678c"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{"\"ThirdOrder\"", "\[Rule]", 
         RowBox[{"Re", "[", 
           RowBox[{"Function", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\[Nu]1$", ",", "\[Nu]2$"}], "}"}], ",", 
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.00004999999999999998`", "\[VeryThinSpace]"}], 
                    "+", 
                    
                    RowBox[{"3.186890520727954`*^-22", " ", 
                    "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.5017801099564231`", "\[VeryThinSpace]"}], "-", 
                    
                    
                    RowBox[{"8.478796461904595`*^-16", " ", 
                    "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"0.498880140685332`", "\[VeryThinSpace]"}], "-", 
                    
                    RowBox[{"1.1102230246251565`*^-16", " ", 
                    "\[ImaginaryI]"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.00006036540385925128`", "\[VeryThinSpace]"}], 
                    "-", 
                    
                    RowBox[{"6.739141835355089`*^-20", " ", 
                    "\[ImaginaryI]"}]}], ")"}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Nu]1$"}]}]]}], ")"}]}], 
                    "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.2886626982509709`", "\[VeryThinSpace]"}], "-", 
                    
                    
                    RowBox[{"1.1268686062743304`*^-15", " ", 
                    "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"0.28538762359371084`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"1.124100812432971`*^-15", " ", 
                    "\[ImaginaryI]"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.00016907716873536133`", "\[VeryThinSpace]"}], 
                    "-", 
                    
                    RowBox[{"3.480852466022293`*^-19", " ", 
                    "\[ImaginaryI]"}]}], ")"}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Nu]1$"}]}]]}], ")"}]}], 
                    "+", 
                    TemplateBox[{"41"}, "OutputSizeLimit`Skeleton"], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.0017577413097701969`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.017377600010512667`", " ", "\[ImaginaryI]"}]}],
                     ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"22"}, "OutputSizeLimit`Skeleton"], 
                    "\[VeryThinSpace]"}], "-", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"21"}, "OutputSizeLimit`Skeleton"], 
                    "\[VeryThinSpace]"}], "+", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}], 
                    "-", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}]]}], 
                    ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.8458453557832293`*^-16", "-", 
                    
                    RowBox[{"0.0001344429973226074`", " ", 
                    "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
                    FractionBox[
                    RowBox[{"1.955474510217329`*^-16", "+", 
                    
                    RowBox[{"0.0001341593362677049`", " ", 
                    "\[ImaginaryI]"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.011139746317046029`", "\[VeryThinSpace]"}], 
                    "-", 
                    
                    RowBox[{"1.347468066034561`*^-18", " ", 
                    "\[ImaginaryI]"}]}], ")"}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Nu]1$"}]}]]}], ")"}]}], 
                    "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.0010282418694675854`", "\[VeryThinSpace]"}], 
                    "+", 
                    
                    RowBox[{"1.4648396229975308`*^-15", " ", 
                    "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"0.0010252045655576505`", "\[VeryThinSpace]"}], 
                    "-", 
                    
                    RowBox[{"1.5287213450277078`*^-15", " ", 
                    "\[ImaginaryI]"}]}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.01114481264860321`", "\[VeryThinSpace]"}], "-", 
                    
                    RowBox[{"1.6834713376103443`*^-19", " ", 
                    "\[ImaginaryI]"}]}], ")"}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Nu]1$"}]}]]}], ")"}]}]}],
                     ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}], 
                 "+", 
                 TemplateBox[{"1294"}, "OutputSizeLimit`Skeleton"], "+", 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
                    ")"}]}]}]}], "]"}], "]"}]}], "\[RightAssociation]"}], 
     Short[#, 8]& ], "line" -> 99, "sessionID" -> 24970123750003809502, 
   "byteCount" -> 3097163232, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.950001259439402*^9, 3.950001530110388*^9, 
  3.950001687890224*^9, 3.950001769251491*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"fc7ac478-53a9-49bf-ae90-7b78d5bfd2ad"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1497, 833},
WindowMargins->{{7, Automatic}, {7, Automatic}},
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9222de97-858b-4613-85de-b3c3a158be9a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 163, 3, 96, "Title",ExpressionUUID->"e2af0a20-4623-421f-a93b-bc7bbb16aa90"],
Cell[742, 27, 158, 3, 52, "Subtitle",ExpressionUUID->"fbbdfb67-d76c-43b5-a1b9-672bafeca68b"],
Cell[CellGroupData[{
Cell[925, 34, 146, 3, 67, "Chapter",ExpressionUUID->"d9a02863-91fb-4c0b-9660-92dbeb436084"],
Cell[CellGroupData[{
Cell[1096, 41, 174, 3, 66, "Section",ExpressionUUID->"99b945c6-8c58-426f-9e6f-5ca9490ea5de"],
Cell[1273, 46, 15305, 399, 479, "Text",ExpressionUUID->"7b8ca9ad-159a-43b2-9bc4-b2c01c93e8b4"],
Cell[CellGroupData[{
Cell[16603, 449, 166, 3, 53, "Subsection",ExpressionUUID->"ce6e27d9-4237-4474-bd50-11dae5e986ce"],
Cell[16772, 454, 1732, 46, 111, "Input",ExpressionUUID->"534e9f71-b5b3-47bc-a0cd-6fcdd4aeaebd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18541, 505, 161, 3, 53, "Subsection",ExpressionUUID->"a4fb3029-0c03-44a2-a61d-603c4eb45cb2"],
Cell[18705, 510, 7440, 187, 417, "Input",ExpressionUUID->"9264d800-87a6-43b6-bbf9-683cdb8ccf11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26182, 702, 160, 3, 53, "Subsection",ExpressionUUID->"78b43e72-1fad-4df9-99b6-5954b44ea0ad"],
Cell[26345, 707, 2573, 59, 213, "Input",ExpressionUUID->"da93aeca-f95e-4049-9975-4cc46eae5f47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28955, 771, 141, 3, 53, "Subsection",ExpressionUUID->"5576749e-56dc-4296-8eb5-3f19da25a524"],
Cell[29099, 776, 1921, 51, 144, "Text",ExpressionUUID->"619580d9-dd11-49df-a419-6c89b11b42e2"],
Cell[31023, 829, 2981, 72, 172, "Input",ExpressionUUID->"ac9c7e9b-d7be-4a9f-9175-31d2f2941ca7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34041, 906, 183, 3, 53, "Subsection",ExpressionUUID->"21b61330-5a62-4b0c-8899-e6815d316b47"],
Cell[34227, 911, 1701, 42, 90, "Text",ExpressionUUID->"ad6b8689-45c5-48f4-9999-e5dcd69e9471"],
Cell[35931, 955, 2794, 69, 213, "Input",ExpressionUUID->"5badf7d0-5815-4a39-95fa-dde7bf0330e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38774, 1030, 201, 4, 66, "Section",ExpressionUUID->"f62f30d9-26be-4d2d-b510-4c58b2d5276b"],
Cell[38978, 1036, 2911, 67, 131, "Text",ExpressionUUID->"0c926947-1851-48ce-9303-596df5637a09"],
Cell[41892, 1105, 1846, 41, 131, "Input",ExpressionUUID->"2987aeb1-e24d-43fe-9771-7a17682a1cfd"],
Cell[43741, 1148, 1534, 37, 131, "Input",ExpressionUUID->"7bf0f522-8b89-4acd-8076-0cea5facc5ef"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45324, 1191, 169, 3, 67, "Chapter",ExpressionUUID->"fbfafeb4-a239-4543-ab16-cb98e0ae16f4"],
Cell[CellGroupData[{
Cell[45518, 1198, 149, 3, 66, "Section",ExpressionUUID->"2812a318-ab63-4cb7-bb1b-ad10ae805adc"],
Cell[45670, 1203, 1429, 34, 49, "Text",ExpressionUUID->"00ddad8b-185d-4e60-8dfa-c39607ae5e3c"],
Cell[47102, 1239, 2568, 65, 172, "Input",ExpressionUUID->"94f3d3b6-cb38-4ea3-9ef0-b4110c99fe5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49707, 1309, 146, 3, 66, "Section",ExpressionUUID->"65c91c2b-f5e2-4666-a3d0-d9333f73cc1b"],
Cell[49856, 1314, 665, 16, 49, "Text",ExpressionUUID->"65e17c43-13e7-4c79-ac7a-4d99923a7201"],
Cell[50524, 1332, 3714, 91, 192, "Input",ExpressionUUID->"9aba14cd-4d94-4d92-880d-6f38ee049b52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54275, 1428, 149, 3, 66, "Section",ExpressionUUID->"c47ceba5-1174-41a4-ba5e-be1b8819a8a4"],
Cell[54427, 1433, 145, 3, 49, "Text",ExpressionUUID->"59fe6340-1ff3-4d68-8b0d-6c8a4f0a0c0c"],
Cell[54575, 1438, 5157, 120, 335, "Input",ExpressionUUID->"672e6964-9eba-4955-845d-d3723bcd4c31"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59781, 1564, 170, 3, 67, "Chapter",ExpressionUUID->"62e56e59-077a-403f-a726-9b7fd40f5328"],
Cell[CellGroupData[{
Cell[59976, 1571, 140, 3, 66, "Section",ExpressionUUID->"693caea1-62eb-43f5-9152-39ba4b631f83"],
Cell[60119, 1576, 3018, 75, 274, "Input",ExpressionUUID->"1ae29d08-1de9-4ac7-bfbf-898e5dba9293"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63174, 1656, 139, 3, 66, "Section",ExpressionUUID->"bb79e6fc-005d-4283-b79f-b15bba5297c3"],
Cell[CellGroupData[{
Cell[63338, 1663, 971, 26, 49, "Input",ExpressionUUID->"5f27cc6c-a34d-4293-bb6b-d9ada186a38a"],
Cell[64312, 1691, 4155, 71, 47, "Output",ExpressionUUID->"67903a37-f208-48b0-9980-73ed5d94b5e0"]
}, Open  ]],
Cell[68482, 1765, 8140, 189, 601, "Input",ExpressionUUID->"f45458c7-f2b2-4a8e-8221-b5bb493c7f81"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76671, 1960, 271, 5, 83, "Chapter",ExpressionUUID->"44fc1c05-8ef8-4440-a3e8-9f3087c837d6"],
Cell[76945, 1967, 5419, 135, 214, "Text",ExpressionUUID->"7b7b9b99-83b1-4231-9fb1-db042005e1d2"],
Cell[CellGroupData[{
Cell[82389, 2106, 1316, 31, 48, "Input",ExpressionUUID->"48ca6f77-c103-4d52-90be-b8363df19ad0"],
Cell[83708, 2139, 124941, 2151, 259, "Output",ExpressionUUID->"add38ea8-5cbd-4d04-aa16-a42d72cdc86b"]
}, Open  ]],
Cell[208664, 4293, 5383, 142, 140, "Text",ExpressionUUID->"f5618a32-2ac3-4b87-9889-39c168b1e912"],
Cell[CellGroupData[{
Cell[214072, 4439, 1960, 53, 167, "Input",ExpressionUUID->"c1790823-6cb2-4bab-bad6-7fab090e7c7e"],
Cell[216035, 4494, 12958, 246, 228, "Output",ExpressionUUID->"0592c70e-f0a9-4001-a02c-3e129f9b4fbd"]
}, Open  ]],
Cell[229008, 4743, 380, 8, 49, "Text",ExpressionUUID->"5cef91da-4f48-424d-b898-48d43b760597"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229425, 4756, 176, 3, 67, "Chapter",ExpressionUUID->"07b6362e-3587-42c7-adbb-7950c9383188"],
Cell[229604, 4761, 1714, 44, 111, "Input",ExpressionUUID->"18da1754-4eda-4659-9111-9b0aa3ed8c5d"],
Cell[CellGroupData[{
Cell[231343, 4809, 408, 7, 29, "Input",ExpressionUUID->"21c42944-0ff5-4b87-b886-bedd6c001c87"],
Cell[231754, 4818, 155444, 2657, 581, "Output",ExpressionUUID->"f942615e-a3c9-454c-8030-cd5a27437a16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387235, 7480, 177, 3, 66, "Section",ExpressionUUID->"ac831b7b-e69a-44a6-ba05-4c4184ff4fda"],
Cell[CellGroupData[{
Cell[387437, 7487, 182, 3, 53, "Subsection",ExpressionUUID->"6fcd8f19-db6c-43f4-a5c8-07af4c247b0d"],
Cell[387622, 7492, 2624, 78, 131, "Input",ExpressionUUID->"1b65c495-93fa-4a66-bccd-c3404b4d3396"],
Cell[390249, 7572, 502, 12, 70, "Input",ExpressionUUID->"70c41c1f-d636-40b3-868f-bbfa067c9209"],
Cell[390754, 7586, 315, 9, 49, "Input",ExpressionUUID->"7c569008-afa8-4399-ba83-8c188b7dc594"],
Cell[391072, 7597, 2906, 75, 376, "Input",ExpressionUUID->"82b57f47-644b-4c6a-b2e5-a239429d7e91"],
Cell[CellGroupData[{
Cell[394003, 7676, 2322, 61, 90, "Input",ExpressionUUID->"8f407dab-7a11-46e9-ae49-f5f1e7942637"],
Cell[396328, 7739, 4968, 111, 138, "Output",ExpressionUUID->"f90341fd-a536-4562-b824-d096a7ea7efe"]
}, Open  ]],
Cell[401311, 7853, 708, 19, 70, "Input",ExpressionUUID->"b5bcdc4c-cebf-44f1-b36c-e8b2ce1ee79e"],
Cell[402022, 7874, 646, 18, 70, "Input",ExpressionUUID->"55875406-5194-4208-9e2e-079604f709f8"],
Cell[402671, 7894, 976, 28, 111, "Input",ExpressionUUID->"6f207864-da34-4914-859b-305e21de0f4b"],
Cell[403650, 7924, 2391, 37, 29, "Input",ExpressionUUID->"6b9ec554-2091-4587-a374-04d49b8fe851"],
Cell[406044, 7963, 486, 9, 29, "Input",ExpressionUUID->"05d6b0f5-8545-4292-bb2c-6ebaef909bc8"],
Cell[CellGroupData[{
Cell[406555, 7976, 297, 5, 29, "Input",ExpressionUUID->"599e8eb2-22d8-4ab9-a89f-6cdbd6f8678c"],
Cell[406855, 7983, 8936, 201, 183, "Output",ExpressionUUID->"fc7ac478-53a9-49bf-ae90-7b78d5bfd2ad"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

